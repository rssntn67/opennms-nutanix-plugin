{
    "info": {
        "version": "3.1.0", 
        "description": "Move programming from the user to the machine.", 
        "title": "Nutanix Intentful API"
    }, 
    "paths": {
        "/oauth/client/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves all oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "description": "Retrieves all oauth clients"
            }
        }, 
        "/users/info": {
            "get": {
                "description": "Gets the Access Control Policies attached to a user,\nalongwith other user-specific information.\n", 
                "tags": [
                    "users"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves the Access control policies and other user data\nfor logged in user.\n", 
                "x-ntnx-kind": "user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_info"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/restore": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_realize_restore_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Restore a vm recovery point for the given time point.", 
                "x-ntnx-operations": [
                    "restore"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "description": "Submits a request to create a task handling the restore of a vm recovery point given a timestamp to recover to, returns the task reference. This operation is used to create a vm out of a backend selected vm recovery point that is around the desired time point. Follow the task to get the reference of the created vm.\n"
            }
        }, 
        "/ncc/collect_logs": {
            "post": {
                "description": "This operation submits a request to create a new log collection based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ncc_collect_logs_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ncc"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new log collection", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ncc", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ncc_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ncc_collect_logs_response"
                        }
                    }
                }
            }
        }, 
        "/external_repositories": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "external_repository"
                ], 
                "summary": "Create a new external_repository", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "external_repository", 
                "description": "This operation submits a request to create a new external_repository based on the input parameters.\n"
            }
        }, 
        "/racks/{uuid}": {
            "put": {
                "description": "Update rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update rack", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update rack", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete specified rack", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves specified rack", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }
        }, 
        "/portal_services/support_cases/upload": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Upload attachements for a specific support case.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "support_case_upload", 
                "description": "Given an intentful spec, trigger ncc health check and log uploads for a specified support case."
            }
        }, 
        "/clusters/{uuid}/certificates/csrs/{node_ip}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "node_ip", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Download CSR from a discovered node", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Download Certificate Signing Request from a discovered node"
            }
        }, 
        "/remote_connections/list": {
            "post": {
                "description": "Retrieve list of remote connections", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_list_metadata"
                        }, 
                        "required": false, 
                        "description": "A remote connection object", 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get list of remote connections", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/user_groups/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_group_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Get a list of existing User Groups", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "This operation gets a list of User Groups, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/volume_groups/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }, 
                        "required": true, 
                        "description": "Volume group object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Update a existing volume_group", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "volume_group", 
                "description": "This operation submits a request to update a existing volume_group based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Delete a existing volume_group", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "volume_group", 
                "description": "This operation submits a request to delete a existing volume_group."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "description": "This operation gets a existing volume_group.", 
                "summary": "Get a existing volume_group", 
                "x-ntnx-ref-keys": [
                    "volume_group_reference"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-ntnx-operations": [
                    "view"
                ]
            }
        }, 
        "/remote_rpc_request": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_rpc_request_input"
                        }, 
                        "required": true, 
                        "description": "RPC payload.", 
                        "name": "payload", 
                        "in": "body"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Name of the service whose RPC needs to be invoked.", 
                        "name": "service_name", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "integer", 
                        "description": "Port at which the service is running", 
                        "name": "port", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "integer", 
                        "description": "timeout in milliseconds.", 
                        "name": "timeout_ms", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "base url for rpc call.", 
                        "name": "base_url", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Execute Remote RPC", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "description": "Execute Remote RPC"
            }
        }, 
        "/ngt/{uuid}": {
            "get": {
                "description": "This operation gets a existing ngt.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing ngt", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }
                }
            }
        }, 
        "/file_store/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "description": "This operation submits a request to update a existing file_item based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "description": "This operation submits a request to delete a existing file_item."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "description": "This operation gets a existing file_item."
            }
        }, 
        "/logout": {
            "get": {
                "description": "Logs out the current user.", 
                "tags": [
                    "users"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Logs out the current user", 
                "x-ntnx-kind": "user", 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/logout_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/client/{client_id}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }, 
                        "required": true, 
                        "description": "Oauth client details", 
                        "name": "oauth_client", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Used to update existing client details", 
                "x-ntnx-kind": "oauth_client", 
                "description": "Update Oauth client information"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete an existing Oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "description": "Delete existing Oauth client information"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Used to fetch existing oauth client details", 
                "x-ntnx-kind": "oauth_client", 
                "description": "Get Oauth client information"
            }
        }, 
        "/webhooks/list": {
            "post": {
                "description": "This operation gets a list of Webhooks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/webhook_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "webhooks"
                ], 
                "summary": "Get a list of existing Webhooks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "webhook", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/webhook_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/file_store/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/file_item_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing file_items", 
                "x-ntnx-kind": "file_item", 
                "description": "This operation gets a list of file_items, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/racks": {
            "post": {
                "description": "Create a rack instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create rack object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a rack instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }
        }, 
        "/external_repositories/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "external_repository"
                ], 
                "summary": "Update a existing external_repository", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "external_repository", 
                "description": "This operation submits a request to update a existing external_repository based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "external_repository"
                ], 
                "summary": "Delete a existing external_repository", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "external_repository", 
                "description": "This operation submits a request to delete a existing external_repository."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "external_repository"
                ], 
                "summary": "Get a existing external_repository", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "external_repository", 
                "description": "This operation gets a existing external_repository."
            }
        }, 
        "/alerts/action/{action}": {
            "post": {
                "description": "Acknowledge alerts being looked at or be resolved.\n", 
                "parameters": [
                    {
                        "description": "The action type.", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "ACKNOWLEDGE", 
                            "RESOLVE"
                        ], 
                        "type": "string", 
                        "name": "action"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_action_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Perform an action to acknowledge or resolve alerts.\n", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "alert", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/authorize": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "authorization grant is provided in callback url callback url\nis in format {redirect_uri}/?code={grant_code}&state={state}\n"
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client ID", 
                        "name": "client_id", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "Whitespace-separated list of scopes you application needs", 
                        "name": "scope", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be 'code'", 
                        "name": "response_type", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be 'yes' or 'no'", 
                        "name": "confirm", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "This URL is used to provide user authorization if the user accepted\naccess to the application or not\n", 
                        "name": "redirect_uri", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "state parameter to prevent cross site origin attacks", 
                        "name": "state", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Used to get authorization code from server", 
                "consumes": [
                    "application/x-www-form-urlencoded"
                ], 
                "description": "Authorization confirmation post url"
            }
        }, 
        "/hosts/list": {
            "post": {
                "description": "This operation gets a list of Hosts, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/host_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Get a list of existing Hosts", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "host", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/host_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/rackable_units/list": {
            "post": {
                "description": "Retrieves all rackable units", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves all rackable units", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/idempotence_identifiers": {
            "post": {
                "description": "This operation submits a request to create an new idempotence_identifier based on the input parameters.\nThe idempotence_identifiers API allows users to generate an idempotent UUID4 with a user-provided identifier. The idempotent UUID(s) can later be passed in POST requests. By default,  Nutanix v3 APIs do not allow for operations to be created with user-provided UUIDs; each POST request received by the API gateway results in a UUID4 being automatically generated and returned in the response JSON.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_input"
                        }, 
                        "required": false, 
                        "description": "An idempotence identifier object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Create an new idempotence_identifier \" (UUID4)\"", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}": {
            "put": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.update"
                ], 
                "description": "This operation submits a request to update a existing vm recovery point based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing vm recovery point", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.delete"
                ], 
                "description": "This operation submits a request to delete a existing vm recovery point.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing vm recovery point", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ], 
                "description": "This operation gets a existing vm recovery point.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing vm recovery point", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                }
            }
        }, 
        "/projects/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/project_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Get a existing Project", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation gets a existing Project."
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "This operation gets a list of cloud credentials, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/remote_syslog_servers": {
            "post": {
                "description": "This operation submits a request to create a new Remote Syslog server based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Create a new Remote Syslog server", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }
        }, 
        "/network_function_chains/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing Network Function Chains", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "description": "This operation gets a list of Network Function Chains, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/vms/{uuid}/ngt": {
            "get": {
                "description": "This operation gets a existing ngt.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing ngt", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }
                }
            }
        }, 
        "/directory_services/{uuid}/search": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_search_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_search_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Search user or group in the directory service.", 
                "x-ntnx-operations": [
                    "search"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "Retrieves a user or a group available in the directory service based on\nthe UUID specified.\n"
            }
        }, 
        "/tasks/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/task_list_metadata"
                        }, 
                        "required": false, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing Tasks", 
                "x-ntnx-kind": "task", 
                "description": "This operation gets a list of Tasks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/ssh_user/list": {
            "post": {
                "description": "Retrieves all SSH Users on the cluster", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves all SSH Users on the cluster", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_list"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/root": {
            "post": {
                "description": "On PC:\n- The request specifies with an \"INITIATOR\" role: The PC initiates a\n  root certificate exchange with all peer PCs.\n- The request specifies with an \"ACCEPTOR\" role: The PC performs root\n  certficate exchange with the peer PC by saving peer root certificate\n  to this PC, as well as all PEs registered with this PC.\nOn PE:\n- The receiving PE save the peer root certificate.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/root_certificate"
                        }, 
                        "required": true, 
                        "name": "root_cert", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Save a PC root certificate on a PC or a PE", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/root_certificate"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "On PC:\n- Delete the root certificate that is associated with the specified\n  cluster UUID from the PC.\n- Delete the specified root certificate from all PEs registered with the\n  PC.\nOn PE:\n- Delete the root certificate that is associated with the specified\n  cluster UUID from the PE.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Remove PC root certificates", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "On PC:\n- If the UUID refers to this PC, return the root certificate for the PC.\n- If the UUID refers to a peer PC, this request is to verify if the peer\n  root certificate has been stored on this PC, as well as all registered\n  PEs to this PC; if this is verified, it will return the peer root\n  certificate.\nOn PE:\n- The receiving PE returns the root certificate that is associated with\n  the specified cluster UUID.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieve PC root certificates", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/certificate"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/list": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ], 
                "description": "This operation gets a list of vm recovery point, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing vm recovery point", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/hosts/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/host_intent_input"
                        }, 
                        "required": true, 
                        "description": "Intent Spec of Host.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing Host", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "host", 
                "description": "This operation submits a request to update a existing Host based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing Host", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "host", 
                "description": "This operation submits a request to delete a existing Host."
            }, 
            "get": {
                "description": "This operation gets a existing Host.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Get a existing Host", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "host", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/snapshot": {
            "post": {
                "description": "Submits a request to create a task handling the snapshot operation on the vm, returns a task reference. This creates a point in time recovery point.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a vm recovery point.", 
                "x-ntnx-operations": [
                    "snapshot"
                ], 
                "x-ntnx-kind": "vm", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/alerts/list": {
            "post": {
                "description": "This operation gets a list of alert, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing alert", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "alert", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/alert_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/synchronous_replication_capable": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_synchronous_replication_capable_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_synchronous_replication_capable_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing clusters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "description": "\"API to check if a remote cluster is synchronous replication capable.\"\n"
            }
        }, 
        "/subnets/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/subnet_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Get a list of existing subnets", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation gets a list of subnets, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/network_function_chains/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "description": "Given an intenful spec and uuid, update network function chain.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "description": "Delete a network function chain given its uuid."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "description": "Given a UUID, returns a network_function_chain definition."
            }
        }, 
        "/ssh_user/{uuid}": {
            "put": {
                "description": "Update SSH User entity", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update SSH User", 
                        "name": "ssh_user_intent", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update SSH User entity", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Unregister specified SSH User", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Unregister specified SSH User", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified SSH User", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves specified SSH User", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_details"
                        }
                    }
                }
            }
        }, 
        "/disks/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/disk_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/disk_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing Disks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "disk", 
                "description": "This operation gets a list of Disks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/oauth/adfs_login": {
            "get": {
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to ADFS Login Page"
                    }
                }, 
                "x-private": true, 
                "tags": [
                    "oauth"
                ], 
                "x-doc-hide": true, 
                "summary": "ADFS login url for idp", 
                "description": "Oauth2"
            }
        }, 
        "/prism_central": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error.", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/deployment_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/prism_central"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "prism_central"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new Prism Central", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "prism_central", 
                "description": "This operation submits a request to create a new Prism Central based on the input parameters.\n"
            }
        }, 
        "/docker_registries/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "List all docker registries", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "description": "List all docker registries"
            }
        }, 
        "/clusters/{uuid}/certificates/ca_certs": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_cert"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Add a new CA certificate", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Add a new CA certificate"
            }
        }, 
        "/directory_services/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Get a list of existing directory service configurations", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation gets a list of directory service configurations, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/remote_syslog_servers/cluster_rsyslog_servers": {
            "get": {
                "description": "Remote Syslog servers configured on all PEs registered to PC.", 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Remote Syslog servers configured on all PEs registered to PC.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_syslog_server_list"
                        }
                    }
                }
            }
        }, 
        "/vms/list": {
            "post": {
                "description": "This operation gets a list of VMs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Get a list of existing VMs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/portal_services/software/{software_type}/list": {
            "post": {
                "description": "Get a list of portal software with specified type", 
                "parameters": [
                    {
                        "description": "Software type", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "NOS", 
                            "PRISM_CENTRAL"
                        ], 
                        "type": "string", 
                        "name": "software_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/software_list_metadata"
                        }, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get all available software on Nutanix Portal", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/software_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/software_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/alerts/{uuid}": {
            "get": {
                "description": "This operation gets a existing alert.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing alert", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "alert", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/alert_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/chunks": {
            "put": {
                "description": "Upload a file chunk of an OVA based on the UUID specified. Note that the OVA must be created first before an upload can be done.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "description": "File chunk in binary format.", 
                        "name": "ova", 
                        "in": "body"
                    }, 
                    {
                        "description": "Offset of file chunk in original OVA file.", 
                        "format": "int64", 
                        "required": true, 
                        "in": "header", 
                        "type": "integer", 
                        "name": "X-Nutanix-Upload-Offset"
                    }, 
                    {
                        "description": "Length of file chunk to upload.", 
                        "format": "int64", 
                        "required": true, 
                        "in": "header", 
                        "type": "integer", 
                        "name": "X-Nutanix-Content-Length"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "SHA_1", 
                            "SHA_256"
                        ], 
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum type (e.g SHA_1, SHA_256).", 
                        "name": "X-Nutanix-Checksum-Type"
                    }, 
                    {
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum bytes of file chunk.", 
                        "name": "X-Nutanix-Checksum-Bytes"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Upload file chunk of an OVA", 
                "x-ntnx-operations": [
                    "create", 
                    "update"
                ], 
                "x-ntnx-kind": "ova", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "204": {
                        "description": "Success"
                    }
                }
            }, 
            "head": {
                "description": "Information of the uploaded OVA file.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Uploaded OVA file info", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "headers": {
                            "X-Nutanix-Upload-Length": {
                                "type": "integer", 
                                "description": "Length of the OVA file in bytes.", 
                                "format": "int64"
                            }, 
                            "X-Nutanix-Upload-Offset": {
                                "type": "integer", 
                                "description": "Minimum offset in bytes till which file is uploaded.", 
                                "format": "int64"
                            }
                        }, 
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/clusters/list": {
            "post": {
                "description": "This operation gets a list of clusters, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a list of existing clusters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/remote_connections": {
            "post": {
                "description": "Creates a remote connection", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_input"
                        }, 
                        "required": true, 
                        "description": "Remote connection details", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Creates a remote connection", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }
        }, 
        "/rackable_units/{uuid}": {
            "put": {
                "description": "Update rackable unit", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update rackable unit", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update rackable unit", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified rackable unit", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves specified rackable unit", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.create"
                ], 
                "description": "This operation submits a request to create a new vm recovery point based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new vm recovery point", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ipfix_exporters/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ipfix_exporters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing IPFix Exporter", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ipfix_exporter", 
                "description": "This operation submits a request to delete a existing IPFix Exporter."
            }
        }, 
        "/alerts/notify": {
            "post": {
                "description": "This operation submits a request to create a new alert based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_notification_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new alert", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "alert", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/ipfix_exporters": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ipfix_exporters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new IPFix Exporter", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ipfix_exporter", 
                "description": "This operation submits a request to create a new IPFix Exporter based on the input parameters.\n"
            }
        }, 
        "/ngt/list": {
            "post": {
                "description": "This operation gets a list of vms, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ngt_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing vms", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_list_response"
                        }
                    }
                }
            }
        }, 
        "/projects/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/project_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/project_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Get a list of existing Projects", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation gets a list of Projects, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/citrix_adapters/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "citrix_adapters"
                ], 
                "summary": "Get a list of existing citrix_adapters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "citrix_adapter", 
                "description": "This operation gets a list of citrix_adapters, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/oauth/client": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }, 
                        "required": true, 
                        "description": "Oauth client details", 
                        "name": "oauth_client", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "This is used to register new oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "description": "Add new Oauth Client"
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/{cloud_credentials_id}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "This operation submits a request to update a existing cloud credentials based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "This operation submits a request to delete a existing cloud credentials."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "This operation gets a existing cloud credentials."
            }
        }, 
        "/remote_syslog_modules/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Remote Syslog modules list based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Update a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing Remote Syslog modules list.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Delete a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Remote Syslog modules list.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Get a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }
        }, 
        "/remote_syslog_servers/list": {
            "post": {
                "description": "This operation gets a list of Remote Syslog servers, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Get a list of existing Remote Syslog servers", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/docker_registries/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_input"
                        }, 
                        "required": true, 
                        "description": "Docker registry spec", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a docker registry", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "description": "Update a docker registry"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Deletes a Docker registry", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "description": "Deletes a Docker registry"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Failed to retrieve docker registry", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieve a Docker registry", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "description": "Retrieve a docker registry"
            }
        }, 
        "/oauth/idp_login": {
            "get": {
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to IDP Login Page"
                    }
                }, 
                "x-private": true, 
                "tags": [
                    "oauth"
                ], 
                "x-doc-hide": true, 
                "summary": "Oauth2 login to idp", 
                "description": "Oauth2"
            }
        }, 
        "/volume_groups": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }, 
                        "required": true, 
                        "description": "Volume group object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Create a new volume_group", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "volume_group", 
                "description": "This operation submits a request to create a new volume_group based on the input parameters.\n"
            }
        }, 
        "/external_repositories/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/external_repository_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/external_repository_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "external_repositories"
                ], 
                "summary": "Get a list of existing external_repositories", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "external_repository", 
                "description": "This operation gets a list of external_repositories, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/images/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get a list of existing images", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation gets a list of images, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/images/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Update a existing image", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation submits a request to update a existing image based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Delete a existing image", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation submits a request to delete a existing image."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get a existing image", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation gets a existing image."
            }
        }, 
        "/mh_vms/{uuid}": {
            "put": {
                "description": "This operation submits a request to update an existing VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update an existing VM", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_response"
                        }
                    }
                }
            }
        }, 
        "/volume_group_snapshots/{uuid}": {
            "put": {
                "x-ntnx-permissions": [
                    "volume_group_snapshot.update"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_group_snapshots"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update a existing volume_group_snapshot", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "volume_group_snapshot", 
                "description": "This operation submits a request to update a existing volume_group_snapshot based on the input parameters.\n"
            }, 
            "delete": {
                "x-ntnx-permissions": [
                    "volume_group_snapshot.delete"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_group_snapshots"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing volume_group_snapshot", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "volume_group_snapshot", 
                "description": "This operation submits a request to delete a existing volume_group_snapshot."
            }, 
            "get": {
                "x-ntnx-permissions": [
                    "volume_group_snapshot.view"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_group_snapshots"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing volume_group_snapshot", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "volume_group_snapshot", 
                "description": "This operation gets a existing volume_group_snapshot."
            }
        }, 
        "/oauth/token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/provider_oauth_token"
                        }
                    }, 
                    "401": {
                        "description": "Authentication Failure", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be authorization_code or refresh_token", 
                        "name": "grant_type", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client ID", 
                        "name": "client_id", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client secret", 
                        "name": "client_secret", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "authorization_code received in redirect_uri\nmust for grant_type = authorization_code\n", 
                        "name": "code", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "refresh_token received with previous token\nmust for grant_type = refresh_token\n", 
                        "name": "refresh_token", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "state parameter to prevent cross site origin attacks\nuse only if passed in getting authorization\n", 
                        "name": "state", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "redirect uri used to get authorization\nmust for grant_type = authorization_code\n", 
                        "name": "redirect_uri", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "This callback is used to get token from Oauth2 provider", 
                "consumes": [
                    "application/x-www-form-urlencoded"
                ], 
                "description": "Returns an access token"
            }
        }, 
        "/vm_snapshots": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_snapshot"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create VM snapshot", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm_snapshot", 
                "description": "Given an intentful spec, creates a snapshot with associated metadata\n"
            }
        }, 
        "/portal_services/software/{software_type}/{version}": {
            "get": {
                "description": "Get the software info with specified type and version", 
                "parameters": [
                    {
                        "description": "Software type", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "NOS", 
                            "PRISM_CENTRAL"
                        ], 
                        "type": "string", 
                        "name": "software_type"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Software version", 
                        "in": "path", 
                        "name": "version"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get specified software information", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/software_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/portal_software"
                        }
                    }
                }
            }
        }, 
        "/access_control_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Get a list of existing Access Control Policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "This operation gets a list of Access Control Policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/permissions/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/permission_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/permission_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "List the permissions.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "permission", 
                "description": "Get permissions.\n"
            }
        }, 
        "/clusters/{uuid}/certificates/ca_certs/{ca_name}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "ca_name", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete the CA certificate", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Delete the CA certificate specified by certificate authority name\n"
            }
        }, 
        "/docker_registries/{uuid}/search/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Searches docker containers for specified registry", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_image", 
                "description": "Searches docker containers for specified registry"
            }
        }, 
        "/volume_group_snapshots/list": {
            "post": {
                "x-ntnx-permissions": [
                    "volume_group_snapshots.view"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_group_snapshots"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing volume_group_snapshots", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "volume_group_snapshot", 
                "description": "This operation gets a list of volume_group_snapshots, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/file_store/{uuid}/file": {
            "put": {
                "description": "Upload the binary bits for a file item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "file_item", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Upload file item contents", 
                "x-ntnx-kind": "file_item", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "Download the raw binary bits associated with a file item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-doc-hide": true, 
                "summary": "Get file item contents", 
                "x-ntnx-kind": "file_item", 
                "x-private": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/webhooks/{uuid}": {
            "put": {
                "description": "Given an intenful spec and webhook uuid, update webhook.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "webhooks"
                ], 
                "summary": "Update a existing Webhook", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "webhook", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete a webhook given its uuid.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "webhooks"
                ], 
                "summary": "Delete a existing Webhook", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "webhook", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Given a UUID, returns a webhook definition.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "webhooks"
                ], 
                "summary": "Get a existing Webhook", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "webhook", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }
                }
            }
        }, 
        "/webhooks": {
            "post": {
                "description": "A webhook is an HTTP callback that provides event notification. After a webhook is created, the cluster generates an HTTP POST when specific events occur, for example a VM is created or a VM power state is changed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "webhooks"
                ], 
                "summary": "Create a new Webhook", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "webhook", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/webhook_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/webhook_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}/restore": {
            "post": {
                "description": "Submits a request to create a task handling the restore of vm recovery point, returns the task reference. This operation is used to create a vm out of the vm recovery point. Follow the task to get the reference of the created vm.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_restore_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Restore a vm recovery point.", 
                "x-ntnx-operations": [
                    "restore"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/citrix_adapters/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "citrix_adapters"
                ], 
                "summary": "Update a existing citrix_adapter", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "citrix_adapter", 
                "description": "This operation submits a request to update a existing citrix_adapter based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "citrix_adapters"
                ], 
                "summary": "Delete a existing citrix_adapter", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "citrix_adapter", 
                "description": "This operation submits a request to delete a existing citrix_adapter."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "citrix_adapters"
                ], 
                "summary": "Get a existing citrix_adapter", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "citrix_adapter", 
                "description": "This operation gets a existing citrix_adapter."
            }
        }, 
        "/access_control_policies/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Get a existing Access Control Policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "This operation gets a existing Access Control Policy."
            }
        }, 
        "/tasks/{uuid}": {
            "get": {
                "description": "This operation gets a existing Task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "summary": "Get a existing Task", 
                "x-ntnx-kind": "task", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }
                }
            }
        }, 
        "/batch": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/batch_response"
                        }
                    }
                }, 
                "summary": "Submit a list of one or more intentful REST APIs to be processed", 
                "description": "Batching allows for instructions for several operations to be sent\nusing a single HTTP request. Depending on the batch parameters, the\nNutanix v3 gateway processes each independent operation sequentially\nor in parallel. Once all operations in the batch have been completed,\na consolidated response is returned and the HTTP connection is closed.\nThe batch API takes an array of logical HTTP requests represented as\nJSON arrays. Maximum size of the array should not exceed 60.\nEach request comprises the following:\n- A method (corresponding to HTTP methods such as GET, PUT, and POST)\n- A relative URL (relative_url)\n- (Optional) A body (for POST and PUT requests).\nThe batch API returns an array of logical HTTP responses represented\nas JSON arrays containing the following:\n- A status code\n- (Optional) A body represented as a JSON-encoded string\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/batch_request"
                        }, 
                        "required": true, 
                        "description": "List of intent APIs", 
                        "name": "intent_list", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "batch"
                ]
            }
        }, 
        "/images/{uuid}/file": {
            "put": {
                "description": "Upload the binary bits of an image based on the UUID specified. Note that the image must be created first before an upload can be done. Also, once the image has been uploaded the image cannot be changed.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "image", 
                        "in": "body"
                    }, 
                    {
                        "enum": [
                            "SHA_1", 
                            "SHA_256"
                        ], 
                        "type": "string", 
                        "description": "Checksum type (e.g SHA_1, SHA_256).", 
                        "in": "header", 
                        "name": "X-Nutanix-Checksum-Type"
                    }, 
                    {
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum bytes.", 
                        "name": "X-Nutanix-Checksum-Bytes"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Upload Image Contents", 
                "x-ntnx-operations": [
                    "update", 
                    "create"
                ], 
                "x-ntnx-kind": "image", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "Downloads the image based on the UUID specified.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get Image Contents", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/tenant_clusters/config/tenants": {
            "post": {
                "description": "This operation submits a request to create a new Tenant based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/tenant"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tenants"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new Tenant", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "tenant", 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }, 
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/svm_certs/{node_uuid}/{kms_uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "node_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/certificate"
                        }, 
                        "required": true, 
                        "name": "cert", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Replace the certificate on a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Replace the certificate on a service VM"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "node_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete the certificate on a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Delete the certificate on a service VM"
            }
        }, 
        "/vms/{uuid}/vm_disk/{vm_disk_uuid}/data": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "object", 
                            "description": "Return object indicating the status of the write.", 
                            "properties": {
                                "bytes_written": {
                                    "type": "integer", 
                                    "description": "Number of bytes written to the identity disk.", 
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "VM disk device UUID", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "vm_disk_uuid"
                    }, 
                    {
                        "description": "Offset within the disk. Defaults to 0.", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "schema": {
                            "format": "byte"
                        }, 
                        "required": true, 
                        "name": "data", 
                        "in": "body"
                    }
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Write to a VM disk.", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "description": "Write to an identity disk attached to a VM at the provided offset."
            }, 
            "get": {
                "description": "Read from an identity disk attached to a VM from the provided offset.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "VM disk device UUID", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "vm_disk_uuid"
                    }, 
                    {
                        "description": "Offset within the disk. Defaults to 0.", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "name": "length", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "description": "Amount to read from disk. By default this will be the max size (16 MB)."
                    }
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Read from a VM disk.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "byte"
                        }
                    }
                }
            }
        }, 
        "/remote_syslog_modules": {
            "post": {
                "description": "This operation submits a request to create a new Remote Syslog modules list based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Create a new Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ncc/tags/list": {
            "post": {
                "description": "This operation gets a list of ncc tags, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ncc_tags_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ncc"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a list of existing ncc tags", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ncc", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ncc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ncc_tags_response"
                        }
                    }
                }
            }
        }, 
        "/groups": {
            "post": {
                "description": "Get entities from entity db.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/groups_get_entities_request"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "groups"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get Entities.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/groups_get_entities_response"
                        }
                    }
                }
            }
        }, 
        "/vms/capabilities": {
            "options": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/capability_information"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "x-private": true, 
                "tags": [
                    "vms"
                ], 
                "x-doc-hide": true, 
                "summary": "Returns metadata for /vms/capabilities endpoint.", 
                "description": "List of dictionaries containing supported capability names and their descriptions for vms."
            }, 
            "get": {
                "description": "Get capability information for VMs.", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "Name of the capability", 
                        "name": "name", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Capability information for VMs.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/capability_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/file": {
            "get": {
                "description": "Downloads the OVA based on the UUID specified.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "ovas"
                ], 
                "x-doc-hide": true, 
                "summary": "Get OVA Contents", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "x-private": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/subnets/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Update a existing subnet", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to update a existing subnet based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Delete a existing subnet", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to delete a existing subnet."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Get a existing subnet", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation gets a existing subnet."
            }
        }, 
        "/network_function_chains": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new Network Function Chain", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "description": "Given an intentful spec, creates a network function chain with associated metadata.\n"
            }
        }, 
        "/ncc/archives/{task_uuid}": {
            "get": {
                "description": "Download archive logs corresponding to the task.", 
                "parameters": [
                    {
                        "name": "task_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "description": "Task uuid."
                    }
                ], 
                "tags": [
                    "ncc"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Download archive logs corresponding to the task", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ncc", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ncc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}/promote": {
            "post": {
                "description": "Submits a request to create a task handling the promote of Live vm recovery point, returns the task reference. This operation is used to create a vm out of the Live vm recovery point. Follow the task to get the reference of the created vm.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_restore_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Promote a vm recovery point.", 
                "x-ntnx-operations": [
                    "promote"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/app_blueprints/render_info": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/blueprint_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/app_blueprint_render_info_output"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/app_blueprint_render_info_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "app_blueprint"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Render an AppBlueprint from the given input", 
                "x-ntnx-operations": [
                    "render"
                ], 
                "x-ntnx-kind": "app_blueprint", 
                "description": "Helper that translates the given input spec into the equivalent AppBlueprint.\n"
            }
        }, 
        "/remote_syslog_modules/list": {
            "post": {
                "description": "This operation gets a list of Remote Syslog modules, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Get a list of existing Remote Syslog modules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/idp_callback": {
            "get": {
                "description": "Oauth2 callback from IDP to intent gateway", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "code", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Oauth2 callback from IDP to intent gateway", 
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to SSP UI."
                    }
                }
            }
        }, 
        "/citrix_adapters": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/citrix_adapter_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "citrix_adapters"
                ], 
                "summary": "Create a new citrix_adapter", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "citrix_adapter", 
                "description": "This operation submits a request to create a new citrix_adapter based on the input parameters.\n"
            }
        }, 
        "/roles/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/role_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "Get a role.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Get a role."
            }
        }, 
        "/oauth/revoke_token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "404": {
                        "description": "Token not found", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "token", 
                        "in": "query"
                    }, 
                    {
                        "name": "token_type_hint", 
                        "default": "access_token", 
                        "required": false, 
                        "in": "query", 
                        "x-ntnx-enum": [
                            "access_token", 
                            "refresh_token"
                        ], 
                        "type": "string"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Revoke a token will cause the token to be removed from system\nAny subsequent authorization calls with the token will fail\n", 
                "x-ntnx-kind": "oauth_token", 
                "description": "Revokes an oauth token"
            }
        }, 
        "/vm_snapshots/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_snapshot"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Update VM snapshot", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm_snapshot", 
                "description": "Given an intenful spec and snapshot UUID, update VM snapshot\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_snapshot"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete VM snapshot", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm_snapshot", 
                "description": "Delete a VM snapshot given its UUID"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_snapshot"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get VM snapshot", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_snapshot", 
                "description": "Given a UUID, returns a VM snapshot definition"
            }
        }, 
        "/vms/{uuid}": {
            "put": {
                "description": "This operation submits a request to update an existing VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Update an existing VM", 
                "x-ntnx-operations": [
                    "update", 
                    "update_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete an existing VM.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Delete an existing VM", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets an existing VM.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Get an existing VM", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                }
            }
        }, 
        "/images": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Create a new image", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "image", 
                "description": "Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user can be attached to a VM. An ISO image is attached as a virtual CD-ROM drive, and QCOW2 and VMDK files are attached as SCSI disks. An image has to be explicitly added to the self-service catalog before users can create VMs from it.\n"
            }
        }, 
        "/users/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Get a list of existing Users", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation gets a list of Users, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/volume_groups/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "description": "This operation gets a list of volume_groups, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "summary": "Get a list of existing volume_groups", 
                "x-ntnx-ref-keys": [
                    "volume_group_reference", 
                    "volume_group_reference_list"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-ntnx-operations": [
                    "view"
                ]
            }
        }, 
        "/directory_services/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Get a existing directory service configuration", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation gets a existing directory service configuration."
            }
        }, 
        "/clusters/{uuid}/certificates/pemkey": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Generate a 2048 bits cipher length RSA key", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Generate a 2048 bits cipher length RSA key"
            }
        }, 
        "/tasks/poll": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task_poll_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/task_poll_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Poll for completion of tasks", 
                "x-ntnx-kind": "task", 
                "description": "Poll for completion of tasks"
            }
        }, 
        "/fanout_proxy": {
            "post": {
                "description": "Proxies request to remote cluster, uses remote connection\nto call endpoint on remote cluster.\n", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "One of the availability zones name of Xi portal.", 
                        "name": "az_name", 
                        "in": "query"
                    }, 
                    {
                        "description": "One of the availability zones uuid of Xi portal.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "az_physical_uuid"
                    }, 
                    {
                        "description": "Cluster uuid of remote PC or PE cluster.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "remote_cluster_uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "HTTP method to call", 
                        "name": "method", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "URL path to call on remote cluster", 
                        "name": "url_path", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "content type for the call", 
                        "name": "content_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "entity kind e.g. vm, network", 
                        "name": "kind", 
                        "in": "query"
                    }, 
                    {
                        "description": "The UUID of the entity.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "description": "The UUID of the tenant.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "tenant_uuid"
                    }, 
                    {
                        "type": "integer", 
                        "description": "Additional timeout in milliseconds for fanout calls.", 
                        "name": "timeout_ms", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "additionalProperties": true
                        }, 
                        "name": "fanout_proxy_body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Proxies request to remote cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Add a cloud credential for accessing cloud sites", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "Add a cloud credential for accessing cloud sites"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete all cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "description": "Delete all cloud credentials"
            }
        }, 
        "/remote_connections/{uuid}": {
            "put": {
                "description": "Update remote connection", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_input"
                        }, 
                        "description": "Remote connection details", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Used to update remote connection details", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete existing remote connection and its information", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete an existing remote connection", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Get remote connection", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Used to fetch remote connection details", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/svm_certs/{kms_uuid}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/certificate_spec_upload_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Add one or more certificates to a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Add one or more certificates to a service VM"
            }
        }, 
        "/ssh_user": {
            "post": {
                "description": "Add SSH User to the entity", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create SSH User object", 
                        "name": "ssh_user_intent", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Add SSH User to the entity", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms": {
            "post": {
                "description": "This operation submits a request to create a new VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a new VM", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }
        }, 
        "/racks/list": {
            "post": {
                "description": "Retrieves all racks", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Retrieves all racks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rack_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/disks/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/disk_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Delete a existing Disk", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "disk", 
                "description": "This operation submits a request to delete a existing Disk."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/disk_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get a existing Disk", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "disk", 
                "description": "This operation gets a existing Disk."
            }
        }, 
        "/roles/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/role_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/role_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "List the roles.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Get roles.\n"
            }
        }, 
        "/vm_snapshots/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_snapshot"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Get VM snapshots", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_snapshot", 
                "description": "Get VM snapshots. Here is a list of supported filters\n- entity_uuid==UUID of the virtual machine\n"
            }
        }, 
        "/file_store": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new file_item", 
                "x-ntnx-kind": "file_item", 
                "description": "File items are binaries and unlike images are not limited by the file type (e.g ISOs, or disk images)."
            }
        }, 
        "/clusters/{uuid}/certificates/client_auth": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Replace the CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "description": "Replace the CA chain for client authentication"
            }, 
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Import CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "description": "Import CA chain for client authentication"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Remove the CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "description": "Remove the CA chain for client authentication"
            }
        }, 
        "/clusters/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing cluster based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Update a existing cluster", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing cluster.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a existing cluster", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    }
                }
            }
        }, 
        "/racks/validate_rack_config": {
            "post": {
                "description": "Check whether given rack configuration in this cluster's context is valid or not. A rack configuration refers to a map of racks to the hosts it contains.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/validate_rack_config_input"
                        }, 
                        "required": true, 
                        "description": "Validate rack configuration", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Validates Specified Rack Configuration", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/validate_rack_config_output"
                        }
                    }
                }
            }
        }, 
        "/data/changed_regions": {
            "post": {
                "description": "This API provides for querying the metadata about the regions that are different between two snapshots of a disk in the AOS file system. (The snapshot specified by the reference parameter will be used as the basis for computing the changed regions.)\nThe main use of this API is to enable incremental and differential backups.\nSince each region specifies whether the region is all zeros, reads of such zeroed regions need not have to be performed while backing up the underlying disk.\nWhen no reference is specified, the response includes all the allocated regions in the given disk.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/changed_regions_query"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "data"
                ], 
                "summary": "Query changed regions metadata.", 
                "x-ntnx-kind": "changed_regions", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/changed_regions_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/changed_regions"
                        }
                    }, 
                    "404": {
                        "description": "Not Found. Returned when the file(s) specified by the snapshot_file_path and/or the reference_snapshot_file_path does not exist.\n", 
                        "schema": {
                            "$ref": "#/definitions/changed_regions_status"
                        }
                    }, 
                    "503": {
                        "description": "Service unavailable. The system cannot currently handle the request", 
                        "schema": {
                            "$ref": "#/definitions/changed_regions_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/changed_regions_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/revert": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_revert_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Revert the vm to the given recovery point.", 
                "x-ntnx-operations": [
                    "revert"
                ], 
                "x-ntnx-kind": "vm", 
                "description": "Submits a request to create a task handling the vm revert to a recovery point operation, returns a task reference.\n"
            }
        }, 
        "/remote_syslog_servers/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Remote Syslog server based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Update a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing Remote Syslog server.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Delete a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Remote Syslog server.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Get a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }
        }, 
        "/mh_vms": {
            "post": {
                "description": "This operation submits a request to create a new VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new VM", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_response"
                        }
                    }
                }
            }
        }, 
        "/versions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/versions"
                        }
                    }
                }, 
                "x-private": true, 
                "tags": [
                    "versions"
                ], 
                "x-doc-hide": true, 
                "summary": "Get details on the api version", 
                "description": "A version is the major and minor number of the API."
            }
        }, 
        "/users/me": {
            "get": {
                "description": "Displays the user currently logged in.", 
                "summary": "Retrieves currently logged in user.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }
                }, 
                "tags": [
                    "users"
                ], 
                "x-ntnx-kind": "user"
            }
        }, 
        "/user_groups/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Get a existing User Group", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "A user group is a grouping of users either defined locally or in a Directory service.\n"
            }
        }, 
        "/docker_registries": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_input"
                        }, 
                        "required": true, 
                        "description": "Docker registry spec", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a docker registry", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "description": "Create a docker registry"
            }
        }, 
        "/subnets": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Create a new subnet", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to create a new subnet based on the input parameters.\nA subnet is a block of IP addresses.\n"
            }
        }, 
        "/users/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Get a existing User", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation gets a existing User."
            }
        }, 
        "/volume_group_snapshots": {
            "post": {
                "x-ntnx-permissions": [
                    "volume_group_snapshot.create"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_snapshot_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_group_snapshots"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Create a new volume_group_snapshot", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "volume_group_snapshot", 
                "description": "This operation submits a request to create a new volume_group_snapshot based on the input parameters.\n"
            }
        }, 
        "/clusters/{uuid}/certificates/pemkey/import": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/pemkey_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "Import a new key", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "description": "Import a new key"
            }
        }, 
        "/clusters/{uuid}/certificates/csrs": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/csrs_spec"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "x-doc-hide": true, 
                "summary": "Download CSRs from cluster", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-private": true, 
                "description": "Download Certificate Signing Requests from cluster"
            }
        }, 
        "/idempotence_identifiers/{client_identifier}": {
            "delete": {
                "description": "This operation submits a request to delete an existing idempotence_identifier.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_identifier", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Delete an existing idempotence_identifier", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets an existing idempotence_identifier.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_identifier", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Get an existing idempotence_identifier", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }
                }
            }
        }, 
        "/permissions/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/permission_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "Get a permission.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "permission", 
                "description": "Get a permission."
            }
        }, 
        "/oauth/generate_token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_request"
                        }, 
                        "required": true, 
                        "name": "oauth_generate_token_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "x-private": true, 
                "x-doc-hide": true, 
                "summary": "This is used when the user is already authenticated and would like to\ncreate bearer tokens for distribution\n", 
                "x-ntnx-kind": "oauth_token", 
                "description": "Generates an oauth token"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "parameters": {
        "cloud_type": {
            "description": "The Cloud Type.", 
            "pattern": "(\\bAWS\\b|\\bAZURE\\b|\\bNUTANIX_HOSTED_CLOUD\\b|\\bONPREM_CLOUD\\b)", 
            "required": true, 
            "in": "path", 
            "type": "string", 
            "name": "cloud_type"
        }, 
        "uuid": {
            "description": "The UUID of the entity.", 
            "format": "UUID", 
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
            "required": true, 
            "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
            "in": "path", 
            "type": "string", 
            "name": "uuid"
        }
    }, 
    "produces": [
        "application/json"
    ], 
    "basePath": "/api/nutanix/v3", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    }, 
    "definitions": {
        "selection_criteria": {
            "description": "Entity selection criteria for category assignment definition.", 
            "required": [
                "entity_type", 
                "expression_list"
            ], 
            "type": "object", 
            "properties": {
                "expression_list": {
                    "items": {
                        "$ref": "#/definitions/filter_expression"
                    }, 
                    "type": "array"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Entity type which has to be selected"
                }
            }, 
            "title": "Selection Criteria definition."
        }, 
        "volume_group_resources_input": {
            "description": "Volume group resources.", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.\n"
                }, 
                "load_balance_vm_attachments": {
                    "type": "boolean", 
                    "description": "Whether to enable volume group load balancing."
                }, 
                "iscsi_target_prefix": {
                    "pattern": "^[\\da-zA-Z:\\.\\-]+$", 
                    "type": "string", 
                    "description": "iSCSI target prefix-name.", 
                    "maxLength": 512
                }, 
                "parent_reference": {
                    "description": "Reference to an entity to clone from.", 
                    "$ref": "#/definitions/reference"
                }, 
                "sharing_status": {
                    "x-ntnx-enum": [
                        "SHARED", 
                        "NOT_SHARED"
                    ], 
                    "type": "string", 
                    "description": "Whether the volume group can be shared across multiple iSCSI initiators.\n"
                }, 
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/attachment_reference_input"
                    }, 
                    "type": "array", 
                    "description": "VMs attached to volume group."
                }, 
                "target_secret": {
                    "type": "string", 
                    "description": "Target Secret in case of CHAP authentication."
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/volume_disk_resource_input"
                    }, 
                    "type": "array", 
                    "description": "Volume group disk specification."
                }
            }, 
            "title": "Volume group resources"
        }, 
        "blueprint_marketplace_launch_input": {
            "description": "Launch Blueprint request.", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Launch Marketplace Blueprint request."
        }, 
        "external_repository_def_status": {
            "description": "External repository creation / modification status.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the external repository definition."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error message for the external repository, if in an error state.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the external repository.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/external_repository_resources"
                }
            }, 
            "title": "External repository creation / modification status"
        }, 
        "remote_connection_intent_response": {
            "description": "Response object for intentful operations on a remote_connection", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Response"
        }, 
        "directory_service_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ssl_key": {
            "description": "SSL certificate.", 
            "required": [
                "key_type"
            ], 
            "type": "object", 
            "properties": {
                "key_type": {
                    "$ref": "#/definitions/ssl_key_type"
                }, 
                "key_name": {
                    "type": "string"
                }, 
                "signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "expire_datetime": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when the key expires", 
                    "format": "date-time"
                }
            }, 
            "title": "SSL certificate"
        }, 
        "oauth_client_metadata": {
            "description": "The oauth_client kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth_client was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "oauth_client uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth_client was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth_client. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth_client. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "oauth_client name", 
                    "maxLength": 80
                }
            }, 
            "title": "oauth_client metadata"
        }, 
        "capability_information": {
            "description": "Contains capability name and description", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "capability_description": {
                    "type": "string", 
                    "description": "Optional value describing the capability"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of capability"
                }
            }, 
            "title": "Encapsulates basic capability information"
        }, 
        "vm_recovery_point_metadata": {
            "description": "The vm_recovery_point kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_recovery_point was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_recovery_point uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm_recovery_point is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_recovery_point was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_recovery_point. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_recovery_point. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_recovery_point name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_recovery_point metadata"
        }, 
        "smtp_server": {
            "description": "SMTP Server.", 
            "required": [
                "email_address", 
                "server"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "default": "PLAIN", 
                    "x-ntnx-enum": [
                        "PLAIN", 
                        "STARTTLS", 
                        "SSL"
                    ], 
                    "type": "string"
                }, 
                "email_address": {
                    "type": "string"
                }, 
                "server": {
                    "$ref": "#/definitions/cluster_network_entity"
                }
            }, 
            "title": "SMTP server"
        }, 
        "customization_spec_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for customization_spec list output"
        }, 
        "app_deployment_reference_upload": {
            "description": "The reference to a app_deployment", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_deployment"
        }, 
        "external_repository_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "external_repository", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "external_repository"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "alert_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_recovery_point_realize_restore_input": {
            "description": "Input object for the restore API of the recovery points. User can provide optional UUID of the vm that will be created as a result of this operation.\n", 
            "required": [
                "vm_uuid", 
                "restore_target_time"
            ], 
            "type": "object", 
            "properties": {
                "restore_target_time": {
                    "type": "string", 
                    "description": "The target time to which the user wishes to restore to. This is in\ninternet date/time format (RFC 3339). This field is explicitly used\nfor time based restore in high frequency snapshotting and will be\nignored for a regular restore.\n", 
                    "format": "date-time"
                }, 
                "vm_override_spec": {
                    "description": "Properties of the vm that can be overridden on restore.\n", 
                    "$ref": "#/definitions/vm_restore_override_spec"
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the vm entity for which the recovery point is to be\nrestored.\n", 
                    "format": "UUID"
                }, 
                "metadata": {
                    "type": "object", 
                    "properties": {
                        "categories_mapping": {
                            "additionalProperties": {
                                "items": {
                                    "type": "string"
                                }, 
                                "type": "array"
                            }, 
                            "type": "object", 
                            "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key.\n"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Metadata of the restored vm."
                }
            }, 
            "title": "Restore API input"
        }, 
        "permission_intent_resource": {
            "description": "Response object for intentful operations on a permission", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/permission_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Response"
        }, 
        "network_function_chain_list_intent_response": {
            "description": "Response object for intentful operation of network_function_chains", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/network_function_chain_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "webhook_metadata": {
            "description": "The webhook kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when webhook was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "webhook", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "webhook"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "webhook uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when webhook was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the webhook. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the webhook. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "webhook name", 
                    "maxLength": 80
                }
            }, 
            "title": "webhook metadata"
        }, 
        "vm_power_state_mechanism": {
            "description": "Indicates the mechanism guiding the VM power state transition. Currently used for the transition to \"OFF\" state.\n", 
            "type": "object", 
            "properties": {
                "guest_transition_config": {
                    "$ref": "#/definitions/vm_guest_power_state_transition_config"
                }, 
                "mechanism": {
                    "x-ntnx-enum": [
                        "ACPI", 
                        "GUEST", 
                        "HARD"
                    ], 
                    "type": "string", 
                    "description": "Power state mechanism (ACPI/GUEST/HARD)."
                }
            }, 
            "title": "VM Power State Mechanism"
        }, 
        "app_published_service_input": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service definition"
        }, 
        "subnet_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_task_input_upload": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "cluster_config_spec": {
            "description": "Cluster Configuration.", 
            "type": "object", 
            "properties": {
                "gpu_driver_version": {
                    "type": "string", 
                    "description": "GPU driver version."
                }, 
                "client_auth": {
                    "$ref": "#/definitions/client_auth"
                }, 
                "authorized_public_key_list": {
                    "items": {
                        "$ref": "#/definitions/public_key"
                    }, 
                    "type": "array", 
                    "description": "List of valid ssh keys for the cluster."
                }, 
                "software_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/cluster_software"
                    }, 
                    "type": "object", 
                    "description": "Map of software on the cluster with software type as the\nkey.\n"
                }, 
                "encryption_status": {
                    "$ref": "#/definitions/encryption_status"
                }, 
                "redundancy_factor": {
                    "type": "integer", 
                    "description": "Cluster supported redundancy factor. Default is 2.", 
                    "format": "int32"
                }, 
                "certification_signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "supported_information_verbosity": {
                    "default": "BASIC_PLUS_CORE_DUMP", 
                    "x-ntnx-enum": [
                        "NOTHING", 
                        "BASIC", 
                        "BASIC_PLUS_CORE_DUMP", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "Verbosity level settings for populating support information.\n- 'Nothing': Send nothing\n- 'Basic': Send basic information - skip core dump and hypervisor\n           stats information\n- 'BasicPlusCoreDump': Send basic and core dump information\n- 'All': Send all information\n"
                }, 
                "external_configurations": {
                    "description": "External Connector Configurations.", 
                    "$ref": "#/definitions/external_configurations_spec"
                }, 
                "domain_awareness_level": {
                    "default": "NODE", 
                    "x-ntnx-enum": [
                        "DISK", 
                        "NODE", 
                        "BLOCK", 
                        "RACK"
                    ], 
                    "type": "string", 
                    "description": "Domain awareness supported on cluster."
                }, 
                "enabled_feature_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "LOCK_DOWN_ENABLED", 
                            "PASSWORD_REMOTE_LOGIN_ENABLED", 
                            "SHADOW_CLONES_ENABLED", 
                            "COMMON_CRITERIA_MODE_ENABLED", 
                            "SSP_CONFIGURED", 
                            "ACS_ENABLED", 
                            "NETWORK_FLOW_STATS_COLLECTOR_ENABLED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of enabled features."
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "Zone name used in value of TZ environment variable."
                }, 
                "enable_efficient_metric_sync": {
                    "type": "boolean", 
                    "description": "Indicates if downsampling of metrics syncing between PE\nand PC is enabled or not.\n"
                }, 
                "operation_mode": {
                    "$ref": "#/definitions/cluster_operation_mode"
                }
            }, 
            "title": "Cluster Configuration"
        }, 
        "validate_rack_config_output": {
            "description": "Rack Config Validation output.", 
            "type": "object", 
            "properties": {
                "suggestion_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of suggestions describing how the failure in validation can be resolved. Each suggestion describes a specific change in configuration, which can independently resolve the validation failure.\n"
                }, 
                "cause_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of observations in a configuration that contradict each other which causes failure in validation. Fixing one or more items in this list to eliminate the contradiction will result in success in validation.\n"
                }
            }, 
            "title": "Rack Config Validation output"
        }, 
        "cluster_metadata": {
            "description": "The cluster kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cluster was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cluster uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cluster was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cluster. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cluster. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cluster name", 
                    "maxLength": 80
                }
            }, 
            "title": "cluster metadata"
        }, 
        "user_metadata": {
            "description": "The user kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "user uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "user name", 
                    "maxLength": 80
                }
            }, 
            "title": "user metadata"
        }, 
        "alert_reference": {
            "description": "The reference to a alert", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a alert"
        }, 
        "blueprint_resources_def_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_response"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_response"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_response"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_response"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }, 
                "is_cloned": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Cloned or original blueprint"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "remote_connection_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_package_reference": {
            "description": "The reference to a app_package", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_package", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_package"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_package"
        }, 
        "failover_cluster": {
            "description": "Hyper-V failover cluster.", 
            "required": [
                "domain_credential"
            ], 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the failover cluster."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the failover cluster."
                }, 
                "domain_credential": {
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Hyper-v failover cluster"
        }, 
        "filter_expression": {
            "description": "Filter Expression details.", 
            "required": [
                "property_name", 
                "operator", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "type": "string", 
                    "description": "Operator to be used for the value on the entity.\nExample, =, cs, >=, etc.\n"
                }, 
                "display_for_value": {
                    "type": "string", 
                    "description": "String corresponding to the value to be displayed on UI."
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value of property."
                }, 
                "property_name": {
                    "type": "string", 
                    "description": "Name of the entity property."
                }, 
                "display_for_operator": {
                    "type": "string", 
                    "description": "String corresponding to the operator to be displayed on UI."
                }
            }, 
            "title": "Filter Expression definition."
        }, 
        "ipfix_exporter_intent_response": {
            "description": "Response object for intentful operations on a ipfix_exporter", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ipfix_exporter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Response"
        }, 
        "postal_address": {
            "description": "Postal address", 
            "type": "object", 
            "properties": {
                "country": {
                    "type": "string", 
                    "description": "Country name", 
                    "maxLength": 100
                }, 
                "state": {
                    "type": "string", 
                    "description": "State name", 
                    "maxLength": 100
                }, 
                "street": {
                    "type": "string", 
                    "description": "Street name and number", 
                    "maxLength": 100
                }, 
                "city": {
                    "type": "string", 
                    "description": "City name", 
                    "maxLength": 100
                }, 
                "zip_code": {
                    "type": "string", 
                    "description": "Zip code", 
                    "maxLength": 20
                }
            }, 
            "title": "Postal address"
        }, 
        "blueprint_upload_resources": {
            "description": "Resources for Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_input_upload"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }
            }, 
            "title": "Resources for Blueprint."
        }, 
        "remote_syslog_server_intent_resource": {
            "description": "Response object for intentful operations on a remote_syslog_server", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_server_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Response"
        }, 
        "role_intent_resource": {
            "description": "Response object for intentful operations on a role", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/role_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Response"
        }, 
        "mh_vm_storage_config_status": {
            "description": "Current state of storage parameters", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters applied on the VM.", 
                    "$ref": "#/definitions/storage_qos_policy_config_output"
                }, 
                "flash_mode": {
                    "description": "Indicates whether Flash Mode is enabled or disabled on the VM.\nWhen enabled, virtual disks of VM are pinned to the hot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config output"
        }, 
        "ngt_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "network_function_chain_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_function_chain list output"
        }, 
        "role_intent_input": {
            "description": "An intentful representation of a role", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Entity"
        }, 
        "citrix_adapter_resources_status": {
            "description": "Citrix Adapter resources definition.", 
            "type": "object", 
            "properties": {
                "citrix_vm_reference_list": {
                    "items": {
                        "$ref": "#/definitions/vm_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of vm ids registered with citrix cloud."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud."
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud."
                }, 
                "resource_location": {
                    "$ref": "#/definitions/citrix_adapter_resource_location_status"
                }
            }, 
            "title": "Citrix Adapter state resources"
        }, 
        "ip_address": {
            "description": "An IP address.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Address string."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "ASSIGNED", 
                        "LEARNED"
                    ], 
                    "type": "string", 
                    "description": "Address type. It can only be \"ASSIGNED\" in the spec. If no type is\nspecified in the spec, the default type is set to \"ASSIGNED\".\n"
                }, 
                "gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Gateway IP addresses matching the subnet."
                }, 
                "prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Prefix length for the IP address.", 
                    "maximum": 32, 
                    "format": "int32"
                }, 
                "ip_type": {
                    "x-ntnx-enum": [
                        "DHCP", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether IP address is DHCP or Static."
                }
            }, 
            "title": "IP Address"
        }, 
        "marketplace_item_render_input": {
            "description": "Source spec that describes an entity like a VM, Image that should be translated into an marketplace item\n", 
            "required": [
                "name", 
                "input_type", 
                "input_spec"
            ], 
            "type": "object", 
            "properties": {
                "input_type": {
                    "x-ntnx-enum": [
                        "VM_REFERENCE", 
                        "VM_REFERENCE_WITH_CUSTOMIZATION", 
                        "IMAGE_REFERENCE"
                    ], 
                    "type": "string"
                }, 
                "input_spec": {
                    "properties": {
                        "vm_reference_with_customization": {
                            "$ref": "#/definitions/vm_reference_with_customization"
                        }, 
                        "vm_reference": {
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "image_reference": {
                            "$ref": "#/definitions/image_reference"
                        }
                    }, 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "vm_reference"
                            ]
                        }, 
                        {
                            "required": [
                                "vm_reference_with_customization"
                            ]
                        }, 
                        {
                            "required": [
                                "image_reference"
                            ]
                        }
                    ], 
                    "type": "object", 
                    "description": "Spec based on the type", 
                    "title": "Spec for the given entity type"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rendered marketplace item", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the rendered marketplace item", 
                    "maxLength": 1000
                }
            }, 
            "title": "Render marketplace item input spec"
        }, 
        "resource_charge_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for resource_charge list output"
        }, 
        "support_case_upload": {
            "description": "Support Case upload spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "description": "Support Case upload resource definition.", 
                    "type": "object", 
                    "properties": {
                        "portal_request_params": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "log_collector": {
                            "$ref": "#/definitions/log_collector_support_case_upload"
                        }, 
                        "ncc_checks": {
                            "$ref": "#/definitions/ncc_checks_support_case_upload"
                        }, 
                        "case_number": {
                            "type": "string", 
                            "description": "Support Case Number. This is the pretty version of case as visible to the user. Example \"00151752\"\n"
                        }
                    }, 
                    "title": "Support Case Upload Resources."
                }
            }, 
            "title": "Support Case Upload Spec."
        }, 
        "cmsp_config": {
            "description": "MSP configuration for CMSP on PC used in deployment and enablement.\n", 
            "required": [
                "platform_ip_block_list", 
                "pc_domain_name", 
                "platform_network_configuration"
            ], 
            "type": "object", 
            "properties": {
                "platform_ip_block_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "IP range blocks for CMSP."
                }, 
                "platform_network_configuration": {
                    "$ref": "#/definitions/cmsp_network_config"
                }, 
                "pc_domain_name": {
                    "pattern": "^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$", 
                    "maxLength": 255, 
                    "type": "string", 
                    "description": "The domain name for CMSP.", 
                    "minLength": 1
                }
            }, 
            "title": "CMSP configuration."
        }, 
        "citrix_adapter_def_status": {
            "description": "Citrix Adapter details.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the Citrix Adapter."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the Citrix Adapter, if in an error state."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Citrix Adapter name."
                }, 
                "resources": {
                    "$ref": "#/definitions/citrix_adapter_resources_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation of citrix adapter."
                }
            }, 
            "title": "Citrix Adapter details"
        }, 
        "role_reference": {
            "description": "The reference to a role", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a role"
        }, 
        "remote_syslog_server_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_syslog_server list"
        }, 
        "rack": {
            "description": "Rack entity definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the rack", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/rack_resources"
                }
            }, 
            "title": "Rack Entity"
        }, 
        "vm_gpu_metadata": {
            "description": "The vm_gpu kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_gpu was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_gpu uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_gpu was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_gpu. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_gpu. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_gpu name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_gpu metadata"
        }, 
        "groups_timevalue_pair": {
            "description": "Time-Value Pair Data.", 
            "type": "object", 
            "properties": {
                "values": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "time": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Time-Value Pair"
        }, 
        "permission_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "x-ntnx-enum": [
                        "permission"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for permission list"
        }, 
        "vm_snapshot_metadata": {
            "description": "The vm_snapshot kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_snapshot was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_snapshot"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_snapshot uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_snapshot was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_snapshot. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_snapshot. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_snapshot name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_snapshot metadata"
        }, 
        "host_metadata": {
            "description": "The host kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when host was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "host uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when host was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the host. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the host. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "host name", 
                    "maxLength": 80
                }
            }, 
            "title": "host metadata"
        }, 
        "resource_domain_reference": {
            "description": "The reference to a resource_domain", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a resource_domain"
        }, 
        "citrix_resource_location_spec": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id.", 
                    "maxLength": 200
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name.", 
                    "maxLength": 200
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "citrix_adapter_intent_response": {
            "description": "Response object for intentful operations on a citrix_adapter", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/citrix_adapter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/citrix_adapter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/citrix_adapter_metadata"
                }
            }, 
            "title": "citrix_adapter Intent Response"
        }, 
        "vm_intent_response": {
            "description": "Response object for intentful operations on a vm", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Response"
        }, 
        "app_published_service_reference": {
            "description": "The reference to a app_published_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_published_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_published_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_published_service"
        }, 
        "cluster_list_intent_response": {
            "description": "Response object for intentful operation of clusters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cluster_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "resource_charge_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_nic_reference": {
            "description": "The reference to a vm_nic", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_nic"
        }, 
        "software_type": {
            "x-ntnx-enum": [
                "NOS", 
                "NCC", 
                "PRISM_CENTRAL"
            ], 
            "type": "string", 
            "description": "Software type", 
            "title": "Software type"
        }, 
        "vm_gpu_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_gpu list output"
        }, 
        "cloud_credentials_intent_input": {
            "description": "An intentful representation of a cloud_credentials", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Entity"
        }, 
        "remote_syslog_module_reference": {
            "description": "The reference to a remote_syslog_module", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_syslog_module"
        }, 
        "rack_intent_input": {
            "description": "An intentful representation of a rack", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Entity"
        }, 
        "directory_service_user": {
            "description": "A Directory Service user.", 
            "type": "object", 
            "properties": {
                "user_principal_name": {
                    "type": "string", 
                    "description": "The UserPrincipalName of the user from the directory service.\n", 
                    "maxLength": 104
                }, 
                "directory_service_reference": {
                    "description": "Directory service reference if the user type is directory service.\n", 
                    "$ref": "#/definitions/directory_service_reference"
                }
            }, 
            "title": "Directory Service user Definition."
        }, 
        "remote_syslog_server": {
            "description": "Remote Syslog server creation/modification spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/syslog_server_resources"
                }
            }, 
            "title": "Remote Syslog server creation/modification spec."
        }, 
        "app_substrate_input": {
            "description": "Substrate definition", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Substrate definition"
        }, 
        "alert_metadata": {
            "description": "The alert kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when alert was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "alert uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when alert was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the alert. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the alert. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "alert name", 
                    "maxLength": 80
                }
            }, 
            "title": "alert metadata"
        }, 
        "remote_syslog_module_intent_input": {
            "description": "An intentful representation of a remote_syslog_module", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Entity"
        }, 
        "app_credential_response_download": {
            "description": "Credential definition for Application", 
            "required": [
                "name", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Credential for Application"
        }, 
        "blueprint_pending_launches_response": {
            "description": "Response containing status, milestone reached and application uuid", 
            "required": [
                "state", 
                "milestone", 
                "bp_name", 
                "app_name"
            ], 
            "type": "object", 
            "properties": {
                "application_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "application uuid present after the status moves to success", 
                    "format": "UUID"
                }, 
                "app_name": {
                    "type": "string", 
                    "description": "name of the application"
                }, 
                "state": {
                    "type": "string", 
                    "description": "state of launch which can be pending, running, success, failure"
                }, 
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "details": {
                    "type": "string", 
                    "description": "additional details about the status of launch"
                }, 
                "milestone": {
                    "type": "string", 
                    "description": "gives more granularity in status"
                }, 
                "bp_name": {
                    "type": "string", 
                    "description": "name of the blueprint"
                }
            }, 
            "title": "Response containing the state of the launch"
        }, 
        "remote_syslog_server_reference": {
            "description": "The reference to a remote_syslog_server", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_syslog_server"
        }, 
        "project_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "x-ntnx-enum": [
                        "project"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for project list output"
        }, 
        "ipfix_exporter_resources": {
            "description": "IPFix exporter API resources definition", 
            "type": "object", 
            "properties": {
                "collector_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the IPFix collector"
                }, 
                "collector_protocol": {
                    "x-ntnx-enum": [
                        "UDP", 
                        "TCP"
                    ], 
                    "type": "string", 
                    "description": "Network Protocol used by the IPFix collector"
                }, 
                "collector_port": {
                    "type": "integer", 
                    "description": "Port of the IPFix collector", 
                    "format": "int32"
                }
            }, 
            "title": "IPFix exporter API resources"
        }, 
        "subnet_resources": {
            "description": "Subnet creation/modification spec.", 
            "required": [
                "subnet_type"
            ], 
            "type": "object", 
            "properties": {
                "subnet_type": {
                    "x-ntnx-enum": [
                        "VLAN", 
                        "OVERLAY"
                    ], 
                    "type": "string"
                }, 
                "vpc_reference": {
                    "description": "The VPC this subnet belongs to (Only supported on Xi).\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "virtual_switch_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Reference to virtual switch", 
                    "format": "UUID"
                }, 
                "is_external": {
                    "type": "boolean", 
                    "description": "Whether the subnet is external subnet or not."
                }, 
                "vswitch_name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "reserved_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IPs that are not considered while allocating IP addresses to Atlas ports.\n"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones from which resources are derived (Only supported on Xi).\n"
                }, 
                "ip_config": {
                    "$ref": "#/definitions/ip_config"
                }, 
                "external_connectivity_state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "External connectivity state (Only supported on Xi)"
                }, 
                "vlan_id": {
                    "minimum": 0, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this subnet belongs to (Only supported on Xi). This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "Subnet creation/modification spec"
        }, 
        "account_metadata": {
            "description": "The account kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when account was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "account uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when account was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the account. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the account. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "account name", 
                    "maxLength": 80
                }
            }, 
            "title": "account metadata"
        }, 
        "ssh_user_reference": {
            "description": "The reference to a ssh_user", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ssh_user"
        }, 
        "ca_chain_spec": {
            "description": "CA chain spec", 
            "required": [
                "name", 
                "ca_chain"
            ], 
            "type": "object", 
            "properties": {
                "ca_chain": {
                    "type": "string", 
                    "description": "Content of CA chain", 
                    "format": "byte"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the CA Chain file", 
                    "maxLength": 64
                }
            }, 
            "title": "CA chain spec"
        }, 
        "vm_snapshot_list_intent_response": {
            "description": "Response object for intentful operation of vm_snapshots", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_snapshot_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_snapshot_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "port_range_status": {
            "description": "Range of TCP/UDP ports.", 
            "type": "object", 
            "properties": {
                "end_port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "start_port": {
                    "type": "integer", 
                    "format": "int32"
                }
            }, 
            "title": "TCP/UDP ports."
        }, 
        "file_item_reference": {
            "description": "The reference to a file_item", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a file_item"
        }, 
        "ncc_tags_response": {
            "description": "NCC Tags Response.", 
            "type": "object", 
            "properties": {
                "entities_list": {
                    "items": {
                        "$ref": "#/definitions/ncc_tag"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "NCC Tags Response"
        }, 
        "blueprint_launch_response": {
            "description": "Response containing the application uuid and create action and runlog uuid", 
            "required": [
                "api_version", 
                "metadata", 
                "status", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_launch_response_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Response containing the application uuid and create action runlog uuid"
        }, 
        "policies": {
            "items": {
                "type": "object", 
                "properties": {
                    "policy": {
                        "type": "object", 
                        "description": "Policy object which will be interpreted by the provider"
                    }, 
                    "type": {
                        "type": "string", 
                        "description": "The policy type"
                    }
                }
            }, 
            "type": "array", 
            "description": "Settings that modify the behavior of the entity. They will be interpreted\nby built in or the third party providers\n", 
            "title": "Policies"
        }, 
        "volume_group_snapshot_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group_snapshot", 
                    "x-ntnx-enum": [
                        "volume_group_snapshot"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for volume_group_snapshot list output"
        }, 
        "docker_registry_list_intent_response": {
            "description": "Response object for intentful operation of docker_registrys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "file_item": {
            "description": "An intentful representation of a file_item spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "file_item Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for file_item.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/file_item_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "file_item Intent Spec with placement specified"
        }, 
        "resource_utilization_spec": {
            "description": "specify the limits and units for a resource type", 
            "required": [
                "resource_type"
            ], 
            "properties": {
                "limit": {
                    "type": "integer", 
                    "description": "The resource consumption limit"
                }, 
                "resource_type": {
                    "x-ntnx-enum": [
                        "STORAGE", 
                        "MEMORY", 
                        "VCPUS", 
                        "VMS"
                    ], 
                    "type": "string", 
                    "description": "The type of resource (i.e. storage, CPUs)"
                }
            }, 
            "title": "Resource Utilization Specification"
        }, 
        "remote_syslog_server_intent_input": {
            "description": "An intentful representation of a remote_syslog_server", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Entity"
        }, 
        "category_value_status": {
            "description": "Category value definition.", 
            "type": "object", 
            "properties": {
                "assignment_rule": {
                    "$ref": "#/definitions/assignment_rule"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The name of the category.", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": "The value of the category.", 
                    "maxLength": 64
                }, 
                "system_defined": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Specifying whether its a system defined category."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category value.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Category Value Definition."
        }, 
        "address": {
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "fqdn": {
                    "type": "string", 
                    "description": "Fully qualified domain name."
                }, 
                "is_backup": {
                    "type": "boolean", 
                    "description": "Whether this address is a backup or not."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port Number", 
                    "format": "int32"
                }, 
                "ipv6": {
                    "pattern": "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))", 
                    "type": "string", 
                    "description": "IPV6 address."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ip"
                    ]
                }, 
                {
                    "required": [
                        "ipv6"
                    ]
                }, 
                {
                    "required": [
                        "fqdn"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Host address.", 
            "title": "Host address."
        }, 
        "alert_intent_input": {
            "description": "An intentful representation of a alert", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Entity"
        }, 
        "guest_customization": {
            "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \"override_script\" is set to \"True\" then the deployer can upload their own custom script.\n", 
            "title": "Guest Customization Configuration for creation/modification request", 
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "properties": {
                "cloud_init": {
                    "description": "If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "user_data"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "meta_data": {
                            "type": "string", 
                            "description": "The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.\n", 
                            "maxLength": 32000
                        }, 
                        "user_data": {
                            "type": "string", 
                            "description": "The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.\n", 
                            "maxLength": 128000
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }, 
                "is_overridable": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Flag to allow override of customization by deployer."
                }, 
                "sysprep": {
                    "description": "If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "unattend_xml"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "install_type": {
                            "default": "PREPARED", 
                            "x-ntnx-enum": [
                                "FRESH", 
                                "PREPARED"
                            ], 
                            "type": "string", 
                            "description": "Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is \"PREPARED\".\n"
                        }, 
                        "unattend_xml": {
                            "type": "string", 
                            "description": "This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.\n", 
                            "maxLength": 32000
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "sysprep"
                    ]
                }, 
                {
                    "required": [
                        "cloud_init"
                    ]
                }
            ]
        }, 
        "alert_intent_response": {
            "description": "Response object for intentful operations on a alert", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/alert_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Response"
        }, 
        "ncc_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ncc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ncc"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "volume_group_metadata": {
            "description": "The volume_group kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "volume_group uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "volume_group name", 
                    "maxLength": 80
                }
            }, 
            "title": "volume_group metadata"
        }, 
        "app_action_input_upload": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_input_upload"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Action for Application"
        }, 
        "user_group_reference": {
            "description": "The reference to a user_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a user_group"
        }, 
        "app_published_service_response_download": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Published service definition"
        }, 
        "idempotence_identifiers_metadata": {
            "description": "The idempotence_identifiers kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when idempotence_identifiers was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "idempotence_identifiers uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when idempotence_identifiers was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the idempotence_identifiers. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the idempotence_identifiers. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "idempotence_identifiers name", 
                    "maxLength": 80
                }
            }, 
            "title": "idempotence_identifiers metadata"
        }, 
        "support_case_upload_def_status": {
            "description": "Support Case upload status.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "description": "Definition of support case.", 
                    "type": "object", 
                    "properties": {
                        "portal_request_params": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "log_collector": {
                            "$ref": "#/definitions/log_collector_support_case_upload"
                        }, 
                        "ncc_checks": {
                            "$ref": "#/definitions/ncc_checks_support_case_upload"
                        }, 
                        "case_number": {
                            "type": "string", 
                            "description": "Support Case Number. This is the pretty version of case as visible to the user. Example \"00151752\"\n"
                        }
                    }, 
                    "title": "Support Case Upload."
                }
            }, 
            "title": "Support Case Upload Status."
        }, 
        "checksum": {
            "description": "Image checksum", 
            "required": [
                "checksum_algorithm", 
                "checksum_value"
            ], 
            "properties": {
                "checksum_algorithm": {
                    "$ref": "#/definitions/checksum_algorithm"
                }, 
                "checksum_value": {
                    "type": "string", 
                    "format": "bytes"
                }
            }, 
            "title": "Image checksum"
        }, 
        "host": {
            "description": "Host Definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Host Name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Host resources.", 
                    "properties": {
                        "windows_domain": {
                            "$ref": "#/definitions/windows_domain"
                        }, 
                        "controller_vm": {
                            "$ref": "#/definitions/controller_vm"
                        }, 
                        "failover_cluster": {
                            "$ref": "#/definitions/failover_cluster"
                        }
                    }
                }
            }, 
            "title": "Host Input definition"
        }, 
        "resource_charge_reference": {
            "description": "The reference to a resource_charge", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a resource_charge"
        }, 
        "subnet_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "x-ntnx-enum": [
                        "subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for subnet list"
        }, 
        "webhook_event_type": {
            "x-ntnx-enum": [
                "VM.CREATE", 
                "VM.DELETE", 
                "VM.ON", 
                "VM.OFF", 
                "VM.UPDATE", 
                "VM.MIGRATE", 
                "VM.NIC_PLUG", 
                "VM.NIC_UNPLUG", 
                "SUBNET.CREATE", 
                "SUBNET.DELETE", 
                "SUBNET.UPDATE"
            ], 
            "type": "string", 
            "description": "Webhook event type.", 
            "title": "Webhook event type"
        }, 
        "app_service_port": {
            "description": "Port for Application Service.", 
            "required": [
                "target_port", 
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string", 
                    "description": ""
                }, 
                "exposed_port": {
                    "type": "string", 
                    "description": ""
                }, 
                "exposed_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "target_port": {
                    "type": "string", 
                    "description": ""
                }, 
                "endpoint_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }
            }, 
            "title": "Port for Application Service."
        }, 
        "groups_group_summary_map": {
            "additionalProperties": {
                "$ref": "#/definitions/groups_field_data"
            }, 
            "type": "object", 
            "description": "Group Summary Info Map.", 
            "title": "Group Summary Map"
        }, 
        "permission_resources": {
            "description": "Permission resources definition.", 
            "required": [
                "operation", 
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "fields": {
                    "description": "The fields that can/cannot be accessed during the specified operation. field_name_list will be a list of fields. e.g. if field_mode = disallowed, field_name_list = [\"xyz\"] then the list of allowed fields is ALL fields minus xyz\n", 
                    "required": [
                        "field_mode", 
                        "field_name_list"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field_mode": {
                            "x-ntnx-enum": [
                                "ALLOWED", 
                                "DISALLOWED", 
                                "NONE"
                            ], 
                            "type": "string", 
                            "description": "Allow or disallow the fields mentioned."
                        }, 
                        "field_name_list": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "The list of fields."
                        }
                    }, 
                    "title": "The fields that can be allowed or disallowed during an operation."
                }, 
                "operation": {
                    "type": "string", 
                    "description": "The operation that is being performed on a given kind."
                }, 
                "kind": {
                    "type": "string", 
                    "description": "The kind on which the operation is being performed."
                }
            }, 
            "title": "Permission entity resources."
        }, 
        "app_runbook_input": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "cloud_credentials": {
            "description": "Cloud credentials spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "User friendly name for the credentials.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_credentials_resources"
                }
            }, 
            "title": "Cloud Credentials Spec"
        }, 
        "file_item_metadata": {
            "description": "The file_item kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when file_item was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "file_item uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when file_item was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the file_item. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the file_item. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "file_item name", 
                    "maxLength": 80
                }
            }, 
            "title": "file_item metadata"
        }, 
        "vm_resources_def_status": {
            "description": "VM Resources Status Definition.", 
            "type": "object", 
            "properties": {
                "num_threads_per_core": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of logical threads per core.", 
                    "format": "int32"
                }, 
                "gpu_list": {
                    "items": {
                        "$ref": "#/definitions/vm_gpu_output_status"
                    }, 
                    "type": "array", 
                    "description": "GPUs attached to the VM."
                }, 
                "memory_size_mib": {
                    "type": "integer", 
                    "description": "Memory size in MiB.", 
                    "format": "int32"
                }, 
                "boot_config": {
                    "description": "Indicates which device the VM should boot from.", 
                    "$ref": "#/definitions/vm_boot_config"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/vm_disk_output_status"
                    }, 
                    "type": "array", 
                    "description": "Disks attached to the VM."
                }, 
                "serial_port_list": {
                    "items": {
                        "$ref": "#/definitions/serial_port"
                    }, 
                    "type": "array", 
                    "description": "Serial ports configured on the VM."
                }, 
                "is_vcpu_hard_pinned": {
                    "type": "boolean", 
                    "description": "Indicates whether the vCPUs should be hard pinned to specific pCPUs."
                }, 
                "power_state": {
                    "x-ntnx-enum": [
                        "ON", 
                        "OFF", 
                        "PAUSED", 
                        "UNKNOWN"
                    ], 
                    "type": "string", 
                    "description": "Current power state of the VM."
                }, 
                "num_vcpus_per_socket": {
                    "type": "integer", 
                    "description": "Number of vCPUs per socket.", 
                    "format": "int32"
                }, 
                "num_sockets": {
                    "type": "integer", 
                    "description": "Number of vCPU sockets.", 
                    "format": "int32"
                }, 
                "hardware_virtualization_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether hardware assisted virtualization should be enabled for the Guest OS. Once enabled, the Guest OS has the ability to deploy a nested hypervisor.\n"
                }, 
                "storage_config": {
                    "description": "Current status of storage configuration for AHV VMs.", 
                    "$ref": "#/definitions/vm_storage_config_status"
                }, 
                "protection_type": {
                    "x-ntnx-enum": [
                        "UNPROTECTED", 
                        "PD_PROTECTED", 
                        "RULE_PROTECTED"
                    ], 
                    "type": "string", 
                    "description": "The type of protection applied on a VM. PD_PROTECTED indicates a VM protected using Prism Element. RULE_PROTECTED indicates a VM protected using Prism Central.\n"
                }, 
                "machine_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "PSERIES", 
                        "Q35"
                    ], 
                    "type": "string", 
                    "description": "Machine type for the VM. Machine type Q35 is required for secure boot and does not support IDE disks.\n"
                }, 
                "hardware_clock_timezone": {
                    "type": "string", 
                    "description": "VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).\n"
                }, 
                "guest_customization": {
                    "$ref": "#/definitions/guest_customization_status"
                }, 
                "power_state_mechanism": {
                    "$ref": "#/definitions/vm_power_state_mechanism"
                }, 
                "vga_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether VGA console has been enabled or not."
                }, 
                "vnuma_config": {
                    "description": "Information regarding vNUMA configuration.", 
                    "$ref": "#/definitions/vm_vnuma_config"
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/vm_nic_output_status"
                    }, 
                    "type": "array", 
                    "description": "NICs attached to the VM."
                }, 
                "host_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_os_id": {
                    "type": "string", 
                    "description": "String that identifies the OS running inside of the guest. Reserved for use by the system. Do not set or modify."
                }, 
                "is_agent_vm": {
                    "type": "boolean", 
                    "description": "Indicates whether the VM is an agent VM."
                }, 
                "hypervisor_type": {
                    "x-ntnx-enum": [
                        "ESX", 
                        "HyperV", 
                        "AHV"
                    ], 
                    "type": "string", 
                    "description": "The hypervisor type for the hypervisor the VM is hosted on.\n"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_status"
                }, 
                "enable_cpu_passthrough": {
                    "type": "boolean", 
                    "description": "Indicates whether to passthrough the host's CPU features to the guest. Enabling this will disable live migration of the VM.\n"
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VM was cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "disable_branding": {
                    "type": "boolean", 
                    "description": "Indicates whether to remove AHV branding from VM firmware tables.\n"
                }
            }, 
            "title": "VM Resources Status Definition"
        }, 
        "description_item": {
            "description": "Description item of upgrade notification", 
            "type": "object", 
            "properties": {
                "affected_release_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Earlier releases to which the notification applies."
                }, 
                "message": {
                    "type": "string"
                }, 
                "severity_level": {
                    "type": "string"
                }
            }, 
            "title": "Description item of upgrade notification"
        }, 
        "access_control_policy_metadata": {
            "description": "The access_control_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when access_control_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "access_control_policy uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when access_control_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the access_control_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the access_control_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "access_control_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "access_control_policy metadata"
        }, 
        "app_substrate_reference": {
            "description": "The reference to a app_substrate", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_substrate", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_substrate"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_substrate"
        }, 
        "guest_customization_status": {
            "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \"override_script\" is set to \"True\" then the deployer can upload their own custom script.\n", 
            "title": "Guest Customization Configuration for creation/modification request", 
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "properties": {
                "cloud_init": {
                    "description": "If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "user_data"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "meta_data": {
                            "type": "string", 
                            "description": "The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.\n"
                        }, 
                        "user_data": {
                            "type": "string", 
                            "description": "The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.\n"
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }, 
                "is_overridable": {
                    "type": "boolean", 
                    "description": "Flag to allow override of customization by deployer."
                }, 
                "sysprep": {
                    "description": "If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "unattend_xml"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "install_type": {
                            "default": "PREPARED", 
                            "x-ntnx-enum": [
                                "FRESH", 
                                "PREPARED"
                            ], 
                            "type": "string", 
                            "description": "Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is \"PREPARED\".\n"
                        }, 
                        "unattend_xml": {
                            "type": "string", 
                            "description": "This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.\n"
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "sysprep"
                    ]
                }, 
                {
                    "required": [
                        "cloud_init"
                    ]
                }
            ]
        }, 
        "capability_response": {
            "description": "Generic capabilties object response definition", 
            "type": "object", 
            "properties": {
                "capabilities": {
                    "items": {
                        "$ref": "#/definitions/capability"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Capabilities response"
        }, 
        "marketplace_item_render_output": {
            "description": "The UUID of the newly created Marketplace item", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "uuid of the newly created Marketplace item", 
                    "format": "UUID"
                }
            }, 
            "title": "Render marketplace item output"
        }, 
        "support_case_upload_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for support_case_upload list output"
        }, 
        "external_network": {
            "description": "External network resource.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "External network"
        }, 
        "blueprint_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "volume_group_intent_resource": {
            "description": "Response object for intentful operations on a volume_group", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Response"
        }, 
        "cloud_credentials_metadata": {
            "description": "The cloud_credentials kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_credentials was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cloud_credentials uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_credentials was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_credentials. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_credentials. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cloud_credentials name", 
                    "maxLength": 80
                }
            }, 
            "title": "cloud_credentials metadata"
        }, 
        "app_published_service_input_upload": {
            "description": "Published service definition", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference_upload"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service definition"
        }, 
        "software_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "x-ntnx-enum": [
                        "software"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for software list"
        }, 
        "environment": {
            "description": "An intentful representation of a environment spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "environment Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for environment.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/environment_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "environment Intent Spec with placement specified"
        }, 
        "remote_syslog_module_list_intent_response": {
            "description": "Response object for intentful operation of remote_syslog_modules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_syslog_module_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "guest_tools_spec": {
            "description": "Information regarding guest tools.", 
            "type": "object", 
            "properties": {
                "nutanix_guest_tools": {
                    "description": "Nutanix Guest Tools information", 
                    "$ref": "#/definitions/nutanix_guest_tools_spec"
                }
            }, 
            "title": "Guest Tools information"
        }, 
        "certificate": {
            "description": "Certificate content", 
            "required": [
                "content"
            ], 
            "type": "object", 
            "properties": {
                "content": {
                    "type": "string", 
                    "description": "Certificate content", 
                    "format": "byte"
                }
            }, 
            "title": "Certificate content"
        }, 
        "task_poll_input": {
            "description": "Input for a task poll", 
            "required": [
                "poll_timeout_seconds", 
                "task_uuid_list"
            ], 
            "type": "object", 
            "properties": {
                "poll_timeout_seconds": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Poll timeout in seconds", 
                    "maximum": 30, 
                    "format": "int32"
                }, 
                "task_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of task UUIDs to poll on", 
                    "title": "List of task UUIDs to poll on"
                }
            }, 
            "title": "Input for the task poll"
        }, 
        "destination": {
            "description": "NCC Destination Of The Log Bundle.", 
            "required": [
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/destination_credentials"
                }, 
                "path": {
                    "type": "string", 
                    "description": "Path to create bundle at, in sftp/ftp server."
                }, 
                "protocol": {
                    "x-ntnx-enum": [
                        "SFTP", 
                        "FTP", 
                        "FILE"
                    ], 
                    "type": "string", 
                    "description": "NCC protocol."
                }, 
                "address": {
                    "type": "string", 
                    "description": "This is ip address of the target i.e. sftp/ftp server ip:port."
                }
            }, 
            "title": "NCC Destination Log Bundle"
        }, 
        "account_def_status": {
            "description": "An intentful representation of a account status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "account Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the account."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the account, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/account_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for account."
                }
            }, 
            "title": "account Intent Status with placement specified"
        }, 
        "blueprint_intent_response": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "project_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "host_gpu": {
            "description": "Host GPU.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "UNUSED", 
                        "USED_FOR_PASSTHROUGH", 
                        "USED_FOR_VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "Current status of the physical GPU."
                }, 
                "assignable": {
                    "type": "boolean", 
                    "description": "Whether this vGPU instance can be allocated to a VM."
                }, 
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the host GPU."
                }, 
                "index": {
                    "type": "integer", 
                    "description": "The index of the vGPU within physical GPU resource.", 
                    "format": "int32"
                }, 
                "license_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of license types associated with this GPU."
                }, 
                "numa_node": {
                    "type": "integer", 
                    "description": "NUMA node this GPU belongs to.", 
                    "format": "int32"
                }, 
                "max_resolution": {
                    "type": "string", 
                    "description": "Maximum resolution per display head."
                }, 
                "num_vgpus_allocated": {
                    "type": "integer", 
                    "description": "The number of vGPU instances allocated for this physical GPU resource.\n", 
                    "format": "int32"
                }, 
                "consumer_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "pci_address": {
                    "type": "string", 
                    "description": "GPU {segment:bus:device:function} (sbdf) address."
                }, 
                "fraction": {
                    "type": "integer", 
                    "description": "Fraction of the physical GPU.", 
                    "format": "int32"
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The type of this GPU."
                }, 
                "num_virtual_display_heads": {
                    "type": "integer", 
                    "description": "Number of supported virtual display heads.", 
                    "format": "int32"
                }, 
                "guest_driver_version": {
                    "type": "string", 
                    "description": "Last determined guest driver version."
                }, 
                "frame_buffer_size_mib": {
                    "type": "integer", 
                    "description": "GPU frame buffer size in MiB.", 
                    "format": "int64"
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }, 
                "max_instances_per_vm": {
                    "type": "integer", 
                    "description": "Maximum number of vGPUs of a GPU type assignable to a VM.", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the GPU.", 
                    "format": "UUID"
                }
            }, 
            "title": "Host GPU"
        }, 
        "blueprint_launch_spec": {
            "description": "Spec for Blueprint launch.", 
            "type": "object", 
            "properties": {
                "application_name": {
                    "type": "string", 
                    "description": "Application name by which the application need to be created."
                }, 
                "app_profile_reference": {
                    "$ref": "#/definitions/app_profile_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "description for blueprint launch", 
                    "maxLength": 5000
                }, 
                "resources": {
                    "description": "Runtime updated blueprint spec.", 
                    "$ref": "#/definitions/blueprint_resources"
                }
            }, 
            "title": "Spec for Blueprint launch."
        }, 
        "vm_nic_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_nic list"
        }, 
        "app_action_input": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_input"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Action for Application"
        }, 
        "dhcp_options": {
            "description": "Spec for defining DHCP options.", 
            "type": "object", 
            "properties": {
                "domain_name_server_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "maxItems": 32
                }, 
                "boot_file_name": {
                    "type": "string"
                }, 
                "domain_search_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "maxItems": 32
                }, 
                "domain_name": {
                    "type": "string"
                }, 
                "tftp_server_name": {
                    "type": "string"
                }
            }, 
            "title": "DHCP options"
        }, 
        "directory_service_search_response": {
            "description": "The response returned for directory service search operation.", 
            "type": "object", 
            "properties": {
                "search_result_list": {
                    "items": {
                        "$ref": "#/definitions/entity"
                    }, 
                    "type": "array"
                }, 
                "domain_name": {
                    "type": "string", 
                    "description": "The domain name of the directory service."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_search_metadata"
                }
            }, 
            "title": "Directory service search response"
        }, 
        "network_function_reference": {
            "description": "The reference to a network_function", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_function"
        }, 
        "file_item_intent_input": {
            "description": "An intentful representation of a file_item", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Entity"
        }, 
        "vm_boot_device": {
            "properties": {
                "disk_address": {
                    "description": "Address of disk to boot from.", 
                    "$ref": "#/definitions/disk_address"
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "MAC address of nic to boot from.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "disk_address"
                    ]
                }, 
                {
                    "required": [
                        "mac_address"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Indicates which device a VM should boot from. One of disk_address or mac_address should be provided.\n", 
            "title": "VM Boot device"
        }, 
        "account_list_intent_response": {
            "description": "Response object for intentful operation of accounts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/account_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "alert_action_input": {
            "description": "Alert acknowlegement or resolution input parameters.", 
            "type": "object", 
            "properties": {
                "alert_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "A list of alert UUIDs to be acknowledged or resolved.  If the list is\nempty, that means resolve all alerts in the system.\n"
                }
            }, 
            "title": "Alert acknowlegement or resolution input."
        }, 
        "user_group_intent_response": {
            "description": "Response object for intentful operations on a user_group", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Response"
        }, 
        "app_service_element": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service element for Application"
        }, 
        "disk": {
            "type": "object", 
            "description": "Disk specification.", 
            "title": "Disk specification."
        }, 
        "rackable_unit_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cluster_management_server": {
            "description": "Cluster Management server information.", 
            "required": [
                "ip", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "drs_enabled": {
                    "type": "boolean", 
                    "description": "Denotes if DRS is enabled or not."
                }, 
                "status_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "REGISTERED", 
                            "IN_USE"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of management server status: - 'REGISTERED': Indicates whether the server is registered with\n                Nutanix or not.\n- 'IN_USE': Indicates whether any host is managed by this server or\n            not.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VCENTER"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Cluster Management Server"
        }, 
        "blueprint_deployment_input_upload": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action"
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment definition for Application."
        }, 
        "host_intent_response": {
            "description": "Response object for intentful operations on a host", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/host_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Response"
        }, 
        "user_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "x-ntnx-enum": [
                        "user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for user list output"
        }, 
        "tenant_metadata": {
            "description": "The tenant kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when tenant was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "tenant uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when tenant was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the tenant. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the tenant. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "tenant name", 
                    "maxLength": 80
                }
            }, 
            "title": "tenant metadata"
        }, 
        "storage_qos_policy_config_output": {
            "description": "QoS parameters being enforced", 
            "type": "object", 
            "properties": {
                "throttled_iops": {
                    "type": "integer", 
                    "description": "Throttled iops for the entities being governed.\nThe block size for the IO is 32kB.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Storage Qos Configuration Output"
        }, 
        "customization_spec_metadata": {
            "description": "The customization_spec kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when customization_spec was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "customization_spec uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when customization_spec was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the customization_spec. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the customization_spec. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "customization_spec name", 
                    "maxLength": 80
                }
            }, 
            "title": "customization_spec metadata"
        }, 
        "directory_service_user_group_input": {
            "description": "A Directory Service user group.", 
            "type": "object", 
            "properties": {
                "distinguished_name": {
                    "type": "string", 
                    "description": "The Distinguished name for the user group.", 
                    "maxLength": 255
                }
            }, 
            "title": "A Directory Service user group."
        }, 
        "citrix_connector_config_details_spec": {
            "description": "Citrix Connector details.", 
            "type": "object", 
            "properties": {
                "citrix_vm_reference_list": {
                    "items": {
                        "$ref": "#/definitions/vm_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of vm ids registered with citrix cloud."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "resource_location": {
                    "$ref": "#/definitions/citrix_resource_location_spec"
                }
            }, 
            "title": "Citrix Connector details."
        }, 
        "account": {
            "description": "An intentful representation of a account spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "account Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for account.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/account_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "account Intent Spec with placement specified"
        }, 
        "vm_snapshot": {
            "description": "The input object that defines a VM snapshot", 
            "type": "object", 
            "properties": {
                "snapshot_type": {
                    "x-ntnx-enum": [
                        "CRASH_CONSISTENT", 
                        "APPLICATION_CONSISTENT"
                    ], 
                    "type": "string", 
                    "description": "Crash consistent or Application Consistent snapshot"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "entity_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "UUID of the base entity for which snapshot need to be taken\n", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Snapshot Resources"
                }, 
                "expiration_time_msecs": {
                    "type": "integer", 
                    "description": "The time when this snapshot expires and will be garbage collected.\nIf not set, then the snapshot never expires.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the snapshot", 
                    "maxLength": 64
                }
            }, 
            "title": "VM snapshot input definitions"
        }, 
        "remote_connection_info": {
            "description": "Connection information", 
            "type": "object", 
            "properties": {
                "public_key": {
                    "type": "string", 
                    "description": "public key"
                }, 
                "cluster_fqdn": {
                    "type": "string", 
                    "description": "Cluster Fully Qualified Domain Name", 
                    "maxLength": 255
                }, 
                "peer_remote_connection_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Connection uuid for remote Peer", 
                    "format": "UUID"
                }, 
                "additional_capabilities": {
                    "items": {
                        "x-ntnx-enum": [
                            "SEED_REMOTE_AZ", 
                            "IGNORE_MISSING_REMOTE_PORT"
                        ], 
                        "type": "string", 
                        "description": "Additional capabilities to enable. Set by Initiator."
                    }, 
                    "type": "array"
                }, 
                "node_address_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array"
                }, 
                "token": {
                    "$ref": "#/definitions/remote_connection_token"
                }, 
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of cluster", 
                    "format": "UUID"
                }, 
                "cluster_function": {
                    "x-ntnx-enum": [
                        "ACCESS_GRANT_SYSTEM", 
                        "AOS", 
                        "JUMP_BOX", 
                        "PRISM_CENTRAL", 
                        "XI_PORTAL"
                    ], 
                    "type": "string", 
                    "description": "cluster function string"
                }
            }, 
            "title": "Connection info"
        }, 
        "mh_vm": {
            "description": "An intentful representation of a mh_vm spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/mh_vm_resources"
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "mh_vm Intent Spec with placement specified"
        }, 
        "task_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "x-ntnx-enum": [
                        "task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for task list output"
        }, 
        "account_resources_def_status": {
            "description": "Account resources", 
            "required": [
                "type", 
                "data"
            ], 
            "type": "object", 
            "properties": {
                "data": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Account data"
                }, 
                "type": {
                    "type": "string"
                }
            }, 
            "title": "Account resources"
        }, 
        "changed_regions_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for changed_regions list"
        }, 
        "tenant_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "x-ntnx-enum": [
                        "tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for tenant list"
        }, 
        "app_profile_input_upload": {
            "description": "App profile resources", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "App profile resource"
        }, 
        "image_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "rackable_unit_reference": {
            "description": "The reference to a rackable_unit", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a rackable_unit"
        }, 
        "ssl_key_type": {
            "x-ntnx-enum": [
                "RSA_2048", 
                "ECDSA_256", 
                "ECDSA_384", 
                "ECDSA_521", 
                "JKS", 
                "PKCS12", 
                "RSA_PUBLIC", 
                "KRB_KEYTAB", 
                "NONE"
            ], 
            "type": "string", 
            "description": "SSL key type. Key types with RSA_2048, ECDSA_256, ECDSA_384 and ECDSA_521\nare supported for key generation and importing.\n", 
            "title": "SSL key type"
        }, 
        "docker_registry_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for docker_registry list"
        }, 
        "environment_def_status": {
            "description": "An intentful representation of a environment status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "environment Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the environment."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the environment, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/environment_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for environment."
                }
            }, 
            "title": "environment Intent Status with placement specified"
        }, 
        "ngt_metadata": {
            "description": "The ngt kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ngt uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ngt name", 
                    "maxLength": 80
                }
            }, 
            "title": "ngt metadata"
        }, 
        "changed_regions_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for changed_regions list output"
        }, 
        "procedural_error_response": {
            "description": "Response for invoking a procedural call.\n", 
            "type": "object", 
            "properties": {
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }
            }, 
            "title": "Procedural API error response"
        }, 
        "blueprint_reference": {
            "description": "The reference to a blueprint", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a blueprint"
        }, 
        "attribute": {
            "description": "The attributes for the directory service.", 
            "type": "object", 
            "properties": {
                "value_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Value of the attribute."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the attribute."
                }
            }, 
            "title": "Directory service search attributes response"
        }, 
        "serial_port": {
            "description": "Indicates the configuration of serial ports of the VM.\n", 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the serial port."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Indicates whether the serial port connection is connected or not.\n"
                }
            }, 
            "title": "VM serial port connection."
        }, 
        "remote_connection_def_status": {
            "description": "Remote connection status definition", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the remote connection entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Remote connection name"
                }, 
                "resources": {
                    "$ref": "#/definitions/remote_connection_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Remote connection description"
                }
            }, 
            "title": "Remote connection status definition"
        }, 
        "vm_nic_metadata": {
            "description": "The vm_nic kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_nic was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_nic uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_nic was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_nic. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_nic. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_nic name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_nic metadata"
        }, 
        "upload_parameter": {
            "description": "NCC upload params.", 
            "required": [
                "case_number"
            ], 
            "type": "object", 
            "properties": {
                "upload_protocol": {
                    "x-ntnx-enum": [
                        "SFTP", 
                        "FTP"
                    ], 
                    "type": "string", 
                    "description": "NCC upload protocol used when uploading."
                }, 
                "case_number": {
                    "type": "integer", 
                    "description": "Nutanix support case number.", 
                    "format": "int64"
                }
            }, 
            "title": "NCC upload params"
        }, 
        "rackable_unit_intent_response": {
            "description": "Response object for intentful operations on a rackable_unit", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rackable_unit_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Response"
        }, 
        "project_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "x-ntnx-enum": [
                        "project"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for project list"
        }, 
        "remote_syslog_module_resources": {
            "description": "Remote Syslog module API resources definition", 
            "type": "object", 
            "properties": {
                "module_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_module"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Remote Syslog module API resources"
        }, 
        "environment_list_intent_response": {
            "description": "Response object for intentful operation of environments", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/environment_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "citrix_resource_location": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name."
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "permission": {
            "description": "Permission Input Definition. The permission consists of a name and defines the following what-operation-can-be-performed-on-which-fields-a-given-kind. The fields are defined in a list with type - allowed and disallowed.\n", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Permission name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/permission_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the permission.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Permission"
        }, 
        "external_repository_intent_response": {
            "description": "Response object for intentful operations on a external_repository", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/external_repository_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/external_repository"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/external_repository_metadata"
                }
            }, 
            "title": "external_repository Intent Response"
        }, 
        "contact_information": {
            "description": "Contact information object.", 
            "type": "object", 
            "properties": {
                "phone_number": {
                    "type": "string", 
                    "description": "Phone Number of the contact."
                }, 
                "email_address": {
                    "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", 
                    "type": "string", 
                    "description": "Email address of the contact."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the contact."
                }
            }, 
            "title": "Contact Information object."
        }, 
        "user_group_def_status": {
            "description": "User group status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/user_group_output_resource"
                }
            }, 
            "title": "user group status definition."
        }, 
        "subnet_metadata": {
            "description": "The subnet kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when subnet was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "subnet uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when subnet was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the subnet. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the subnet. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "subnet name", 
                    "maxLength": 80
                }
            }, 
            "title": "subnet metadata"
        }, 
        "project_list_intent_response": {
            "description": "Response object for intentful operation of projects", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/project_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "provider_oauth_token": {
            "description": "Oauth token from Oauth2 provider", 
            "required": [
                "access_token", 
                "token_type", 
                "expires_in", 
                "refresh_token", 
                "scope"
            ], 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "access_token to be used for accessing gateway"
                }, 
                "token_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"bearer\"."
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "Refresh_token which can used to get new token"
                }, 
                "scope": {
                    "type": "string", 
                    "description": "Scope string with individual scopes separated by space"
                }
            }, 
            "title": "Oauth token from Oauth2 provider"
        }, 
        "resource_domain_resources_status": {
            "description": "The status for a resource domain (limits and values)", 
            "required": [
                "resources"
            ], 
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/resource_utilization_status"
                    }, 
                    "type": "array", 
                    "description": "The utilization/limit for resource types"
                }
            }, 
            "title": "Resource Domain Status"
        }, 
        "entity_filter_expression": {
            "description": "Entity Filter Expression is a combination of LHS-Operator-RHS. This filter expression helps express the Filter on actual entities. Example1 - To express All VMs\n  left_hand_side = VM\n  operator = IN\n  right_hand_side = ALL\nExample2 - To express Not VM1 or VM2\n  left_hand_side =  VM\n  operator = NOT_IN\n  right_hand_side = [\"VM1\", \"VM2\"]\n", 
            "required": [
                "left_hand_side", 
                "operator", 
                "right_hand_side"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "x-ntnx-enum": [
                        "IN", 
                        "NOT_IN"
                    ], 
                    "type": "string", 
                    "description": "The operator in the filter expression."
                }, 
                "right_hand_side": {
                    "description": "The Right hand side(RHS) of a filter expression.", 
                    "$ref": "#/definitions/right_hand_side"
                }, 
                "left_hand_side": {
                    "description": "The LHS of the filter expression - the entity type.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "entity_type"
                            ]
                        }
                    ], 
                    "properties": {
                        "entity_type": {
                            "type": "string", 
                            "description": "The representation of the possible value of an LHS, in this case it is an entity type.A certain entity type e.g. VM Note. To express all entity types, use ALL\n", 
                            "maxLength": 64
                        }
                    }
                }
            }, 
            "title": "Entity Filter Expression."
        }, 
        "volume_group_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for volume_group list output"
        }, 
        "vm_recovery_point_restore_input": {
            "description": "Input object for the restore API of the recovery points. User can provide optional UUID of the vm that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "vm_override_spec": {
                    "description": "Properties of the vm that can be overridden on restore.\n", 
                    "$ref": "#/definitions/vm_restore_override_spec"
                }, 
                "metadata": {
                    "type": "object", 
                    "properties": {
                        "categories_mapping": {
                            "additionalProperties": {
                                "items": {
                                    "type": "string"
                                }, 
                                "type": "array"
                            }, 
                            "type": "object", 
                            "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key.\n"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Metadata of the restored vm."
                }
            }, 
            "title": "Restore API input"
        }, 
        "changed_regions_metadata": {
            "description": "The changed_regions kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when changed_regions was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "changed_regions uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when changed_regions was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the changed_regions. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the changed_regions. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "changed_regions name", 
                    "maxLength": 80
                }
            }, 
            "title": "changed_regions metadata"
        }, 
        "ipfix_exporter_list_intent_response": {
            "description": "Response object for intentful operation of ipfix_exporters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ipfix_exporter_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "webhook": {
            "description": "Webhook input definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Webhook name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/webhook_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the webhook.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Webhook input definition"
        }, 
        "certification_signing_info": {
            "description": "Customer information used in Certificate Signing Request for\ncreating digital certificates.\n", 
            "type": "object", 
            "properties": {
                "city": {
                    "type": "string", 
                    "description": "The Town or City where customer's business is located."
                }, 
                "common_name_suffix": {
                    "type": "string", 
                    "description": "Common name is by default <node_uuid>.nutanix.com, but if a customer\nwants something instead of nutanix.com they can specify it here.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The Province, Region, County or State where customer business is\nis located.\n"
                }, 
                "country_code": {
                    "type": "string", 
                    "description": "Two-letter ISO code for Country where customer's organization is\nlocated.\n"
                }, 
                "common_name": {
                    "type": "string", 
                    "description": "Common name of the organization or host server"
                }, 
                "organization": {
                    "type": "string", 
                    "description": "Name of the customer business."
                }, 
                "email_address": {
                    "type": "string", 
                    "description": "Email address of the certificate administrator."
                }
            }, 
            "title": "Customer information in Certificate Signing Request"
        }, 
        "domain_info": {
            "description": "Domain info for citrix connection.", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "Domain username."
                }, 
                "password": {
                    "type": "string", 
                    "description": "Domain password."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Machine name."
                }, 
                "gateway": {
                    "type": "string", 
                    "description": "DNS gateway."
                }
            }, 
            "title": "Domain info for citrix connection"
        }, 
        "changed_regions_reference": {
            "description": "The reference to a changed_regions", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a changed_regions"
        }, 
        "citrix_adapter_metadata": {
            "description": "The citrix_adapter kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when citrix_adapter was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "citrix_adapter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "citrix_adapter"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "citrix_adapter uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when citrix_adapter was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the citrix_adapter. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the citrix_adapter. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "citrix_adapter name", 
                    "maxLength": 80
                }
            }, 
            "title": "citrix_adapter metadata"
        }, 
        "brownfield_instance_input": {
            "description": "Brownfield instance list", 
            "required": [
                "instance_id"
            ], 
            "type": "object", 
            "properties": {
                "instance_id": {
                    "type": "string", 
                    "description": "Id of the vm", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "Name of the vm", 
                    "maxLength": 64
                }, 
                "platform_data": {
                    "additionalProperties": {
                        "type": "string"
                    }
                }, 
                "address": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Address of the vm"
                }
            }, 
            "title": "brownfield instance list"
        }, 
        "alert_state": {
            "description": "The status data construct for acknowledgement and resolution.", 
            "type": "object", 
            "properties": {
                "is_true": {
                    "type": "boolean", 
                    "description": "A boolean status for acknowledgement or resolution"
                }, 
                "is_auto_resolved": {
                    "type": "boolean", 
                    "description": "It is automatically resolved or user manually resolved.  Currently,\nit is limtied to the resolution only.\n"
                }, 
                "user": {
                    "type": "string", 
                    "description": "Name of the user who change this alert status."
                }, 
                "time": {
                    "type": "string", 
                    "description": "The time the alert status was changed.", 
                    "format": "date-time"
                }
            }, 
            "title": "Information about an alert state."
        }, 
        "file_item_resources": {
            "description": "File item spec object", 
            "type": "object", 
            "properties": {
                "checksum": {
                    "description": "Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "URI that points at the file to create the file_item from."
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk or image. The expected kind for VMs is vm_disk and for Images is image. In case of VM Disk the uuid should be the disk device uuid, where the disk device is from disk_list from VM status. In case of Images the uuid should be the uuid of the image.", 
                    "$ref": "#/definitions/reference"
                }, 
                "source_auth": {
                    "description": "Authentication object needed to fetch the source.", 
                    "$ref": "#/definitions/source_auth"
                }
            }, 
            "title": "File item spec object"
        }, 
        "role_metadata": {
            "description": "The role kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when role was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "role uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when role was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the role. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the role. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "role name", 
                    "maxLength": 80
                }
            }, 
            "title": "role metadata"
        }, 
        "ngt_list_response": {
            "description": "NGT list response.", 
            "type": "object", 
            "properties": {
                "entities_list": {
                    "items": {
                        "$ref": "#/definitions/ngt_response"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_list_metadata_output"
                }
            }, 
            "title": "NGT list response"
        }, 
        "rackable_unit_intent_resource": {
            "description": "Response object for intentful operations on a rackable_unit", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rackable_unit_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Response"
        }, 
        "docker_registry_intent_resource": {
            "description": "Response object for intentful operations on a docker_registry", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/docker_registry_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Response"
        }, 
        "blueprint_custom_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "ncc_checks_support_case_upload": {
            "description": "Input for execution of NCC checks.", 
            "type": "object", 
            "properties": {
                "should_send_email": {
                    "type": "boolean", 
                    "description": "Flag specifying whether an email is to be sent."
                }, 
                "ncc_check_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of ncc checks to run."
                }
            }, 
            "title": "NCC checks object."
        }, 
        "cluster_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "x-ntnx-enum": [
                        "cluster"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cluster list"
        }, 
        "rack_intent_response": {
            "description": "Response object for intentful operations on a rack", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rack_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Response"
        }, 
        "customization_spec_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ip_config": {
            "description": "IP config.", 
            "type": "object", 
            "properties": {
                "default_gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Default gateway IP address."
                }, 
                "dhcp_server_address": {
                    "$ref": "#/definitions/address"
                }, 
                "pool_list": {
                    "items": {
                        "$ref": "#/definitions/ip_pool"
                    }, 
                    "type": "array"
                }, 
                "prefix_length": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "subnet_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet IP address."
                }, 
                "dhcp_options": {
                    "$ref": "#/definitions/dhcp_options"
                }
            }, 
            "title": "IP config"
        }, 
        "oauth_client_input": {
            "description": "Oauth client information", 
            "required": [
                "client_name", 
                "client_description", 
                "redirect_uris", 
                "default_scopes"
            ], 
            "type": "object", 
            "properties": {
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "redirect_uris": {
                    "items": {
                        "type": "string", 
                        "description": "entry for redirect URIs"
                    }, 
                    "type": "array"
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "default_scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth client"
        }, 
        "subnet_reference": {
            "description": "The reference to a subnet", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a subnet"
        }, 
        "migrate_disk_container_reference": {
            "description": "Specifies the disk and the target container", 
            "required": [
                "disk_uuid_list", 
                "target_container_reference"
            ], 
            "type": "object", 
            "properties": {
                "disk_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The VM disks to be migrated"
                }, 
                "target_container_reference": {
                    "description": "Reference to the target container for all disks in disk uuid.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Disk and Target Container"
        }, 
        "blueprint_deployment_response": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment Definition for Application."
        }, 
        "ssh_user_intent_response": {
            "description": "Response object for intentful operations on a ssh_user", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ssh_user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Response"
        }, 
        "cmsp_config_enablement": {
            "description": "MSP configuration for enabling CMSP on PC.", 
            "required": [
                "config", 
                "operation"
            ], 
            "type": "object", 
            "properties": {
                "operation": {
                    "x-ntnx-enum": [
                        "kValidate", 
                        "kEnable"
                    ], 
                    "type": "string", 
                    "description": "The type of operation is kValidate or kEnable.\n"
                }, 
                "config": {
                    "$ref": "#/definitions/cmsp_config"
                }
            }, 
            "title": "CMSP configuration for enablement."
        }, 
        "webhook_intent_response": {
            "description": "Response object for intentful operations on a webhook", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/webhook_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/webhook"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/webhook_metadata"
                }
            }, 
            "title": "webhook Intent Response"
        }, 
        "image_architecture": {
            "x-ntnx-enum": [
                "X86_64", 
                "PPC64", 
                "PPC64LE"
            ], 
            "type": "string", 
            "description": "The supported CPU architecture for a disk image.", 
            "title": "Image architecture"
        }, 
        "severity": {
            "x-ntnx-enum": [
                "critical", 
                "warning", 
                "info"
            ], 
            "type": "string", 
            "description": "Alert severity", 
            "title": "Alert severity"
        }, 
        "oauth_metadata": {
            "description": "The oauth kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "oauth uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "oauth name", 
                    "maxLength": 80
                }
            }, 
            "title": "oauth metadata"
        }, 
        "docker_registry_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for docker_registry list output"
        }, 
        "image_intent_response": {
            "description": "Response object for intentful operations on a image", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Response"
        }, 
        "rack_resources": {
            "description": "Rack entity definition", 
            "type": "object", 
            "properties": {
                "cell_reference": {
                    "$ref": "#/definitions/cell_reference"
                }, 
                "location": {
                    "type": "string", 
                    "description": "The rack location"
                }
            }, 
            "title": "Rack Entity"
        }, 
        "entity": {
            "description": "The response returned for directory service search operation.", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "User or group in the directory service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the entity in canonical format.", 
                    "maxLength": 64
                }, 
                "attribute_list": {
                    "items": {
                        "$ref": "#/definitions/attribute"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Directory service search response"
        }, 
        "category_key_list_response": {
            "description": "Category key list response.", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/category_key_status"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_list_metadata"
                }
            }, 
            "title": "Category key list response."
        }, 
        "app_runbook_input_upload": {
            "description": "Runbook definition for Application", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference_upload"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "api_request": {
            "description": "API request", 
            "required": [
                "path_and_params", 
                "operation"
            ], 
            "type": "object", 
            "properties": {
                "body": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object", 
                    "description": "The API request specification."
                }, 
                "operation": {
                    "x-ntnx-enum": [
                        "DELETE", 
                        "GET", 
                        "HEAD", 
                        "PATCH", 
                        "POST", 
                        "PUT"
                    ], 
                    "type": "string", 
                    "description": "The REST method to use."
                }, 
                "path_and_params": {
                    "type": "string", 
                    "description": "The part of the API request that contains information\nsuch as the path and query.\n"
                }
            }, 
            "title": "API request"
        }, 
        "subnet_intent_input": {
            "description": "An intentful representation of a subnet", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Entity"
        }, 
        "volume_group_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for volume_group list"
        }, 
        "groups_get_entities_request": {
            "description": "Get Entities Request.", 
            "required": [
                "entity_type"
            ], 
            "type": "object", 
            "properties": {
                "number_of_intervals_for_latest_data": {
                    "type": "integer", 
                    "description": "When retrieving latest values, how far back to look as a multiple of the downsampling interval for the metric.\n", 
                    "format": "int32"
                }, 
                "group_sort_attribute": {
                    "type": "string", 
                    "description": "The name of the attribute that will be used to sort groups.\n"
                }, 
                "number_of_buckets": {
                    "type": "integer", 
                    "description": "For grouping, how many groups to return.", 
                    "format": "int32"
                }, 
                "entity_ids": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A set of entities that the request will be scoped to."
                }, 
                "group_member_attributes": {
                    "items": {
                        "$ref": "#/definitions/groups_requested_attribute"
                    }, 
                    "type": "array"
                }, 
                "group_member_sort_attribute": {
                    "type": "string", 
                    "description": "The name of the attribute that will be used to sort group members.\n"
                }, 
                "bucket_boundary": {
                    "type": "integer", 
                    "description": "For grouping, the boundary to snap to when grouping.", 
                    "format": "int32"
                }, 
                "group_offset": {
                    "type": "integer", 
                    "description": "The offset into the total set of groups to return.", 
                    "format": "int64"
                }, 
                "downsampling_interval": {
                    "type": "integer", 
                    "description": "Downsampling interval to apply to query if override is desired.\n", 
                    "format": "int32"
                }, 
                "interval_start_ms": {
                    "default": 0, 
                    "type": "integer", 
                    "description": "For a time-series query, the start of the interval since the epoch in ms. Default is latest value only.\n", 
                    "format": "int64"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "The entity type that will be requested."
                }, 
                "group_member_offset": {
                    "type": "integer", 
                    "description": "The offset into the total member set to return per group.", 
                    "format": "int64"
                }, 
                "grouping_attribute": {
                    "type": "string", 
                    "description": "Attribute that will be used to perform a group-by if needed.\n"
                }, 
                "group_member_sort_downsampling_function": {
                    "$ref": "#/definitions/groups_sort_downsampling_function"
                }, 
                "group_sort_order": {
                    "$ref": "#/definitions/groups_sort_order"
                }, 
                "group_sort_downsample_function": {
                    "$ref": "#/definitions/groups_sort_downsampling_function"
                }, 
                "filter_criteria": {
                    "type": "string", 
                    "description": "FIQL filter criteria that will be used to filter the returned data.\n"
                }, 
                "large_bucket_boundary": {
                    "type": "integer", 
                    "description": "Same as bucket_boundary but supports larger range of values.", 
                    "format": "int64"
                }, 
                "availability_zone_scope": {
                    "default": "LOCAL", 
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "GLOBAL"
                    ], 
                    "type": "string", 
                    "description": "The scope of availability zones from which to fetch the  data.\n"
                }, 
                "group_count": {
                    "type": "integer", 
                    "description": "The maximum number of groups to return in the result.", 
                    "format": "int64"
                }, 
                "group_attributes": {
                    "items": {
                        "$ref": "#/definitions/groups_requested_attribute"
                    }, 
                    "type": "array"
                }, 
                "interval_end_ms": {
                    "default": 0, 
                    "type": "integer", 
                    "description": "For a time-series query, the end of the interval since the epoch in ms. Default is latest value only.\n", 
                    "format": "int64"
                }, 
                "grouping_attribute_type": {
                    "$ref": "#/definitions/groups_attribute_type"
                }, 
                "group_member_count": {
                    "type": "integer", 
                    "description": "The maximum number of members to return per group.", 
                    "format": "int64"
                }, 
                "group_member_sort_order": {
                    "$ref": "#/definitions/groups_sort_order"
                }, 
                "query_name": {
                    "type": "string", 
                    "description": "A custom name to use for tagging the query when debugging."
                }
            }, 
            "title": "Get Entities Request"
        }, 
        "ssh_user_metadata": {
            "description": "The ssh_user kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ssh_user was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ssh_user uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ssh_user was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ssh_user. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ssh_user. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ssh_user name", 
                    "maxLength": 80
                }
            }, 
            "title": "ssh_user metadata"
        }, 
        "role_list_intent_response": {
            "description": "Response object for intentful operation of roles", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/role_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "mh_vm_intent_resource": {
            "description": "Response object for intentful operations on a mh_vm", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/mh_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Response"
        }, 
        "oauth_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "citrix_adapter_reference": {
            "description": "The reference to a citrix_adapter", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "citrix_adapter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "citrix_adapter"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a citrix_adapter"
        }, 
        "volume_group_list_intent_response": {
            "description": "Response object for intentful operation of volume_groups", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/volume_group_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "webhook_intent_resource": {
            "description": "Response object for intentful operations on a webhook", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/webhook_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/webhook"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/webhook_metadata"
                }
            }, 
            "title": "webhook Intent Response"
        }, 
        "batch_request": {
            "description": "Request for batch operations.", 
            "required": [
                "api_request_list"
            ], 
            "type": "object", 
            "properties": {
                "execution_order": {
                    "default": "SEQUENTIAL", 
                    "x-ntnx-enum": [
                        "SEQUENTIAL", 
                        "NON_SEQUENTIAL"
                    ], 
                    "type": "string", 
                    "description": "The order of execution of the APIs in the batch. Can be either\nSequential (default value) or Parallel.\n"
                }, 
                "action_on_failure": {
                    "default": "CONTINUE", 
                    "x-ntnx-enum": [
                        "CONTINUE", 
                        "ABORT"
                    ], 
                    "type": "string", 
                    "description": "If the specified parameter is CONTINUE, the remaining APIs in the batch\ncontinue to be executed.\n"
                }, 
                "api_request_list": {
                    "items": {
                        "$ref": "#/definitions/api_request"
                    }, 
                    "type": "array", 
                    "description": "A list of API requests in the batch."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Batch request"
        }, 
        "disk_metadata": {
            "description": "The disk kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when disk was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "disk uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when disk was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the disk. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the disk. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "disk name", 
                    "maxLength": 80
                }
            }, 
            "title": "disk metadata"
        }, 
        "syslog_server_resources": {
            "description": "Remote Syslog server API resources definition", 
            "type": "object", 
            "properties": {
                "module_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_module"
                    }, 
                    "type": "array"
                }, 
                "ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the Remote Syslog server"
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port of the Remote Syslog server", 
                    "format": "int32"
                }, 
                "server_name": {
                    "type": "string", 
                    "description": "Name of the Remote Syslog server"
                }, 
                "network_protocol": {
                    "x-ntnx-enum": [
                        "UDP", 
                        "TCP", 
                        "RELP"
                    ], 
                    "type": "string", 
                    "description": "Network Protocol to be used"
                }
            }, 
            "title": "Remote Syslog server API resources"
        }, 
        "disk_reference": {
            "description": "The reference to a disk", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a disk"
        }, 
        "port_range": {
            "description": "Range of TCP/UDP ports.", 
            "type": "object", 
            "properties": {
                "end_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 65535, 
                    "format": "int32"
                }, 
                "start_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 65535, 
                    "format": "int32"
                }
            }, 
            "title": "TCP/UDP ports."
        }, 
        "vm_snapshot_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_snapshot", 
                    "x-ntnx-enum": [
                        "vm_snapshot"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_snapshot list"
        }, 
        "citrix_adapter_intent_resource": {
            "description": "Response object for intentful operations on a citrix_adapter", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/citrix_adapter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/citrix_adapter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/citrix_adapter_metadata"
                }
            }, 
            "title": "citrix_adapter Intent Response"
        }, 
        "app_published_service_reference_upload": {
            "description": "The reference to a app_published_service", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_published_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_published_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_published_service"
        }, 
        "app_substrate_reference_upload": {
            "description": "The reference to a app_substrate", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_substrate", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_substrate"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_substrate"
        }, 
        "app_credential_input_upload": {
            "description": "Credential for application", 
            "required": [
                "name", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Credential for application"
        }, 
        "account_intent_response": {
            "description": "Response object for intentful operations on a account", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/account_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Response"
        }, 
        "category_metadata": {
            "description": "The category kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "category uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "category name", 
                    "maxLength": 80
                }
            }, 
            "title": "category metadata"
        }, 
        "alert_resources": {
            "description": "Alert entity definition.", 
            "required": [
                "type", 
                "title", 
                "severity"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "type": "string", 
                    "description": "The last time this alert was updated.  System sets this.", 
                    "format": "date-time"
                }, 
                "source_entity": {
                    "type": "object", 
                    "description": "The entity that causes the alert.", 
                    "properties": {
                        "cluster_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "The UUID for the cluster that contained the source entity\nat the alert creation time.\n", 
                            "format": "UUID"
                        }, 
                        "entity": {
                            "$ref": "#/definitions/entity_info"
                        }
                    }
                }, 
                "rca_metadata_list": {
                    "items": {
                        "$ref": "#/definitions/rca_metadata"
                    }, 
                    "type": "array", 
                    "description": "List of cause and resolution object from alert RCA metadata."
                }, 
                "affected_entity_list": {
                    "items": {
                        "$ref": "#/definitions/entity_info"
                    }, 
                    "type": "array", 
                    "description": "A list of entities causing and/or related to this alert.\n"
                }, 
                "severity": {
                    "description": "Alert instance severity.", 
                    "$ref": "#/definitions/severity"
                }, 
                "title": {
                    "type": "string", 
                    "description": "Alert title"
                }, 
                "default_message": {
                    "type": "string", 
                    "description": "Alert message."
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "The time that this alert was created.", 
                    "format": "date-time"
                }, 
                "resolution_status": {
                    "description": "This indicates the resolution status, time, and who did it.", 
                    "$ref": "#/definitions/alert_state"
                }, 
                "indicator_list": {
                    "items": {
                        "$ref": "#/definitions/indicator"
                    }, 
                    "type": "array", 
                    "description": "The symptoms that caused this alert"
                }, 
                "acknowledged_status": {
                    "description": "This indicates the acknowlegement status, time, and who did it.\n", 
                    "$ref": "#/definitions/alert_state"
                }, 
                "is_user_defined": {
                    "type": "boolean", 
                    "description": "The alert is raised by user defined policy or not."
                }, 
                "severity_trail_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "severity_change_time": {
                                "type": "string", 
                                "format": "date-time"
                            }, 
                            "severity": {
                                "$ref": "#/definitions/severity"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The field has a list of information alert severity change history. If\nthe alert is duplicated without severity change, then, that instance\nwill not be saved here.\n"
                }, 
                "classification_list": {
                    "items": {
                        "type": "string", 
                        "maxLength": 64
                    }, 
                    "type": "array", 
                    "description": "Component classification"
                }, 
                "possible_cause_list": {
                    "items": {
                        "$ref": "#/definitions/cause_analysis"
                    }, 
                    "type": "array", 
                    "description": "An ordered list of the possible causes and resolutions for the alert.\n"
                }, 
                "impact_type_list": {
                    "items": {
                        "type": "string", 
                        "maxLength": 64
                    }, 
                    "type": "array", 
                    "description": "The area this alert could impact.\n"
                }, 
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_value"
                    }, 
                    "type": "object", 
                    "description": "Alert notification type specific parameters."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A preconfigured, or dynamically created alert type or alert type UUID.\nFor example, A1128 for the storage pool space usage exceeded alerts,\nor, a real UUID for user defined alert policy.\n"
                }, 
                "impact_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "The impact of the alert."
                }, 
                "latest_occurrence_time": {
                    "type": "string", 
                    "description": "Alert instances could be dedupped by the system.  However, the last\ntime this similar alert was received is still be updated in this\nfield.\n", 
                    "format": "date-time"
                }
            }, 
            "title": "Alert entity"
        }, 
        "placement_entity_filter": {
            "description": "Image placement policy filter. Specify the filter match type and categories\n", 
            "required": [
                "params", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "params": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "A list of category key and list of values."
                }, 
                "type": {
                    "default": "CATEGORIES_MATCH_ANY", 
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of the filter being used."
                }
            }, 
            "title": "Image placement policy entity filter"
        }, 
        "virtual_network_route_table_reference": {
            "description": "The reference to a virtual_network_route_table", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network_route_table", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "virtual_network_route_table"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a virtual_network_route_table"
        }, 
        "external_repository_resources": {
            "description": "Attributes that define an external repository.", 
            "type": "object", 
            "properties": {
                "nfs_configuration": {
                    "description": "Configuration for accessing the external repository using NFS.\n", 
                    "$ref": "#/definitions/nfs_configuration"
                }
            }, 
            "title": "External repository entity resources definition"
        }, 
        "access_control_policy_intent_resource": {
            "description": "Response object for intentful operations on a access_control_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/access_control_policy_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_metadata"
                }
            }, 
            "title": "access_control_policy Intent Response"
        }, 
        "cluster_intent_resource": {
            "description": "Response object for intentful operations on a cluster", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cluster_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Response"
        }, 
        "webhook_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "webhook", 
                    "x-ntnx-enum": [
                        "webhook"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for webhook list output"
        }, 
        "app_service_reference_upload": {
            "description": "The reference to a app_service", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_service"
        }, 
        "remote_syslog_module_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_syslog_module list output"
        }, 
        "support_case_upload_reference": {
            "description": "The reference to a support_case_upload", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a support_case_upload"
        }, 
        "vm_snapshot_intent_response": {
            "description": "Response object for intentful operations on a vm_snapshot", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_snapshot_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_snapshot_metadata"
                }
            }, 
            "title": "vm_snapshot Intent Response"
        }, 
        "param_value": {
            "properties": {
                "int_value": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "double_value": {
                    "type": "number", 
                    "format": "double"
                }, 
                "bool_value": {
                    "type": "boolean"
                }, 
                "string_value": {
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "bool_value"
                    ]
                }, 
                {
                    "required": [
                        "int_value"
                    ]
                }, 
                {
                    "required": [
                        "double_value"
                    ]
                }, 
                {
                    "required": [
                        "string_value"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Scalar value object that handles different types", 
            "title": "Value object"
        }, 
        "ngt_reference": {
            "description": "The reference to a ngt", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ngt"
        }, 
        "rack_reference": {
            "description": "The reference to a rack", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a rack"
        }, 
        "network_function_chain_intent_response": {
            "description": "Response object for intentful operations on a network_function_chain", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_function_chain_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Response"
        }, 
        "oauth_client_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for oauth_client list"
        }, 
        "cause_analysis": {
            "description": "The root cause analysis and possible resolutions.", 
            "type": "object", 
            "properties": {
                "resolution_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "cause_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Alert cause analysis"
        }, 
        "webhook_intent_input": {
            "description": "An intentful representation of a webhook", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/webhook"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/webhook_metadata"
                }
            }, 
            "title": "webhook Intent Entity"
        }, 
        "alert_notification_input": {
            "description": "The information required for creating an alert.", 
            "required": [
                "notification_type", 
                "severity"
            ], 
            "type": "object", 
            "properties": {
                "notification_type": {
                    "type": "string", 
                    "description": "The notification definition for this type of alerts."
                }, 
                "source_entity": {
                    "description": "The entity which causes the alert.", 
                    "$ref": "#/definitions/reference"
                }, 
                "severity": {
                    "description": "Alert instance severity.", 
                    "$ref": "#/definitions/severity"
                }, 
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_value"
                    }, 
                    "type": "object", 
                    "description": "Alert notification type specific parameters."
                }
            }, 
            "title": "Alert creation informtion"
        }, 
        "rack_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "x-ntnx-enum": [
                        "rack"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for rack list"
        }, 
        "storage_qos_policy_config_input": {
            "description": "QoS parameters to be enforced", 
            "required": [
                "throttled_iops"
            ], 
            "type": "object", 
            "properties": {
                "throttled_iops": {
                    "default": -1, 
                    "type": "integer", 
                    "description": "Throttled iops for the entities being governed.\nThe block size for the IO is 32kB.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Storage Qos Configuration Input"
        }, 
        "capability": {
            "description": "Capability object containing information about each capability", 
            "type": "object", 
            "properties": {
                "capability_description": {
                    "type": "string", 
                    "description": "Optional value describing the capability"
                }, 
                "self_capability": {
                    "description": "This describes the capabilities of the endpoint where the request is hit.\nFor example, for a PC endpoint and a PC specific capability, this will contain the specific\ncapability details for the PC.\n", 
                    "$ref": "#/definitions/capability_details"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of capability"
                }, 
                "capable_members": {
                    "items": {
                        "$ref": "#/definitions/capability_details"
                    }, 
                    "type": "array", 
                    "description": "List of members having the capability"
                }
            }, 
            "title": "Capability info object"
        }, 
        "network_function_metadata": {
            "description": "The network_function kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_function uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_function name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_function metadata"
        }, 
        "cloud_credentials_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cloud_credentials list"
        }, 
        "remote_syslog_server_intent_response": {
            "description": "Response object for intentful operations on a remote_syslog_server", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_server_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Response"
        }, 
        "app_profile_response_download": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "state", 
                "message_list", 
                "dependency_list"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response_download"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "App profile resources"
        }, 
        "vm_storage_config_status": {
            "description": "Current state of storage configuration parameters.", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters applied on the VM.", 
                    "$ref": "#/definitions/storage_qos_policy_config_output"
                }, 
                "flash_mode": {
                    "description": "Indicates whether Flash Mode is enabled or disabled on the VM.\nWhen enabled, virtual disks of VM are pinned to the hot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config output"
        }, 
        "user_group_list_intent_response": {
            "description": "Response object for intentful operation of user_groups", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/user_group_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "capability_value": {
            "properties": {
                "cap_string_value_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "unknown": {
                    "type": "boolean", 
                    "description": "True if the capability value could not be retrieved or inferred.\n"
                }, 
                "cap_double_value": {
                    "type": "number", 
                    "format": "float"
                }, 
                "cap_bool_value": {
                    "type": "boolean"
                }, 
                "cap_int_value": {
                    "type": "integer"
                }, 
                "cap_string_value": {
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "cap_bool_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_int_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_double_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_string_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_string_value_list"
                    ]
                }, 
                {
                    "required": [
                        "unknown"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Value of capability", 
            "title": "Capability value"
        }, 
        "vm_recovery_point_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_runbook_response": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "ssh_user": {
            "description": "SSH User Entity", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ssh_user_request_details"
                }
            }, 
            "title": "SSH User Entity"
        }, 
        "procedural_response": {
            "description": "Response for invoking a procedural call. Contains a task UUID.\n", 
            "required": [
                "task_uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Procedural API response"
        }, 
        "volume_group_snapshot_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group_snapshot", 
                    "x-ntnx-enum": [
                        "volume_group_snapshot"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for volume_group_snapshot list"
        }, 
        "network_function_chain_reference": {
            "description": "The reference to a network_function_chain", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_function_chain"
        }, 
        "app_task_reference_upload": {
            "description": "The reference to a app_task", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_task"
        }, 
        "blueprint_launch_response_status": {
            "description": "Status of the Blueprint launch.", 
            "type": "object", 
            "properties": {
                "request_id": {
                    "type": "string", 
                    "description": "Request id to track the launch process"
                }
            }, 
            "title": "Status of the Blueprint launch."
        }, 
        "vm_nic_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "host_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "x-ntnx-enum": [
                        "host"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for host list output"
        }, 
        "source_auth": {
            "description": "File item source authentication object.", 
            "type": "object", 
            "properties": {
                "aws_auth": {
                    "description": "Access credentials for Amazon AWS (access key and secret key).\n", 
                    "$ref": "#/definitions/aws_credentials"
                }, 
                "basic_auth": {
                    "description": "Basic authentication credentials used to access the source for the file item.", 
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "File item source authentication object."
        }, 
        "user_group_output_resource": {
            "description": "User Group Resource Definition.", 
            "required": [
                "display_name"
            ], 
            "type": "object", 
            "properties": {
                "projects_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "A list of projects the user group is part of."
                }, 
                "directory_service_user_group": {
                    "$ref": "#/definitions/directory_service_user_group_status"
                }, 
                "access_control_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of ACP references."
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The display name for the user group."
                }, 
                "user_group_type": {
                    "x-ntnx-enum": [
                        "DIRECTORY_SERVICE"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "user group resource definition."
        }, 
        "image_placement_policy_resources": {
            "description": "Describes the image placement policy spec resource object", 
            "required": [
                "image_entity_filter", 
                "cluster_entity_filter"
            ], 
            "type": "object", 
            "properties": {
                "cluster_entity_filter": {
                    "description": "Category list for filtering clsuters", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "image_entity_filter": {
                    "description": "Category list for filtering images", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "placement_type": {
                    "x-ntnx-enum": [
                        "AT_LEAST", 
                        "EXACTLY"
                    ], 
                    "type": "string", 
                    "description": "Describes the image placement semantic. AT_LEAST semantics defines that the image will be attempted to be placed in the set of clusters specified by the cluster category filter but at the same time Image will still be allowed to be copied to other cluster not specified as part of the cluster category filter (for example as a result of VM create workflow). In EXACTLY semantics copying image to any cluster not part of cluster category filter will not be allowed.\n"
                }
            }, 
            "title": "Image placement policy spec resources"
        }, 
        "citrix_vm_clones": {
            "description": "VM clones name/passoword.", 
            "type": "object", 
            "properties": {
                "password": {
                    "type": "string", 
                    "description": "Vm clone password."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Vm clone name."
                }
            }, 
            "title": "VM clones name/password"
        }, 
        "subnet": {
            "description": "An intentful representation of a subnet spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "subnet Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for subnet.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/subnet_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "subnet Intent Spec with placement specified"
        }, 
        "ngt_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "x-ntnx-enum": [
                        "ngt"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ngt list"
        }, 
        "app_task_response": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list."
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "cmsp_network_config": {
            "description": "CMSP Network Configuration for PC VM.", 
            "type": "object", 
            "properties": {
                "network_id": {
                    "type": "string", 
                    "description": "Network ID for CMSP. UUID for AHV or name for ESXi.\n"
                }, 
                "subnet_mask": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet mask IP address."
                }, 
                "default_gateway": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address."
                }
            }, 
            "title": "CMSP Network Configuration for PC VM."
        }, 
        "groups_sort_order": {
            "x-ntnx-enum": [
                "ASCENDING", 
                "DESCENDING"
            ], 
            "type": "string", 
            "description": "Sort order for entities and entity groups.", 
            "title": "Entities Request Sort Order"
        }, 
        "remote_connection_reference": {
            "description": "The reference to a remote_connection", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_connection"
        }, 
        "blueprint_metadata": {
            "description": "The blueprint kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blueprint was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blueprint was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blueprint. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blueprint. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "blueprint name", 
                    "maxLength": 80
                }
            }, 
            "title": "blueprint metadata"
        }, 
        "docker_registry_metadata": {
            "description": "The docker_registry kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when docker_registry was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "docker_registry uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when docker_registry was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the docker_registry. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the docker_registry. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "docker_registry name", 
                    "maxLength": 80
                }
            }, 
            "title": "docker_registry metadata"
        }, 
        "vm_recovery_point_reference": {
            "description": "The reference to a vm_recovery_point", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_recovery_point"
        }, 
        "app_credential_reference": {
            "description": "The reference to a app_credential", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_credential", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_credential"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_credential"
        }, 
        "environment_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "image_intent_input": {
            "description": "An intentful representation of a image", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Entity"
        }, 
        "migrate_disks_input": {
            "properties": {
                "disks_to_target_container_list": {
                    "items": {
                        "$ref": "#/definitions/migrate_disk_container_reference"
                    }, 
                    "type": "array", 
                    "description": "List of UUIDs of the disks that need to be migrated."
                }, 
                "target_container_reference": {
                    "description": "Reference to the target container to which all disks of the VM will be migrated to.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "disks_to_target_container_list"
                    ]
                }, 
                {
                    "required": [
                        "target_container_reference"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Specifies the disks for migration and the target container.", 
            "title": "Migrate Disks"
        }, 
        "alert_intent_resource": {
            "description": "Response object for intentful operations on a alert", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/alert_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Response"
        }, 
        "rack_config": {
            "description": "Map of rack's name to the hosts it contains. The rack may or may not exist in the cluster yet.\n", 
            "type": "object", 
            "properties": {
                "host_list": {
                    "items": {
                        "$ref": "#/definitions/host_reference"
                    }, 
                    "type": "array"
                }, 
                "rack_name": {
                    "type": "string", 
                    "maxLength": 64
                }
            }, 
            "title": "Rack Config"
        }, 
        "mh_vm_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for mh_vm list output"
        }, 
        "entity_info": {
            "description": "Entity information", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Entity type"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Entity name"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Entity UUID", 
                    "format": "UUID"
                }
            }, 
            "title": "Entity name/type/id"
        }, 
        "volume_disk_resource_output": {
            "description": "Volume disk configuration.", 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the volume disk in the group."
                }, 
                "storage_container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Storage container UUID on which the disk has been created.", 
                    "format": "UUID"
                }, 
                "disk_size_mib": {
                    "type": "integer", 
                    "description": "Size of the disk in MiB.", 
                    "format": "int64"
                }, 
                "disk_size_bytes": {
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Volume disk configuration"
        }, 
        "alert_list_intent_response": {
            "description": "Response object for intentful operation of alerts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/alert_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "disk_intent_resource": {
            "description": "Response object for intentful operations on a disk", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/disk_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Response"
        }, 
        "blueprint_intent_resource": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "app_service_response": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service for Application"
        }, 
        "ncc_reference": {
            "description": "The reference to a ncc", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ncc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ncc"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ncc"
        }, 
        "user_intent_response": {
            "description": "Response object for intentful operations on a user", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Response"
        }, 
        "collection_parameters": {
            "description": "NCC Log Collection Parameters.", 
            "required": [
                "start_time", 
                "end_time"
            ], 
            "type": "object", 
            "properties": {
                "start_time": {
                    "type": "string", 
                    "description": "Time to start log collection.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "tag_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of tags to collect logs."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "Time to end log collection.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "anonymize": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to anonymize the logs."
                }
            }, 
            "title": "NCC Log Collection Parameters"
        }, 
        "alert": {
            "description": "Alert entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/alert_resources"
                }
            }, 
            "title": "Alert Entity"
        }, 
        "disk_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "x-ntnx-enum": [
                        "disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for disk list"
        }, 
        "asn": {
            "description": "Autonomous system number", 
            "title": "ASN", 
            "format": "uint32", 
            "maximum": 4294967294, 
            "minimum": 0, 
            "type": "integer"
        }, 
        "tenant": {
            "description": "Tenant definition.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "idp_tenant_identifier": {
                    "type": "string", 
                    "description": "IDP Tenant Identifier.", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the tenant."
                }, 
                "name": {
                    "type": "string", 
                    "description": "name of the tenant.", 
                    "maxLength": 64
                }
            }, 
            "title": "Tenant definition."
        }, 
        "assignment_rule": {
            "description": "Rule defintion for entity selection.", 
            "required": [
                "selection_criteria_list"
            ], 
            "type": "object", 
            "properties": {
                "exclusion_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of entities to be excluded from category assignment."
                }, 
                "inclusion_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of entities to be included in category assignment."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the assignment rule.", 
                    "maxLength": 64
                }, 
                "selection_criteria_list": {
                    "items": {
                        "$ref": "#/definitions/selection_criteria"
                    }, 
                    "type": "array", 
                    "description": "List of selection criteria for category assignment."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the assignment rule.", 
                    "maxLength": 256
                }
            }, 
            "title": "Assignment Rule definition."
        }, 
        "batch_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "x-ntnx-enum": [
                        "batch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for batch list output"
        }, 
        "oauth_generate_token_response": {
            "description": "Oauth token generate response", 
            "required": [
                "client_id", 
                "client_secret", 
                "oauth_token"
            ], 
            "type": "object", 
            "properties": {
                "client_secret": {
                    "type": "string", 
                    "description": "client secret of the Oauth Client"
                }, 
                "oauth_token": {
                    "$ref": "#/definitions/oauth_token"
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "client id of the Oauth Client"
                }
            }, 
            "title": "Oauth token generate response"
        }, 
        "ipfix_exporter_intent_input": {
            "description": "An intentful representation of a ipfix_exporter", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Entity"
        }, 
        "filter": {
            "description": "A filter defines the selection criteria for entities. It consists of two lists of filter expressions. The filter expressions can be of two types, Scope or Entity. The expressions in both these lists are combined with a logical AND.\n", 
            "required": [
                "entity_filter_expression_list"
            ], 
            "type": "object", 
            "properties": {
                "entity_filter_expression_list": {
                    "items": {
                        "$ref": "#/definitions/entity_filter_expression"
                    }, 
                    "type": "array", 
                    "description": "A list of Entity filter expressions."
                }, 
                "scope_filter_expression_list": {
                    "items": {
                        "$ref": "#/definitions/scope_filter_expression"
                    }, 
                    "type": "array", 
                    "description": "A list of Scope filter expressions."
                }
            }, 
            "title": "Filter."
        }, 
        "category_value_list_response": {
            "description": "Category Value list response.", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/category_value_status"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_list_metadata"
                }
            }, 
            "title": "Category value list response."
        }, 
        "guest_tools_status": {
            "description": "Information regarding guest tools.", 
            "type": "object", 
            "properties": {
                "nutanix_guest_tools": {
                    "description": "Nutanix Guest Tools information", 
                    "$ref": "#/definitions/nutanix_guest_tools_status"
                }
            }, 
            "title": "Guest Tools information"
        }, 
        "software_list_intent_response": {
            "description": "Available software on Nutanix portal", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/portal_software"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/software_list_metadata_output"
                }
            }, 
            "title": "List of software"
        }, 
        "volume_group_def_status": {
            "description": "Volume group configuration.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Volume group description."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the volume group entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/volume_group_resources_output"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Volume group name."
                }
            }, 
            "title": "Volume group configuration"
        }, 
        "log_collector_support_case_upload": {
            "description": "Log Collector object.", 
            "type": "object", 
            "properties": {
                "start_time": {
                    "type": "string", 
                    "description": "Start time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "anonymize_output": {
                    "type": "boolean", 
                    "description": "Flag for anonymized log collection."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "num_hours": {
                    "type": "integer", 
                    "description": "Number of hours for which log has to be collected. Starts from current time - no_of_hours till current time.", 
                    "format": "int32"
                }
            }, 
            "title": "Log Collector object."
        }, 
        "app_profile_reference_upload": {
            "description": "The reference to a app_profile", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_profile", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_profile"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_profile"
        }, 
        "certificate_spec": {
            "description": "Certificate info", 
            "required": [
                "certificate"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Certificate file name", 
                    "maxLength": 64
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate content", 
                    "format": "byte"
                }
            }, 
            "title": "Certificate info"
        }, 
        "image_placement_info": {
            "description": "Information about state of the policy", 
            "type": "object", 
            "properties": {
                "complete_policy_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "The complete list of clusters where the image should ideally be placed as part of this policy.\n"
                }, 
                "enforced_policy_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters where the image has been placed as part of enforcing this policy.\n"
                }, 
                "conflicting_image_placement_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/image_placement_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of policies that conflict with this policy."
                }
            }, 
            "title": "Placement policy Information"
        }, 
        "network_configuration": {
            "description": "Network configuration of the VM.", 
            "type": "object", 
            "properties": {
                "dns_ip_addresses_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the network interface."
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "MAC Address of the network interface.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "dhcp_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the DHCP server."
                }, 
                "default_gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Default gateway IP addresses."
                }, 
                "ip_info_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "List of IP information of the network interface."
                }
            }, 
            "title": "Network configuration of the VM."
        }, 
        "user_intent_input": {
            "description": "An intentful representation of a user", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Entity"
        }, 
        "blueprint_pending_launches_list_response": {
            "description": "Response containing all the bp launch requests which have not completed", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entites": {
                    "items": {
                        "$ref": "#/definitions/blueprint_pending_launches_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_list_metadata_output"
                }
            }, 
            "title": "Response containing all the pending bp launches"
        }, 
        "app_task_response_download": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "type", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list."
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "batch_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ncc_metadata": {
            "description": "The ncc kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ncc was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ncc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ncc"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ncc uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ncc was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ncc. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ncc. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ncc name", 
                    "maxLength": 80
                }
            }, 
            "title": "ncc metadata"
        }, 
        "aws_credentials": {
            "description": "Credentials to access AWS", 
            "required": [
                "access_key", 
                "secret_key"
            ], 
            "type": "object", 
            "properties": {
                "access_key": {
                    "type": "string"
                }, 
                "secret_key": {
                    "type": "string"
                }
            }, 
            "title": "AWS Credentials"
        }, 
        "blueprint_pending_launches_resource": {
            "description": "Response object for the launches in progress for app blueprints", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_pending_launches_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint launches in progress response"
        }, 
        "network_function_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "rack_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "volume_group_snapshot_intent_resource": {
            "description": "Response object for intentful operations on a volume_group_snapshot", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_snapshot_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_snapshot_metadata"
                }
            }, 
            "title": "volume_group_snapshot Intent Response"
        }, 
        "ngt_response": {
            "description": "NGT response.", 
            "required": [
                "uuid", 
                "vm_uuid"
            ], 
            "type": "object", 
            "properties": {
                "network_info_list": {
                    "items": {
                        "$ref": "#/definitions/network_configuration"
                    }, 
                    "type": "array", 
                    "description": "List of network configuration of the VMs."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID", 
                    "format": "UUID"
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "VM UUID", 
                    "format": "UUID"
                }, 
                "scripts_executable": {
                    "items": {
                        "type": "boolean"
                    }, 
                    "type": "array", 
                    "description": "Executable scripts in the VM."
                }, 
                "script_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Scripts present in the VM."
                }
            }, 
            "title": "NGT response"
        }, 
        "blueprint_def_status": {
            "description": "An intentful representation of a blueprint status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "blueprint Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the blueprint."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the blueprint, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for blueprint."
                }
            }, 
            "title": "blueprint Intent Status with placement specified"
        }, 
        "vm_snapshot_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_snapshot", 
                    "x-ntnx-enum": [
                        "vm_snapshot"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_snapshot list output"
        }, 
        "policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "policy", 
                    "x-ntnx-enum": [
                        "policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for policy list"
        }, 
        "rack_intent_resource": {
            "description": "Response object for intentful operations on a rack", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rack_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Response"
        }, 
        "citrix_adapter_resource_location_status": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name."
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "vswitch_config": {
            "description": "VSwitch configuration.", 
            "required": [
                "nic_teaming_policy", 
                "uplink_grouping"
            ], 
            "type": "object", 
            "properties": {
                "nic_teaming_policy": {
                    "x-ntnx-enum": [
                        "ACTIVE_BACKUP", 
                        "BALANCE_SLB", 
                        "BALANCE_TCP"
                    ], 
                    "type": "string", 
                    "description": "NIC teaming policy."
                }, 
                "uplink_grouping": {
                    "x-ntnx-enum": [
                        "NO_UPLINKS", 
                        "ALL", 
                        "ALL_1G", 
                        "ALL_10G", 
                        "ALL_25G", 
                        "ALL_40G", 
                        "ALL_100G"
                    ], 
                    "type": "string", 
                    "description": "Determines how the ethernet uplinks are selected for this vswitch."
                }
            }, 
            "title": "VSwitch configuration"
        }, 
        "remote_syslog_server_def_status": {
            "description": "Remote Syslog server configured on PC.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/syslog_server_resources"
                }
            }, 
            "title": "Remote Syslog server configured on PC."
        }, 
        "user_group_intent_resource": {
            "description": "Response object for intentful operations on a user_group", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Response"
        }, 
        "host_intent_resource": {
            "description": "Response object for intentful operations on a host", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/host_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Response"
        }, 
        "mh_vm_intent_response": {
            "description": "Response object for intentful operations on a mh_vm", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/mh_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Response"
        }, 
        "account_resources": {
            "description": "Account resources", 
            "required": [
                "type", 
                "data"
            ], 
            "type": "object", 
            "properties": {
                "data": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Account data"
                }, 
                "type": {
                    "type": "string"
                }
            }, 
            "title": "Account resources"
        }, 
        "ncc_collect_logs_input": {
            "description": "NCC Log Collection Input.", 
            "required": [
                "collection_parameters", 
                "log_bundle_parameters"
            ], 
            "type": "object", 
            "properties": {
                "log_bundle_parameters": {
                    "$ref": "#/definitions/log_bundle_parameters"
                }, 
                "collection_parameters": {
                    "$ref": "#/definitions/collection_parameters"
                }, 
                "ip_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of ips to collect logs."
                }
            }, 
            "title": "NCC Log Collection Input"
        }, 
        "directory_service_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for directory_service list output"
        }, 
        "role_intent_response": {
            "description": "Response object for intentful operations on a role", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/role_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Response"
        }, 
        "capability_details": {
            "description": "Capabilities specific to cluster", 
            "type": "object", 
            "properties": {
                "source_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID for the cluster that contained capability", 
                    "format": "UUID"
                }, 
                "notes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Notes related to this capability"
                }, 
                "value": {
                    "description": "Capability value of the specific capability in the cluster", 
                    "$ref": "#/definitions/capability_value"
                }
            }, 
            "title": "Member specific capability object"
        }, 
        "app_cost_input": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "interval", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Cost for Application"
        }, 
        "volume_group": {
            "description": "Volume group input spec.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Volume group name.", 
                    "maxLength": 256
                }, 
                "description": {
                    "type": "string", 
                    "description": "Volume group description.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/volume_group_resources_input"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Volume group object"
        }, 
        "datacenter_component": {
            "description": "Common properties for node or a network device in datacenters\n", 
            "type": "object", 
            "properties": {
                "rack_unit_height": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "rack unit height", 
                    "format": "int32"
                }, 
                "management_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "management IP address"
                }, 
                "management_mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "management mac address", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "rack_unit_position": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "rack unit position", 
                    "format": "int32"
                }, 
                "installation_time": {
                    "type": "string", 
                    "description": "installation date time", 
                    "format": "date-time"
                }
            }, 
            "title": "Hardware component"
        }, 
        "remote_syslog_module_intent_response": {
            "description": "Response object for intentful operations on a remote_syslog_module", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_module_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Response"
        }, 
        "app_service_reference": {
            "description": "The reference to a app_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_service"
        }, 
        "ncc_collect_logs_response": {
            "description": "NCC Log Collection Response.", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "NCC Log Collection Response"
        }, 
        "windows_domain": {
            "description": "Hyper-V node domain.", 
            "required": [
                "domain_credential"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the node to be renamed to during domain-join. If not given,a new name will be automatically assigned.\n"
                }, 
                "domain_name": {
                    "type": "string", 
                    "description": "Full name of domain."
                }, 
                "domain_credential": {
                    "$ref": "#/definitions/credentials"
                }, 
                "organization_unit_path": {
                    "type": "string", 
                    "description": "Path to organization unit in the domain."
                }, 
                "name_prefix": {
                    "type": "string", 
                    "description": "The name prefix in the domain in case of CPS deployment."
                }, 
                "name_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The ip of name server that can resolve the domain name. Required during joining domain.\n"
                }
            }, 
            "title": "Hyper-v Domain"
        }, 
        "tenant_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_metadata": {
            "description": "The vm kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm metadata"
        }, 
        "rca_metadata": {
            "description": "Root cause analysis from alert RCA metadata.", 
            "type": "object", 
            "properties": {
                "title": {
                    "type": "string", 
                    "description": "RCA title"
                }, 
                "actions": {
                    "type": "string", 
                    "description": "Alert possible actions"
                }, 
                "parent_cause_id": {
                    "type": "string", 
                    "description": "cause id of parent"
                }, 
                "details": {
                    "type": "string", 
                    "description": "Alert cause detail information"
                }, 
                "cause": {
                    "type": "string", 
                    "description": "Alert cause description"
                }, 
                "id": {
                    "type": "string", 
                    "description": "rca metadata id"
                }
            }, 
            "title": "Root cause analysis metadata."
        }, 
        "remote_rpc_request_input": {
            "description": "Request spec for performing remote RPC execution.", 
            "required": [
                "rpc_payload"
            ], 
            "properties": {
                "rpc_payload": {
                    "type": "string", 
                    "description": "Argument to be passed to the RPC in bytes.", 
                    "format": "bytes"
                }
            }, 
            "title": "Request spec for performing remote RPC execution"
        }, 
        "webhook_resources": {
            "description": "Webhook resources.", 
            "required": [
                "post_url", 
                "events_filter_list"
            ], 
            "type": "object", 
            "properties": {
                "post_url": {
                    "type": "string", 
                    "description": "URL for the webhook."
                }, 
                "credentials": {
                    "type": "object", 
                    "description": "Credentials required for successful post to the webhook URL.\n", 
                    "properties": {
                        "username": {
                            "type": "string", 
                            "description": "Username to be used in basic auth."
                        }, 
                        "password": {
                            "type": "string", 
                            "description": "Password to be used in basic auth."
                        }
                    }
                }, 
                "events_filter_list": {
                    "items": {
                        "$ref": "#/definitions/webhook_event_type"
                    }, 
                    "type": "array", 
                    "description": "List of events subscribed to by the webhook."
                }
            }, 
            "title": "Webhook resources"
        }, 
        "app_substrate_input_upload": {
            "description": "Substrate definition", 
            "required": [
                "name", 
                "type", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe_upload"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Substrate definition"
        }, 
        "account_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "x-ntnx-enum": [
                        "account"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for account list output"
        }, 
        "ipfix_exporter": {
            "description": "Inputs to configure IPFIX exporter .", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ipfix_exporter_resources"
                }
            }, 
            "title": "IPFIX exporter configuration."
        }, 
        "disk_intent_input": {
            "description": "An intentful representation of a disk", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Entity"
        }, 
        "mh_vm_resources_def_status": {
            "description": "VM Resources Status Definition.", 
            "type": "object", 
            "properties": {
                "hypervisor_specific_id": {
                    "type": "string", 
                    "description": "The hypervisor specific ID of the VM.\n"
                }, 
                "host_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_status"
                }, 
                "hypervisor_type": {
                    "x-ntnx-enum": [
                        "ESX", 
                        "AHV"
                    ], 
                    "type": "string", 
                    "description": "The hypervisor type for the hypervisor the VM is hosted on.\n"
                }, 
                "storage_config": {
                    "description": "Storage configuration of the VM.", 
                    "$ref": "#/definitions/mh_vm_storage_config_status"
                }, 
                "protection_type": {
                    "x-ntnx-enum": [
                        "UNPROTECTED", 
                        "PD_PROTECTED", 
                        "RULE_PROTECTED"
                    ], 
                    "type": "string", 
                    "description": "The type of protection applied on a VM. PD_PROTECTED indicates a VM protected using Prism Element. RULE_PROTECTED indicates a VM protected using Prism Central.\n"
                }, 
                "parent_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "VM Resources Status Definition"
        }, 
        "app_substrate_response": {
            "description": "Substrate info for deployment", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Deployment Sustrate Definition for Application."
        }, 
        "project": {
            "description": "A Project resource.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Project name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "resource_domain": {
                            "$ref": "#/definitions/resource_domain_spec"
                        }, 
                        "account_reference_list": {
                            "items": {
                                "$ref": "#/definitions/account_reference"
                            }, 
                            "type": "array", 
                            "description": "List of accounts associated with the project."
                        }, 
                        "environment_reference_list": {
                            "items": {
                                "$ref": "#/definitions/environment_reference"
                            }, 
                            "type": "array", 
                            "description": "List of environments associated with the project."
                        }, 
                        "default_subnet_reference": {
                            "description": "Optional default subnet if one is specified", 
                            "$ref": "#/definitions/subnet_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "List of users in the project."
                        }, 
                        "tunnel_reference_list": {
                            "items": {
                                "$ref": "#/definitions/tunnel_reference"
                            }, 
                            "type": "array", 
                            "description": "List of tunnels associated with the project."
                        }, 
                        "external_user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory service user groups. These groups are not\nmanaged by Nutanix.\n"
                        }, 
                        "subnet_reference_list": {
                            "items": {
                                "$ref": "#/definitions/subnet_reference"
                            }, 
                            "type": "array", 
                            "description": "List of subnets for the project."
                        }, 
                        "external_network_list": {
                            "items": {
                                "$ref": "#/definitions/external_network"
                            }, 
                            "type": "array", 
                            "description": "List of external networks associated with the project."
                        }, 
                        "default_environment_reference": {
                            "description": "Optional default environment if one is specified", 
                            "$ref": "#/definitions/environment_reference"
                        }
                    }, 
                    "title": "Project Resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Project description.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Project resource spec"
        }, 
        "rack_def_status": {
            "description": "Rack entity status defintion", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the rack entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Rack Name"
                }, 
                "resources": {
                    "$ref": "#/definitions/rack_resources"
                }
            }, 
            "title": "Rack Entity Status"
        }, 
        "app_blueprint_render_info_input": {
            "description": "Source spec that describes an entity like a VM that should be translated into an AppBlueprint\n", 
            "required": [
                "name", 
                "input_type", 
                "input_spec"
            ], 
            "type": "object", 
            "properties": {
                "input_type": {
                    "x-ntnx-enum": [
                        "VM_REFERENCE", 
                        "VM_REFERENCE_WITH_CUSTOMIZATION"
                    ], 
                    "type": "string"
                }, 
                "input_spec": {
                    "properties": {
                        "vm_reference_with_customization": {
                            "$ref": "#/definitions/vm_reference_with_customization"
                        }, 
                        "vm_reference": {
                            "$ref": "#/definitions/vm_reference"
                        }
                    }, 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "vm_reference"
                            ]
                        }, 
                        {
                            "required": [
                                "vm_reference_with_customization"
                            ]
                        }
                    ], 
                    "type": "object", 
                    "description": "Spec based on the type", 
                    "title": "Spec for the given entity type"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rendered app blueprint", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the rendered app blueprint", 
                    "maxLength": 1000
                }
            }, 
            "title": "Render AppBlueprint input spec"
        }, 
        "oauth_client_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for oauth_client list output"
        }, 
        "ngt_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "x-ntnx-enum": [
                        "ngt"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ngt list output"
        }, 
        "permission_def_status": {
            "description": "Permission Status Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the permission entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Permission name."
                }, 
                "resources": {
                    "$ref": "#/definitions/permission_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Human readable description of the permission."
                }
            }, 
            "title": "Permission Status Definition."
        }, 
        "policy_reference": {
            "description": "The reference to a policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a policy"
        }, 
        "checksum_algorithm": {
            "x-ntnx-enum": [
                "SHA_256", 
                "SHA_1"
            ], 
            "type": "string", 
            "description": "The type of checksum calculated for the image", 
            "title": "Checksum algorithm"
        }, 
        "right_hand_side": {
            "properties": {
                "categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "The category values represented as a dictionary of key -> list of values. e.g.{\"env\":[\"env1\", \"env2\"]}\n"
                }, 
                "collection": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "SELF_OWNED"
                    ], 
                    "type": "string", 
                    "description": "A representative term for supported groupings of entities. ALL = All the entities of a given kind. SELF_OWNED = The entities of a given kind, that are owned by the user.\n"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The explicit list of UUIDs for the given kind."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "collection"
                    ]
                }, 
                {
                    "required": [
                        "categories"
                    ]
                }, 
                {
                    "required": [
                        "uuid_list"
                    ]
                }
            ], 
            "type": "object", 
            "description": "The right hand side of an expression.", 
            "title": "The right hand side (RHS) of an expression."
        }, 
        "docker_registry_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "access_control_policy_def_status": {
            "description": "Access Control Policy status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the Access Control Policy."
                }, 
                "is_system_defined": {
                    "type": "boolean", 
                    "description": "Flag identifying if the ACP is system defined or not."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the Access Control Policy entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "role_reference": {
                            "description": "The Role being assigned to a given user(s).", 
                            "$ref": "#/definitions/role_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The User(s) being assigned a given role."
                        }, 
                        "filter_list": {
                            "description": "The list of filters, which define the entities.\n", 
                            "type": "object", 
                            "x-ntnx-one-of": [
                                {
                                    "required": [
                                        "context_list"
                                    ]
                                }
                            ], 
                            "properties": {
                                "context_list": {
                                    "items": {
                                        "$ref": "#/definitions/filter"
                                    }, 
                                    "type": "array", 
                                    "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                                }
                            }
                        }
                    }, 
                    "title": "Access Control Policy Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The description of the association of a role to a user in a given context."
                }
            }, 
            "title": "Access Control Policy status definition."
        }, 
        "network_function_chain_def_status": {
            "description": "Network function chain status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A description for the network function chain."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "description": "UUID of cluster that hosts the network function chain.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/network_function_chain_resource"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Network function chain name."
                }
            }, 
            "title": "Network function chain status definition"
        }, 
        "sort_order": {
            "x-ntnx-enum": [
                "ASCENDING", 
                "DESCENDING"
            ], 
            "type": "string", 
            "description": "The sort order in which results are returned", 
            "title": "Sort order"
        }, 
        "host_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "x-ntnx-enum": [
                        "host"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for host list"
        }, 
        "file_item_def_status": {
            "description": "An intentful representation of a file_item status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "file_item Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the file_item."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the file_item, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/file_item_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for file_item."
                }
            }, 
            "title": "file_item Intent Status with placement specified"
        }, 
        "account_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "portal_software": {
            "description": "Software information from Nutanix Portal", 
            "type": "object", 
            "properties": {
                "release_note_url": {
                    "type": "string", 
                    "description": "URL to point to the support portal release note of this software.\nCurrently only set and used for NOS releases\n"
                }, 
                "upgrade_notification": {
                    "$ref": "#/definitions/upgrade_notification"
                }, 
                "release_date": {
                    "type": "string", 
                    "description": "Release date of this software in RFC3339 format.\n", 
                    "format": "date-time"
                }, 
                "md5sum": {
                    "type": "string", 
                    "description": "MD5 checksum of the software file"
                }, 
                "compatible_version_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of software versions that this version can be upgraded from\n"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Software version string"
                }, 
                "compatible_pe_version_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of Prism Element compatible versions"
                }, 
                "software_type": {
                    "$ref": "#/definitions/software_type"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "Total size of the software file in bytes", 
                    "format": "int64"
                }
            }, 
            "title": "Software information"
        }, 
        "image_placement_policy_def_status": {
            "description": "Image placement policy status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the image placement policy."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the image placement policy, if in an error state."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Image placement policy name."
                }, 
                "resources": {
                    "$ref": "#/definitions/image_placement_policy_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image placement policy."
                }
            }, 
            "title": "Image placement policy status"
        }, 
        "app_service_response_download": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service for Application"
        }, 
        "vm_recovery_point_list_intent_response": {
            "description": "Response object for intentful operation of vm_recovery_points", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_recovery_point_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "user_group_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "x-ntnx-enum": [
                        "user_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for user_group list"
        }, 
        "remote_connection_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_connection list"
        }, 
        "providers": {
            "additionalProperties": {
                "type": "object"
            }, 
            "type": "object", 
            "description": "Providers should be supplied as \"<scope>:<provider>\" style keys. Values\nwill be interpreted by the provider if supplied\n", 
            "title": "Providers"
        }, 
        "vm_recovery_point_intent_resource": {
            "description": "Response object for intentful operations on a vm_recovery_point", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_recovery_point_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Response"
        }, 
        "environment_metadata": {
            "description": "The environment kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when environment was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "environment uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when environment was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the environment. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the environment. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "environment name", 
                    "maxLength": 80
                }
            }, 
            "title": "environment metadata"
        }, 
        "user_group_metadata": {
            "description": "The user_group kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user_group was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "user_group uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user_group was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user_group. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user_group. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "user_group name", 
                    "maxLength": 80
                }
            }, 
            "title": "user_group metadata"
        }, 
        "app_variable_response_download": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for variable"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "cluster_synchronous_replication_capable_response": {
            "items": {
                "type": "object", 
                "description": "Source cluster to given remote cluster latency.", 
                "properties": {
                    "rtt_msecs": {
                        "type": "string", 
                        "description": "Round trip time in milliseconds."
                    }, 
                    "cluster_reference": {
                        "$ref": "#/definitions/cluster_reference"
                    }
                }
            }, 
            "type": "array", 
            "description": "Response object for the API to check if a remote cluster is capable of\nsynchronous replication.\n", 
            "title": "Response schmea for synchronous_replication_capable API."
        }, 
        "file_item_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "x-ntnx-enum": [
                        "file_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for file_item list"
        }, 
        "vm_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm list"
        }, 
        "ncc_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ncc", 
                    "x-ntnx-enum": [
                        "ncc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ncc list"
        }, 
        "rackable_unit": {
            "description": "Rackable Unit entity definition", 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/rackable_unit_resources"
                }
            }, 
            "title": "Rackable Unit Entity"
        }, 
        "support_case_upload_intent_response": {
            "description": "Response object for intentful operations on a support_case_upload", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/support_case_upload_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/support_case_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_upload_metadata"
                }
            }, 
            "title": "support_case_upload Intent Response"
        }, 
        "image_resources": {
            "description": "Describes the image spec resources object.", 
            "type": "object", 
            "properties": {
                "image_type": {
                    "$ref": "#/definitions/image_type"
                }, 
                "checksum": {
                    "description": "Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.\n", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "The source URI points at the location of a the source image which is used to create/update image.\n"
                }, 
                "initial_placement_ref_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is requested to be placed at time of creation. This argument will not be honored at time of update.\n"
                }, 
                "version": {
                    "description": "The image version", 
                    "$ref": "#/definitions/image_version_resources"
                }, 
                "architecture": {
                    "description": "Indicates the CPU architecture that the image is compatible with. If this is not specified for an image this will default to the CPU architecture type of the cluster.\n", 
                    "$ref": "#/definitions/image_architecture"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk. The expected kind for VMs Disk is vm_disk. The uuid should be the disk device uuid, where the disk device is from disk_list from VM status.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "source_options": {
                    "$ref": "#/definitions/source_options"
                }
            }, 
            "title": "Image spec resources"
        }, 
        "directory_service_intent_resource": {
            "description": "Response object for intentful operations on a directory_service", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/directory_service_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Response"
        }, 
        "groups_aggregation_function": {
            "x-ntnx-enum": [
                "SUM", 
                "AVG", 
                "MIN", 
                "MAX", 
                "LAST", 
                "COUNT", 
                "BUCKETS"
            ], 
            "type": "string", 
            "description": "Downsampling function to take time series data and resolve to one value for aggregation purposes.\n", 
            "title": "Entities Request Aggregation Function"
        }, 
        "ca_cert": {
            "description": "CA certificate info.", 
            "required": [
                "ca_name", 
                "certificate"
            ], 
            "type": "object", 
            "properties": {
                "ca_name": {
                    "type": "string", 
                    "description": "Name of the certificate authority."
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate content.", 
                    "format": "byte"
                }
            }, 
            "title": "CA certificate info"
        }, 
        "blueprint_download_intent_response": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_download_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "resource_charge_metadata": {
            "description": "The resource_charge kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_charge was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "resource_charge uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_charge was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_charge. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_charge. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "resource_charge name", 
                    "maxLength": 80
                }
            }, 
            "title": "resource_charge metadata"
        }, 
        "app_package_input": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "user_input_resource": {
            "properties": {
                "directory_service_user": {
                    "$ref": "#/definitions/directory_service_user"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "directory_service_user"
                    ]
                }
            ], 
            "type": "object", 
            "description": "User Resource Definition.", 
            "title": "User Resource Definition."
        }, 
        "cloud_credentials_list_intent_response": {
            "description": "Response object for intentful operation of cloud_credentialss", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cloud_credentials_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "oauth_client_list": {
            "description": "Oauth Client list", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/oauth_client_response"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/oauth_client_list_metadata"
                }
            }, 
            "title": "Oauth Client list"
        }, 
        "network_function_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "x-ntnx-enum": [
                        "network_function"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_function list"
        }, 
        "access_control_policy_list_intent_response": {
            "description": "Response object for intentful operation of access_control_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "remote_connection_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_connection list output"
        }, 
        "vm_list_intent_response": {
            "description": "Response object for intentful operation of vms", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_credential_input": {
            "description": "Credential for application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Credential for application"
        }, 
        "app_blueprint_render_info_output": {
            "description": "The rendered blueprint spec", 
            "type": "object", 
            "properties": {
                "blueprint_spec": {
                    "$ref": "#/definitions/blueprint_upload"
                }
            }, 
            "title": "Render AppBlueprint output spec"
        }, 
        "cluster_domain_server": {
            "description": "Cluster domain server. Only applied to the cluster with all Hyper-V hosts.\n", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "nameserver": {
                    "type": "string", 
                    "description": "The IP of the nameserver that can resolve the domain name. Must set\nwhen joining the domain.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Joined domain name. In 'put' request, empty name will unjoin the\ncluster from current domain.\n"
                }, 
                "domain_credentials": {
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Domain Server"
        }, 
        "subnet_def_status": {
            "description": "An intentful representation of a subnet status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "subnet Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the subnet."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the subnet, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/subnet_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for subnet."
                }
            }, 
            "title": "subnet Intent Status with placement specified"
        }, 
        "remote_syslog_server_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "disk_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_package_response_download": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference_upload"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "service_element_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference_upload"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "vm_recovery_point_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_recovery_point list"
        }, 
        "user_group_intent_input": {
            "description": "An intentful representation of a user_group", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Entity"
        }, 
        "directory_service_def_status": {
            "description": "Details of the directory service.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the directory service configuration."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the directory service."
                }, 
                "resources": {
                    "description": "The configuration details of the directory service.", 
                    "required": [
                        "url", 
                        "domain_name", 
                        "directory_type", 
                        "service_account"
                    ], 
                    "type": "object", 
                    "properties": {
                        "open_ldap_configuration": {
                            "description": "Configuration for OpenLDAP.", 
                            "$ref": "#/definitions/open_ldap_configuration_def_status"
                        }, 
                        "url": {
                            "type": "string", 
                            "description": "URL of the directory."
                        }, 
                        "directory_type": {
                            "x-ntnx-enum": [
                                "ACTIVE_DIRECTORY", 
                                "OPEN_LDAP"
                            ], 
                            "type": "string", 
                            "description": "Type of the directory service."
                        }, 
                        "admin_user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The list of admin users available in the directory service.\n"
                        }, 
                        "domain_name": {
                            "type": "string", 
                            "description": "The domain name of the directory service."
                        }, 
                        "service_account": {
                            "description": "Validates and connects to the directory service with the given\ncredentials.\n", 
                            "$ref": "#/definitions/service_account"
                        }, 
                        "admin_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of admin user groups available in the directory service.\n"
                        }
                    }, 
                    "title": "Directory service resources"
                }
            }, 
            "title": "Directory service"
        }, 
        "rackable_unit_def_status": {
            "description": "Rackable unit entity status definition. A rackable unit is the physical chassis which contains a set of nodes. This entity is currently defined in context of a cluster only. Hence, multiple rackable unit entities may be present with same serial and same model, if they belong to different clusters (when viewed from PC).\n", 
            "required": [
                "serial", 
                "model", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "serial": {
                    "type": "string", 
                    "description": "The rackable unit serial"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "model": {
                    "type": "string", 
                    "description": "The rackable unit model"
                }, 
                "resources": {
                    "$ref": "#/definitions/rackable_unit_resources"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the rackable unit entity"
                }
            }, 
            "title": "Rackable Unit Entity Status"
        }, 
        "image_placement_policy_state": {
            "description": "State of enforced policy on an entity.", 
            "required": [
                "compliance_status", 
                "enforcement_mode", 
                "policy_reference"
            ], 
            "type": "object", 
            "properties": {
                "policy_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "policy_info": {
                    "$ref": "#/definitions/image_placement_info"
                }, 
                "compliance_status": {
                    "description": "This field indicates whether the given entity is compliant with the specified policy or not. It will be in unknown state if the current compliance state is not known.\n", 
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "enforcement_mode": {
                    "x-ntnx-enum": [
                        "MONITORING", 
                        "ENFORCING", 
                        "ENFORCEMENT_FAILED"
                    ], 
                    "type": "string", 
                    "description": "Policy enforcement mode informs us about what the policy engine is currently doing to enforce the policy on the entity. Monitoring indicates that the policy engine is simply monitoring the entity's state. Enforcing means that the policy engine is currently trying to enforce the policy on the entity. Enforcement failed indicates that the policy engine encountered a non-transient error and requires user intervention to fix the problem, error message gives the reason for error in this case.\n"
                }, 
                "error_message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Policy State"
        }, 
        "access_control_policy_reference": {
            "description": "The reference to a access_control_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a access_control_policy"
        }, 
        "vm_gpu_output_status": {
            "description": "Graphics resource status information for the Virtual Machine.", 
            "type": "object", 
            "properties": {
                "frame_buffer_size_mib": {
                    "type": "integer", 
                    "description": "GPU frame buffer size in MiB.", 
                    "format": "int64"
                }, 
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the GPU.", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the GPU resource."
                }, 
                "pci_address": {
                    "type": "string", 
                    "description": "GPU {segment:bus:device:function} (sbdf) address if assigned.\n"
                }, 
                "fraction": {
                    "type": "integer", 
                    "description": "Fraction of the physical GPU assigned.", 
                    "format": "int32"
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The mode of this GPU"
                }, 
                "num_virtual_display_heads": {
                    "type": "integer", 
                    "description": "Number of supported virtual display heads.", 
                    "format": "int32"
                }, 
                "guest_driver_version": {
                    "type": "string", 
                    "description": "Last determined guest driver version."
                }, 
                "max_instances_per_vm": {
                    "type": "integer", 
                    "description": "Maximum number of vGPUs of a GPU type assignable to a VM.", 
                    "format": "int64"
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }
            }, 
            "title": "Virtual Machine GPU status"
        }, 
        "software_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "x-ntnx-enum": [
                        "software"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for software list output"
        }, 
        "app_credential_response": {
            "description": "Credential definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Credential for Application"
        }, 
        "cluster_synchronous_replication_capable_input": {
            "description": "Input object for API to check if a remote cluster is capable of\nsynchronous replication.\n", 
            "required": [
                "remote_cluster_ip"
            ], 
            "type": "object", 
            "properties": {
                "remote_cluster_ip": {
                    "type": "string", 
                    "description": "IP address of the remote cluster whose capability for synchronous\nreplication has to be checked.\n"
                }
            }, 
            "title": "Input schmea for synchronous_replication_capable API."
        }, 
        "external_repository_list_intent_response": {
            "description": "Response object for intentful operation of external_repositorys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/external_repository_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/external_repository_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "groups_attribute_type": {
            "x-ntnx-enum": [
                "CONTINUOUS", 
                "DISCRETE"
            ], 
            "type": "string", 
            "description": "The type of an attribute being used for grouping - may be continuous or discrete.\n", 
            "title": "Attribute Type"
        }, 
        "batch_reference": {
            "description": "The reference to a batch", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a batch"
        }, 
        "volume_group_snapshot_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group_snapshot"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "rackable_unit_intent_input": {
            "description": "An intentful representation of a rackable_unit", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Entity"
        }, 
        "prism_central_metadata": {
            "description": "The prism_central kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "prism_central uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "prism_central name", 
                    "maxLength": 80
                }
            }, 
            "title": "prism_central metadata"
        }, 
        "ssh_user_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "oauth_client_reference": {
            "description": "The reference to a oauth_client", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a oauth_client"
        }, 
        "docker_registry_reference": {
            "description": "The reference to a docker_registry", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a docker_registry"
        }, 
        "project_metadata": {
            "description": "The project kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when project was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "project uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when project was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the project. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the project. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "project name", 
                    "maxLength": 80
                }
            }, 
            "title": "project metadata"
        }, 
        "blueprint_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for blueprint list"
        }, 
        "vm_recovery_point_intent_response": {
            "description": "Response object for intentful operations on a vm_recovery_point", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_recovery_point_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Response"
        }, 
        "vm_nic_output_status": {
            "description": "Virtual Machine NIC Status.", 
            "type": "object", 
            "properties": {
                "dns_ip_addresses_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "nic_type": {
                    "x-ntnx-enum": [
                        "NORMAL_NIC", 
                        "DIRECT_NIC", 
                        "NETWORK_FUNCTION_NIC"
                    ], 
                    "type": "string", 
                    "description": "The type of this NIC. Defaults to NORMAL_NIC."
                }, 
                "subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.\n", 
                    "format": "UUID"
                }, 
                "ip_endpoint_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "IP endpoints for the adapter. Currently, IPv4 addresses are supported.\n"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "The MAC address for the adapter.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "floating_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The Floating IP associated with the vnic."
                }, 
                "network_function_nic_type": {
                    "x-ntnx-enum": [
                        "INGRESS", 
                        "EGRESS", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of this Network function NIC. Defaults to INGRESS.\n"
                }, 
                "vlan_mode": {
                    "x-ntnx-enum": [
                        "ACCESS", 
                        "TRUNKED"
                    ], 
                    "type": "string", 
                    "description": "VLAN mode."
                }, 
                "num_queues": {
                    "type": "integer", 
                    "description": "The number of tx/rx queue pairs for this NIC.\n"
                }, 
                "default_gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Default gateway IP addresses."
                }, 
                "dhcp_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the DHCP server."
                }, 
                "model": {
                    "x-ntnx-enum": [
                        "VIRTIO", 
                        "E1000"
                    ], 
                    "type": "string", 
                    "description": "The model of this NIC."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Whether or not the NIC is connected. True by default."
                }, 
                "trunked_vlan_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of VLANs to trunk if vlan_mode is TRUNKED. If empty, all VLANs are trunked.\n"
                }
            }, 
            "title": "Virtual Machine NIC Status"
        }, 
        "user_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "indicator": {
            "description": "It is a symptom that caused the alert.", 
            "type": "object", 
            "properties": {
                "metric_display_name": {
                    "type": "string", 
                    "description": "The metric display name in English"
                }, 
                "metric_name": {
                    "type": "string", 
                    "description": "The metric key name"
                }, 
                "trigger_time": {
                    "type": "string", 
                    "description": "The time that this indicator was created.  It is the\nsource metric time.\n", 
                    "format": "date-time"
                }, 
                "condition_type": {
                    "x-ntnx-enum": [
                        "STATIC_THRESHOLD", 
                        "ANOMALY", 
                        "SAFETY_ZONE"
                    ], 
                    "type": "string", 
                    "description": "Indicating if this symptom is caused by static threshold\nor anomaly (dynamic threshold) evaluation.  If an indicator is raised,\nthere may have another indicator indicating the safe guard zone value.\n"
                }, 
                "threshold": {
                    "description": "The threshold used for comparison.", 
                    "$ref": "#/definitions/param_value"
                }, 
                "last_value": {
                    "description": "The last raw value that caused the indicator.", 
                    "$ref": "#/definitions/param_value"
                }, 
                "comparison_operator": {
                    "x-ntnx-enum": [
                        "EQUAL_TO", 
                        "GREATER_THAN", 
                        "GREATER_THAN_OR_EQUAL_TO", 
                        "LESS_THAN", 
                        "LESS_THAN_OR_EQUAL_TO", 
                        "CONTAINS"
                    ], 
                    "type": "string", 
                    "description": "The comparison operator used in this evaluation"
                }, 
                "unit": {
                    "type": "string", 
                    "description": "Data unit."
                }, 
                "wait_time_in_usecs": {
                    "type": "integer", 
                    "description": "How long the indicator had been lasted before raised the issue\n", 
                    "format": "int64"
                }
            }, 
            "title": "Information about a monitored metric crossed threshold."
        }, 
        "docker_registry_image_status": {
            "description": "Docker registry image search result", 
            "required": [
                "name", 
                "is_official", 
                "owner", 
                "tag_list"
            ], 
            "type": "object", 
            "properties": {
                "owner": {
                    "type": "string", 
                    "description": "Owner user name"
                }, 
                "is_official": {
                    "type": "boolean", 
                    "description": "Whether it is an official Docker Hub image"
                }, 
                "tag_list": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_image_tag"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Repository description", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "Repository name", 
                    "maxLength": 64
                }
            }, 
            "title": "Docker registry image search result"
        }, 
        "image_type": {
            "x-ntnx-enum": [
                "DISK_IMAGE", 
                "ISO_IMAGE"
            ], 
            "type": "string", 
            "description": "The type of image.", 
            "title": "Image type"
        }, 
        "citrix_adapter_resources": {
            "description": "Citrix Adapter resources definition.", 
            "type": "object", 
            "properties": {
                "resource_location": {
                    "$ref": "#/definitions/citrix_adapter_resource_location"
                }, 
                "domain_info": {
                    "$ref": "#/definitions/domain_info"
                }, 
                "citrix_vm": {
                    "$ref": "#/definitions/vm_intent_input"
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "citrix_vm_clones": {
                    "items": {
                        "$ref": "#/definitions/citrix_vm_clones"
                    }, 
                    "type": "array", 
                    "description": "Vm clones name/password."
                }
            }, 
            "title": "Citrix Adapter resources"
        }, 
        "user_reference": {
            "description": "The reference to a user", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a user"
        }, 
        "rackable_unit_list_intent_response": {
            "description": "Response object for intentful operation of rackable_units", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/rackable_unit_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_marketplace_launch_spec": {
            "description": "Spec for Blueprint launch.", 
            "required": [
                "resources", 
                "app_blueprint_name"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Description for the marketplace item"
                }, 
                "environment_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Environment uuid.", 
                    "format": "UUID"
                }, 
                "app_blueprint_name": {
                    "type": "string", 
                    "description": "Name of the app blueprint to be created."
                }, 
                "source_marketplace_name": {
                    "type": "string", 
                    "description": "Name of the source marketplace item of the app blueprint\n"
                }, 
                "source_marketplace_version": {
                    "type": "string", 
                    "description": "Indicates version of the source marketplace item of the app blueprint\n"
                }, 
                "resources": {
                    "description": "Blueprint spec of the marketplace blueprint.", 
                    "$ref": "#/definitions/blueprint_upload_resources"
                }
            }, 
            "title": "Spec for Blueprint launch."
        }, 
        "volume_group_resources_output": {
            "description": "Volume group resources.", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.\n"
                }, 
                "iscsi_target_name": {
                    "type": "string", 
                    "description": "iSCSI target full name"
                }, 
                "enabled_authentications": {
                    "x-ntnx-enum": [
                        "CHAP", 
                        "NONE"
                    ], 
                    "type": "string", 
                    "description": "Which authentication is enabled for VG."
                }, 
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/attachment_reference_output"
                    }, 
                    "type": "array", 
                    "description": "VMs attached to volume group."
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VG was cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "sharing_status": {
                    "x-ntnx-enum": [
                        "SHARED", 
                        "NOT_SHARED"
                    ], 
                    "type": "string", 
                    "description": "Whether the volume group can be shared across multiple iSCSI initiators.\n"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/volume_disk_resource_output"
                    }, 
                    "type": "array", 
                    "description": "Volume group disk specification."
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "The total size of the Volume Group in bytes", 
                    "format": "int64"
                }, 
                "load_balance_vm_attachments": {
                    "type": "boolean", 
                    "description": "Whether volume group load balancing is enabled."
                }, 
                "size_mib": {
                    "type": "integer", 
                    "description": "The total size of the Volume Group in mib", 
                    "format": "int64"
                }, 
                "iscsi_target_prefix": {
                    "type": "string", 
                    "description": "iSCSI target prefix-name."
                }
            }, 
            "title": "Volume group resources"
        }, 
        "basic_credential": {
            "description": "Basic Credentials to connect with remote endpoint", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "username of authorized user on remote cluster,\nmust for BASIC auth_type\n"
                }, 
                "password": {
                    "type": "string", 
                    "description": "password of authorized user on remote cluster,\nmust for BASIC auth_type\n"
                }
            }, 
            "title": "Basic Credentials to connect with remote endpoint"
        }, 
        "docker_registry": {
            "description": "Docker registry spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the docker registry"
                }, 
                "resources": {
                    "$ref": "#/definitions/docker_registry_resources"
                }
            }, 
            "title": "Docker Registry spec"
        }, 
        "customization_spec_reference": {
            "description": "The reference to a customization_spec", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a customization_spec"
        }, 
        "image_reference": {
            "description": "The reference to a image", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a image"
        }, 
        "vm_snapshot_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_snapshot"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cluster_analysis": {
            "description": "Cluster analysis related values.", 
            "type": "object", 
            "properties": {
                "vm_efficiency_map": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Map of cluster efficiency which includes numbers of inefficient\nvms. The value is populated by analytics on PC.\n"
                }
            }, 
            "title": "Cluster Analysis Statistics"
        }, 
        "vm_disk": {
            "description": "VirtualMachine Disk (VM Disk).", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }, 
                "disk_size_bytes": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_config": {
                    "description": "Storage configuration for disks.", 
                    "$ref": "#/definitions/disk_storage_config"
                }, 
                "device_properties": {
                    "type": "object", 
                    "properties": {
                        "device_type": {
                            "default": "DISK", 
                            "x-ntnx-enum": [
                                "DISK", 
                                "CDROM", 
                                "VOLUME_GROUP"
                            ], 
                            "type": "string"
                        }, 
                        "disk_address": {
                            "$ref": "#/definitions/disk_address"
                        }
                    }
                }, 
                "data_source_reference": {
                    "type": "object", 
                    "properties": {
                        "is_direct_attach": {
                            "type": "boolean", 
                            "description": "This is to indicate if attaching the referenced disk directly. Important: this should only be used by internal services. Direct attaching a disk that is used by another VM will result in data loss.\n"
                        }, 
                        "url": {
                            "pattern": "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$", 
                            "type": "string", 
                            "description": "AHV sync rep uses this field to identify a dormant VM disk.\n"
                        }, 
                        "kind": {
                            "type": "string"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }, 
                        "name": {
                            "readOnly": true, 
                            "type": "string"
                        }
                    }
                }, 
                "disk_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB -  when that field is present.\n", 
                    "format": "int32"
                }, 
                "volume_group_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "VirtualMachine Disk (VM Disk)"
        }, 
        "external_repository": {
            "description": "External repository creation / modification specification. An external repository models a storage system outside an AOS cluster. Properties configured in individual instances of this type enable an AOS cluster to authenticate and access resources such as the virtual disks stored in these external repositories.\n", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the external repository.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/external_repository_resources"
                }
            }, 
            "title": "External repository definition"
        }, 
        "ssh_user_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ssh_user list"
        }, 
        "blueprint_marketplace_launch_response": {
            "description": "Response containing the uuid of the newly created app blueprint object", 
            "required": [
                "api_version", 
                "metadata", 
                "status", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_response_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Response containing the uuid of the newly created app blueprint object"
        }, 
        "volume_group_snapshot_list_intent_response": {
            "description": "Response object for intentful operation of volume_group_snapshots", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/volume_group_snapshot_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_snapshot_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blueprint_marketplace_launch_response_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "app_blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "AppBlueprint uuid.", 
                    "format": "UUID"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description for the marketplace item"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources_def_status"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "app_action_response_download": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for action"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_response_download"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Action for Application"
        }, 
        "image_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "x-ntnx-enum": [
                        "image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for image list output"
        }, 
        "volume_group_snapshot_intent_input": {
            "description": "An intentful representation of a volume_group_snapshot", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/volume_group_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_snapshot_metadata"
                }
            }, 
            "title": "volume_group_snapshot Intent Entity"
        }, 
        "app_cost_response": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "interval", 
                "value", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Cost for Application"
        }, 
        "blueprint_launch_input": {
            "description": "Launch Blueprint request.", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Launch Blueprint request."
        }, 
        "hypervisor_server": {
            "description": "Hypervisor server information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "version": {
                    "type": "string"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VMWARE", 
                        "XEN", 
                        "AHV", 
                        "HYPERV"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Hypervisor Server"
        }, 
        "remote_syslog_server_metadata": {
            "description": "The remote_syslog_server kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_server was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_syslog_server uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_server was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_server. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_server. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_syslog_server name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_syslog_server metadata"
        }, 
        "versions": {
            "description": "Supported API Versions", 
            "required": [
                "major_version", 
                "minor_version"
            ], 
            "type": "object", 
            "properties": {
                "major_version": {
                    "type": "string", 
                    "description": "The major number of the API", 
                    "format": "integer"
                }, 
                "minor_version": {
                    "type": "string", 
                    "description": "The minor number of the API", 
                    "format": "integer"
                }
            }, 
            "title": "Versions"
        }, 
        "permission_metadata": {
            "description": "The permission kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when permission was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "permission uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when permission was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the permission. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the permission. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "permission name", 
                    "maxLength": 80
                }
            }, 
            "title": "permission metadata"
        }, 
        "permission_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_package_element": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package element for Application"
        }, 
        "scope_filter_expression": {
            "description": "The Scope filter expression is a combination of LHS-Operator-RHS. This type of filter expression helps express the \"Context\" part of a Filter. Example1 - To express a context = Belonging to Project P1 or Project P2\n  left_hand_side = PROJECT\n  operator = IN\n  right_hand_side = [\"P1\", \"P2\"]\nExample2 - To express Belonging to 2 categories\n  left_hand_side = CATEGORY\n  operator = IN_ALL\n  right_hand_side = [\"location:nyc\", \"env:prod\"]\n", 
            "required": [
                "left_hand_side", 
                "operator", 
                "right_hand_side"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "x-ntnx-enum": [
                        "IN", 
                        "IN_ALL", 
                        "NOT_IN"
                    ], 
                    "type": "string", 
                    "description": "The operator of the filter expression."
                }, 
                "right_hand_side": {
                    "description": "The Right hand side(RHS) of the scope filter expression.", 
                    "$ref": "#/definitions/scope_right_hand_side"
                }, 
                "left_hand_side": {
                    "x-ntnx-enum": [
                        "CATEGORY", 
                        "PROJECT", 
                        "CLUSTER"
                    ], 
                    "type": "string", 
                    "description": "The LHS of the filter expression - the scope type."
                }
            }, 
            "title": "Scope Filter Expression."
        }, 
        "oauth_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "x-ntnx-enum": [
                        "oauth"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for oauth list output"
        }, 
        "oauth_reference": {
            "description": "The reference to a oauth", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a oauth"
        }, 
        "cluster_intent_input": {
            "description": "An intentful representation of a cluster", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Entity"
        }, 
        "network_function_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "x-ntnx-enum": [
                        "network_function"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_function list output"
        }, 
        "resource_domain_spec": {
            "description": "Resource domain specification (limits)", 
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/resource_utilization_spec"
                    }, 
                    "type": "array", 
                    "description": "The utilization limits for resource types"
                }
            }, 
            "title": "Resource Domain Spec"
        }, 
        "pemkey_spec": {
            "description": "SSL key", 
            "required": [
                "type", 
                "key", 
                "cert"
            ], 
            "type": "object", 
            "properties": {
                "ca_chain": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "type": {
                    "$ref": "#/definitions/ssl_key_type"
                }, 
                "cert": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "key": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }
            }, 
            "title": "SSL key"
        }, 
        "blueprint_upload_output": {
            "description": "The UUID of the newly created AppBlueprint", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "uuid of the newly created AppBlueprint", 
                    "format": "UUID"
                }
            }, 
            "title": "Upload AppBlueprint output"
        }, 
        "disk_storage_config": {
            "description": "This preference specifies the storage configuration parameters for VM disks.\n", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "description": "State of the storage policy to pin this virtual disk to the hot tier.\nIt overrides the VM preference when Flash Mode is enabled on the VM\nof this virtual disk.\n", 
                    "$ref": "#/definitions/flash_mode"
                }, 
                "storage_container_reference": {
                    "description": "This reference is for disk level storage container preference. This preference specifies the storage container to which this disk belongs.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Disk Storage Configuration"
        }, 
        "reference": {
            "description": "Reference to a kind. Either one of (kind, uuid) or url needs to be specified.\n", 
            "type": "object", 
            "properties": {
                "url": {
                    "pattern": "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$", 
                    "type": "string", 
                    "description": "GET query on the URL will provide information on the source.\n"
                }, 
                "kind": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }
            }, 
            "title": "Reference"
        }, 
        "remote_connection_metadata": {
            "description": "The remote_connection kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_connection was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_connection uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_connection was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_connection. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_connection. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_connection name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_connection metadata"
        }, 
        "app_package_input_upload": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference_upload"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "docker_registry_image_tag": {
            "description": "Docker Hub tagged image", 
            "required": [
                "name", 
                "size_mib", 
                "modified_date"
            ], 
            "type": "object", 
            "properties": {
                "modified_date": {
                    "type": "string", 
                    "description": "Last modified date in RFC 3339", 
                    "format": "date-time"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Image tag name", 
                    "maxLength": 64
                }, 
                "size_mib": {
                    "type": "integer", 
                    "description": "Size of the image in MiB", 
                    "format": "int64"
                }
            }, 
            "title": "Docker Hub tagged image"
        }, 
        "app_substrate_readiness_probe": {
            "description": "Readiness probe for substrate", 
            "type": "object", 
            "properties": {
                "connection_type": {
                    "x-ntnx-enum": [
                        "SSH", 
                        "POWERSHELL"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "connection_port": {
                    "default": 22, 
                    "type": "integer", 
                    "description": ""
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": ""
                }, 
                "address": {
                    "type": "string", 
                    "description": ""
                }, 
                "delay_secs": {
                    "type": "string", 
                    "description": "Delay after substrate provision."
                }, 
                "disable_readiness_probe": {
                    "type": "boolean", 
                    "description": ""
                }, 
                "login_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }
            }, 
            "title": "Readiness probe for substrate"
        }, 
        "access_control_policy_detail": {
            "description": "Details of Access Control Policy.", 
            "type": "object", 
            "properties": {
                "role": {
                    "description": "The Role being assigned to the user.", 
                    "$ref": "#/definitions/role"
                }, 
                "filter_list": {
                    "description": "The list of filters, which define the entities.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "context_list"
                            ]
                        }
                    ], 
                    "properties": {
                        "context_list": {
                            "items": {
                                "$ref": "#/definitions/filter"
                            }, 
                            "type": "array", 
                            "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                        }
                    }
                }
            }, 
            "title": "Details of Access Control Policy."
        }, 
        "file_item_list_intent_response": {
            "description": "Response object for intentful operation of file_items", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/file_item_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_upload_custom_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "app_runbook_response_download": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference_upload"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "role_def_status": {
            "description": "Role status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the role entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Role name."
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "permission_reference_list": {
                            "items": {
                                "$ref": "#/definitions/permission_reference"
                            }, 
                            "type": "array", 
                            "description": "List of permission entities."
                        }
                    }, 
                    "title": "Role Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the role."
                }
            }, 
            "title": "Role status definition."
        }, 
        "vm_disk_output_status": {
            "description": "VirtualMachine Disk (VM Disk).", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }, 
                "is_migration_in_progress": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Indicated if the disk is undergoing migration to another container or not.\n"
                }, 
                "disk_size_bytes": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_config": {
                    "description": "Storage configuration for disks.", 
                    "$ref": "#/definitions/disk_storage_config"
                }, 
                "device_properties": {
                    "type": "object", 
                    "properties": {
                        "device_type": {
                            "default": "DISK", 
                            "x-ntnx-enum": [
                                "DISK", 
                                "CDROM", 
                                "VOLUME_GROUP"
                            ], 
                            "type": "string"
                        }, 
                        "disk_address": {
                            "$ref": "#/definitions/disk_address"
                        }
                    }
                }, 
                "data_source_reference": {
                    "type": "object", 
                    "properties": {
                        "is_direct_attach": {
                            "type": "boolean", 
                            "description": "This is to indicate if attaching the referenced disk directly. Important: this should only be used by internal services. Direct attaching a disk that is used by another VM will result in data loss.\n"
                        }, 
                        "url": {
                            "pattern": "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$", 
                            "type": "string", 
                            "description": "AHV sync rep uses this field to identify a dormant VM disk.\n"
                        }, 
                        "kind": {
                            "type": "string"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }, 
                        "name": {
                            "type": "string"
                        }
                    }
                }, 
                "disk_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB -  when that field is present.\n", 
                    "format": "int32"
                }, 
                "volume_group_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "VirtualMachine Disk (VM Disk)"
        }, 
        "attachment_reference_input": {
            "properties": {
                "iscsi_initiator_network_id": {
                    "type": "string", 
                    "description": "Ip address of the external client."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "Client secret for CHAP authentication."
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }, 
                "iscsi_initiator_name": {
                    "type": "string", 
                    "description": "Name of the iSCSI initiator of the workload outside Nutanix cluster.\n", 
                    "maxLength": 64
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vm_reference"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_name"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_network_id"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Attached iSCSI initiators.", 
            "title": "Attached iSCSI initiators"
        }, 
        "app_profile_input": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "App profile resource"
        }, 
        "citrix_adapter": {
            "description": "Citrix Adapter spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Citrix Adapter name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/citrix_adapter_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for citrix adapter.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Citrix Adapter spec"
        }, 
        "mh_vm_reference": {
            "description": "The reference to a mh_vm", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a mh_vm"
        }, 
        "mh_vm_intent_input": {
            "description": "An intentful representation of a mh_vm", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Entity"
        }, 
        "mh_vm_list_intent_response": {
            "description": "Response object for intentful operation of mh_vms", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/mh_vm_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "volume_group_snapshot_metadata": {
            "description": "The volume_group_snapshot kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group_snapshot was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "volume_group_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group_snapshot"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "volume_group_snapshot uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group_snapshot was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group_snapshot. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group_snapshot. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "volume_group_snapshot name", 
                    "maxLength": 80
                }
            }, 
            "title": "volume_group_snapshot metadata"
        }, 
        "user_info": {
            "description": "Access Control Policy and User status definition.", 
            "type": "object", 
            "properties": {
                "access_control_policy_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_detail"
                    }, 
                    "type": "array", 
                    "description": "The list of Access Control Policies"
                }, 
                "user_details": {
                    "items": {
                        "$ref": "#/definitions/user_details_object"
                    }, 
                    "type": "object", 
                    "description": "User details of the logged in user"
                }, 
                "user_legacy_name": {
                    "type": "string", 
                    "description": "The legacy name of the logged in user"
                }
            }, 
            "title": "Access Control Policy and User status definition."
        }, 
        "category_filter": {
            "description": "A category filter.", 
            "required": [
                "params"
            ], 
            "type": "object", 
            "properties": {
                "kind_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of kinds associated with this filter."
                }, 
                "type": {
                    "default": "CATEGORIES_MATCH_ANY", 
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of the filter being used."
                }, 
                "params": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "A list of category key and list of values."
                }
            }, 
            "title": "A category filter"
        }, 
        "environment_intent_resource": {
            "description": "Response object for intentful operations on a environment", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/environment_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Response"
        }, 
        "vm_snapshot_input": {
            "description": "Input object for the snapshot API. User can provide optional UUID of the vm_recovery_point that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "creation_time": {
                    "type": "string", 
                    "description": "The target time at which the user wishes to have a fully usable\nrecovery point. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T22:10:10Z, this represents 10 minutes and 10.10\nseconds after the 22nd hour of April 12th, 1985 in UTC. The backend\nwill generate a complete recovery point out of the closest available\npartial backend recovery point that is created on or before the\nprovided timestamp. This field is explicitly used for the realization\nsemantics for high frequency snapshotting. If this field is set, none\nof the other fields in this parameter are valid.\n", 
                    "format": "date-time"
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). If not\nset, then the recovery point never expires.\n", 
                    "format": "date-time"
                }, 
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point.", 
                    "maxLength": 64
                }, 
                "recovery_point_type": {
                    "x-ntnx-enum": [
                        "CRASH_CONSISTENT", 
                        "APPLICATION_CONSISTENT"
                    ], 
                    "type": "string", 
                    "description": "Crash consistent or Application Consistent recovery point"
                }
            }, 
            "title": "Snapshot API input"
        }, 
        "availability_zone_reference": {
            "description": "The reference to a availability_zone", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a availability_zone"
        }, 
        "webhook_list_intent_response": {
            "description": "Response object for intentful operation of webhooks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/webhook_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/webhook_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "docker_registry_intent_response": {
            "description": "Response object for intentful operations on a docker_registry", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/docker_registry_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Response"
        }, 
        "api_version": {
            "default": "3.1.0", 
            "readOnly": true, 
            "type": "string", 
            "description": "API Version of the Nutanix v3 API framework.", 
            "title": "API Version"
        }, 
        "vm_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm list output"
        }, 
        "pc_vm": {
            "description": "Prism central VM configuration.", 
            "required": [
                "vm_name", 
                "num_sockets", 
                "memory_size_bytes", 
                "data_disk_size_bytes", 
                "nic_list"
            ], 
            "type": "object", 
            "properties": {
                "vm_name": {
                    "type": "string", 
                    "description": "VM name.", 
                    "maxLength": 64
                }, 
                "data_disk_size_bytes": {
                    "type": "integer", 
                    "description": "Data disk size in bytes.", 
                    "format": "int64"
                }, 
                "dns_server_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/pc_vm_nic_configuration"
                    }, 
                    "type": "array"
                }, 
                "container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Container uuid.", 
                    "format": "UUID"
                }, 
                "num_sockets": {
                    "type": "integer", 
                    "description": "Number of sockets allocated per VM.", 
                    "format": "int64"
                }, 
                "memory_size_bytes": {
                    "minimum": 17179869184, 
                    "type": "integer", 
                    "description": "Memory in bytes.", 
                    "format": "int64"
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "VM uuid.", 
                    "format": "UUID"
                }, 
                "ntp_server_list": {
                    "items": {
                        "pattern": "^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*))$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of NTP servers."
                }
            }, 
            "title": "Prism central VM configuration"
        }, 
        "virtual_network_reference": {
            "description": "The reference to a virtual_network", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a virtual_network"
        }, 
        "vm_boot_config": {
            "description": "Indicates which device a VM should boot from.\n", 
            "type": "object", 
            "properties": {
                "boot_device_order_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "CDROM", 
                            "DISK", 
                            "NETWORK"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Indicates the order of device types in which VM should try to boot from. If boot device order is not provided the system will decide appropriate boot device order.\n"
                }, 
                "boot_device": {
                    "description": "Indicates which device a VM should boot from. Boot device takes precdence over boot device order. If both are given then specified boot device will be primary boot device and remaining devices will be assigned boot order according to boot device order field.\n", 
                    "$ref": "#/definitions/vm_boot_device"
                }, 
                "data_source_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "boot_type": {
                    "x-ntnx-enum": [
                        "UEFI", 
                        "LEGACY", 
                        "SECURE_BOOT"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether the VM should use Secure boot, UEFI boot or Legacy boot.If UEFI or Secure boot is enabled then other legacy boot options (like boot_device and boot_device_order_list) are ignored. Secure boot depends on UEFI boot, i.e. enabling Secure boot means that UEFI boot is also enabled.\n"
                }
            }, 
            "title": "VM Boot configuration"
        }, 
        "blueprint_dependency_list": {
            "description": "Depends on definition for Application.", 
            "required": [
                "getter_resource_kind", 
                "getter_resource_name", 
                "setter_resource_attr", 
                "setter_resource_kind", 
                "setter_resource_name", 
                "action_resource_kind", 
                "action_resource_name", 
                "action_name"
            ], 
            "type": "object", 
            "properties": {
                "getter_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "from_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "getter_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_attr": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_resource_kind": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Depends on Definition for Application."
        }, 
        "mh_vm_metadata": {
            "description": "The mh_vm kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when mh_vm was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "mh_vm uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when mh_vm was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the mh_vm. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the mh_vm. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "mh_vm name", 
                    "maxLength": 80
                }
            }, 
            "title": "mh_vm metadata"
        }, 
        "remote_syslog_module": {
            "description": "Remote Syslog module list creation/modification spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/remote_syslog_module_resources"
                }
            }, 
            "title": "Remote Syslog module list creation/modification spec"
        }, 
        "subnet_intent_resource": {
            "description": "Response object for intentful operations on a subnet", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Response"
        }, 
        "directory_service_list_intent_response": {
            "description": "Response object for intentful operation of directory_services", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/directory_service_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "pc_vm_nic_configuration": {
            "description": "Virtual Machine NIC.", 
            "type": "object", 
            "properties": {
                "network_configuration": {
                    "$ref": "#/definitions/network_config"
                }, 
                "ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Network IP address."
                }
            }, 
            "title": "Virtual Machine NIC"
        }, 
        "app_deployment_reference": {
            "description": "The reference to a app_deployment", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_deployment"
        }, 
        "volume_group_snapshot_reference": {
            "description": "The reference to a volume_group_snapshot", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group_snapshot"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a volume_group_snapshot"
        }, 
        "cluster_syslog_server": {
            "description": "Cluster Remote Syslog server definition.", 
            "type": "object", 
            "properties": {
                "rsyslog_server_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_server_resources"
                    }, 
                    "type": "array"
                }, 
                "cluster_version": {
                    "type": "string"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Remote Syslog server resource in prism element."
        }, 
        "oplog_usage": {
            "description": "oplog disk usage.", 
            "type": "object", 
            "properties": {
                "oplog_disk_pct": {
                    "type": "number", 
                    "description": "Oplog disk size used in percentage.", 
                    "format": "float"
                }, 
                "oplog_disk_size": {
                    "type": "integer", 
                    "description": "Size of oplog disk in bytes.", 
                    "format": "int64"
                }
            }, 
            "title": "Host oplog disk usage stats"
        }, 
        "cloud_credentials_def_status": {
            "description": "Cloud credentials configuration", 
            "required": [
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "ID to uniquely identify cloud credentials", 
                    "format": "int64"
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_credentials_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Credentials name."
                }
            }, 
            "title": "Cloud credentials Configuration"
        }, 
        "remote_connection_intent_input": {
            "description": "An intentful representation of a remote_connection", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Entity"
        }, 
        "prism_central_reference": {
            "description": "The reference to a prism_central", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a prism_central"
        }, 
        "region": {
            "description": "A region is a contiguous set of offsets.\n", 
            "type": "object", 
            "properties": {
                "length": {
                    "type": "integer", 
                    "description": "The length of the region in bytes.", 
                    "format": "int64"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "ZEROED", 
                        "REGULAR"
                    ], 
                    "type": "string", 
                    "description": "The type of the region."
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "The byte offset indicating the start of the region.", 
                    "format": "int64"
                }
            }, 
            "title": "Region"
        }, 
        "vm_nic_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_nic list output"
        }, 
        "access_control_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for access_control_policy list output"
        }, 
        "policy_compliance_state": {
            "x-ntnx-enum": [
                "COMPLIANT", 
                "NON_COMPLIANT", 
                "UNKNOWN"
            ], 
            "type": "string", 
            "description": "Compliance state enum.", 
            "title": "Policy Compliance State Enum"
        }, 
        "validate_rack_config_input": {
            "description": "List of rack_config objects, which represent a group of racks.\n", 
            "type": "object", 
            "properties": {
                "rack_list": {
                    "items": {
                        "$ref": "#/definitions/rack_config"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Validate Rack Configuration Input"
        }, 
        "oauth_token": {
            "description": "Oauth token information", 
            "required": [
                "access_token", 
                "token_type", 
                "expires_in", 
                "refresh_token", 
                "scopes"
            ], 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "access_token to be used for accessing gateway"
                }, 
                "token_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"bearer\"."
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "refresh_token which can used to get new token"
                }, 
                "scopes": {
                    "items": {
                        "type": "string", 
                        "description": "scope which the token grants"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth token"
        }, 
        "cluster_network": {
            "description": "Cluster network.", 
            "type": "object", 
            "properties": {
                "masquerading_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The cluster NAT'd or proxy IP which maps to the cluster local IP.\n"
                }, 
                "masquerading_port": {
                    "type": "integer", 
                    "description": "Port used together with masquerading_ip to connect to the cluster.\n", 
                    "format": "int32"
                }, 
                "external_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The local IP of cluster visible externally."
                }, 
                "http_proxy_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_network_entity"
                    }, 
                    "type": "array", 
                    "description": "List of proxies to connect to the service centers."
                }, 
                "smtp_server": {
                    "$ref": "#/definitions/smtp_server"
                }, 
                "ntp_server_ip_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of IP addresses or FQDNs of the NTP servers."
                }, 
                "external_subnet": {
                    "default": "172.16.0.0/255.240.0.0", 
                    "type": "string", 
                    "description": "External subnet for cross server communication. The format is\nIP/netmask.\n"
                }, 
                "nfs_subnet_whitelist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Comma separated list of subnets (of the form 'a.b.c.d/l.m.n.o') that\nare allowed to send NFS requests to this container. If not specified,\nthe global NFS whitelist will be looked up for access permission.\nThe internal subnet is always automatically considered part of the\nwhitelist, even if the field below does not explicitly specify it.\nSimilarly, all the hypervisor IPs are considered part of the\nwhitelist. Finally, to permit debugging, all of the SVMs local IPs\nare considered to be implicitly part of the whitelist.\n"
                }, 
                "external_data_services_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The cluster IP address that provides external entities access to\nvarious cluster data services.\n"
                }, 
                "domain_server": {
                    "$ref": "#/definitions/cluster_domain_server"
                }, 
                "fully_qualified_domain_name": {
                    "type": "string", 
                    "description": "fully qualified domain name of the cluster visible externally."
                }, 
                "name_server_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of IP addresses of the name servers."
                }, 
                "http_proxy_whitelist": {
                    "items": {
                        "$ref": "#/definitions/http_proxy_whitelist"
                    }, 
                    "type": "array", 
                    "description": "HTTP proxy whitelist."
                }, 
                "internal_subnet": {
                    "default": "192.168.5.0/255.255.255.0", 
                    "type": "string", 
                    "description": "The internal subnet is local to every server - its not visible\noutside.iSCSI requests generated internally within the appliance\n(by user VMs or VMFS) are sent to the internal subnet. The format is\nIP/netmask.\n"
                }, 
                "default_vswitch_config": {
                    "description": "Configuration for the default vswitch (br0) present on all nodes of\nthis cluster. This is considered internal only and is not supported\non this version of AOS.\n", 
                    "$ref": "#/definitions/vswitch_config"
                }
            }, 
            "title": "Cluster Network Configuration"
        }, 
        "task_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "category_query_input": {
            "description": "Categories query input object.", 
            "type": "object", 
            "properties": {
                "usage_type": {
                    "$ref": "#/definitions/category_query_usage_type"
                }, 
                "group_member_offset": {
                    "type": "integer", 
                    "description": "The offset into the total member set to return per group.", 
                    "format": "int64"
                }, 
                "group_member_count": {
                    "type": "integer", 
                    "description": "The maximum number of members to return per group.", 
                    "format": "int64"
                }, 
                "category_filter": {
                    "$ref": "#/definitions/category_filter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Category Query Input"
        }, 
        "ssh_user_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ssh_user list output"
        }, 
        "support_case_upload_intent_input": {
            "description": "An intentful representation of a support_case_upload", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/support_case_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_upload_metadata"
                }
            }, 
            "title": "support_case_upload Intent Entity"
        }, 
        "resource_domain_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for resource_domain list output"
        }, 
        "user_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "x-ntnx-enum": [
                        "user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for user list"
        }, 
        "cluster_config": {
            "description": "Cluster Configuration.", 
            "type": "object", 
            "properties": {
                "gpu_driver_version": {
                    "type": "string", 
                    "description": "GPU driver version."
                }, 
                "client_auth": {
                    "$ref": "#/definitions/client_auth"
                }, 
                "authorized_public_key_list": {
                    "items": {
                        "$ref": "#/definitions/public_key"
                    }, 
                    "type": "array", 
                    "description": "List of valid ssh keys for the cluster."
                }, 
                "software_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/cluster_software"
                    }, 
                    "type": "object", 
                    "description": "Map of software on the cluster with software type as the\nkey.\n"
                }, 
                "encryption_status": {
                    "$ref": "#/definitions/encryption_status"
                }, 
                "ssl_key": {
                    "readOnly": true, 
                    "$ref": "#/definitions/ssl_key"
                }, 
                "service_list": {
                    "readOnly": true, 
                    "$ref": "#/definitions/cluster_service_list"
                }, 
                "supported_information_verbosity": {
                    "default": "BASIC_PLUS_CORE_DUMP", 
                    "x-ntnx-enum": [
                        "NOTHING", 
                        "BASIC", 
                        "BASIC_PLUS_CORE_DUMP", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "Verbosity level settings for populating support information.\n- 'Nothing': Send nothing\n- 'Basic': Send basic information - skip core dump and hypervisor\n           stats information\n- 'BasicPlusCoreDump': Send basic and core dump information\n- 'All': Send all information\n"
                }, 
                "certification_signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "redundancy_factor": {
                    "type": "integer", 
                    "description": "Cluster supported redundancy factor.", 
                    "format": "int32"
                }, 
                "external_configurations": {
                    "description": "External Connector Configurations.", 
                    "$ref": "#/definitions/external_configurations"
                }, 
                "operation_mode": {
                    "$ref": "#/definitions/cluster_operation_mode"
                }, 
                "ca_certificate_list": {
                    "items": {
                        "$ref": "#/definitions/ca_cert"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "List of cluster trusted CA certificates."
                }, 
                "domain_awareness_level": {
                    "default": "NODE", 
                    "x-ntnx-enum": [
                        "DISK", 
                        "NODE", 
                        "BLOCK", 
                        "RACK"
                    ], 
                    "type": "string", 
                    "description": "Domain awareness supported on cluster."
                }, 
                "enabled_feature_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "LOCK_DOWN_ENABLED", 
                            "PASSWORD_REMOTE_LOGIN_ENABLED", 
                            "SHADOW_CLONES_ENABLED", 
                            "COMMON_CRITERIA_MODE_ENABLED", 
                            "SSP_CONFIGURED", 
                            "ACS_ENABLED", 
                            "NETWORK_FLOW_STATS_COLLECTOR_ENABLED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of enabled features."
                }, 
                "is_available": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Indicates if cluster is available to contact."
                }, 
                "build": {
                    "readOnly": true, 
                    "$ref": "#/definitions/build_info"
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "Zone name used in value of TZ environment variable."
                }, 
                "enable_efficient_metric_sync": {
                    "type": "boolean", 
                    "description": "Indicates if downsampling of metrics syncing between PE\nand PC is enabled or not.\n"
                }, 
                "cluster_arch": {
                    "readOnly": true, 
                    "type": "string", 
                    "x-ntnx-enum": [
                        "X86_64", 
                        "PPC64LE"
                    ], 
                    "description": "Cluster architecture."
                }, 
                "management_server_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_management_server"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "List of cluster management servers."
                }
            }, 
            "title": "Cluster Configuration"
        }, 
        "category_key_status": {
            "description": "Category Key Definition.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "capabilities": {
                    "$ref": "#/definitions/capabilities"
                }, 
                "system_defined": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Specifying whether its a system defined category."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category.", 
                    "maxLength": 1000
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category.", 
                    "maxLength": 64
                }
            }, 
            "title": "Category Key Definition."
        }, 
        "app_task_input": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "cluster_def_status": {
            "description": "Cluster status definition.  A Nutanix cluster is comprised of three or\nmore Nutanix nodes. Each node in the cluster contains memory, CPU, RAM,\nand storage (SSD/HDD). Each node in the cluster runs standard hypervisor\nsuch as VMware vSphere, Microsoft Hyper-V, or AHV. A Controller VM (CVM)\nruns on each node in the cluster. The CVM enables each node to share\nlocal storage from all nodes in the cluster.\n", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the cluster entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Cluster Name."
                }, 
                "resources": {
                    "required": [
                        "config", 
                        "network"
                    ], 
                    "type": "object", 
                    "description": "Cluster resources.", 
                    "properties": {
                        "nodes": {
                            "$ref": "#/definitions/cluster_nodes"
                        }, 
                        "config": {
                            "$ref": "#/definitions/cluster_config"
                        }, 
                        "network": {
                            "$ref": "#/definitions/cluster_network"
                        }, 
                        "runtime_status_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "UPGRADE_QUEUED", 
                                    "UPGRADE_CANCELLED", 
                                    "UPGRADE_IN_PROGRESS", 
                                    "UPGRADE_SCHEDULED", 
                                    "HAVE_SELF_ENCRYPTING_DRIVE", 
                                    "SSP_CONFIG_OWNER"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Cluster current attributes and onging operations."
                        }
                    }
                }
            }, 
            "title": "Cluster Status"
        }, 
        "vm_update_ip_input": {
            "description": "Input object for the API to update IP addresses. Users can provide the specific IP address they want to request.\n", 
            "type": "object", 
            "properties": {
                "update_list": {
                    "items": {
                        "$ref": "#/definitions/nic_update_ip_info"
                    }, 
                    "type": "array", 
                    "description": "List of NICs to update new IP for."
                }
            }, 
            "title": "VM update IP input."
        }, 
        "blueprint_pending_launches_status": {
            "description": "Response containing state, milestone reached and application uuid", 
            "type": "object", 
            "properties": {
                "application_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "application uuid present after the status moves to success", 
                    "format": "UUID"
                }, 
                "app_name": {
                    "type": "string", 
                    "description": "name of the application"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Status of the launch"
                }, 
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "details": {
                    "type": "string", 
                    "description": "additional details about the status of launch"
                }, 
                "milestone": {
                    "type": "string", 
                    "description": "gives more granularity in status"
                }, 
                "bp_name": {
                    "type": "string", 
                    "description": "name of the blueprint"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }
            }, 
            "title": "Status of the launch"
        }, 
        "cluster_intent_response": {
            "description": "Response object for intentful operations on a cluster", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cluster_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Response"
        }, 
        "vm_gpu_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_gpu list"
        }, 
        "vm_gpu": {
            "description": "Graphics resource information for the Virtual Machine.", 
            "type": "object", 
            "properties": {
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The mode of this GPU."
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }
            }, 
            "title": "VirtualMachine GPU"
        }, 
        "disk_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "x-ntnx-enum": [
                        "disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for disk list output"
        }, 
        "changed_regions_query": {
            "description": "Instances of this type are used to specify the input for the changed regions query.\n", 
            "required": [
                "snapshot_file_path"
            ], 
            "type": "object", 
            "properties": {
                "end_offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "The absolute offset in bytes up to which to query for the changed regions. Note that the interval specified by the start_offset together with the end_offset is right half-open. If the end_offset is not specified, the portion from the start_offset till the end of the file will be included in the query.\n", 
                    "format": "int64"
                }, 
                "reference_snapshot_file_path": {
                    "type": "string", 
                    "description": "Absolute path of a file within a snapshot that must be used as the reference in the computation of the changed regions. If this path is not specified, then the changed regions will not be computed. Instead, the sparse and the non-sparse regions of the file specified in snapshot_file_path will be returned.\n"
                }, 
                "start_offset": {
                    "default": 0, 
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "The absolute offset in bytes from where to query for the changed regions.\n", 
                    "format": "int64"
                }, 
                "snapshot_file_path": {
                    "type": "string", 
                    "description": "Absolute path of a file within a snapshot of an entity such as a virtual machine, a volume group or a protection domain.\n"
                }
            }, 
            "title": "Changed Regions Query"
        }, 
        "category_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "x-ntnx-enum": [
                        "category"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for category list output"
        }, 
        "docker_registry_def_status": {
            "description": "Docker registry", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the docker registry"
                }, 
                "resources": {
                    "$ref": "#/definitions/docker_registry_resources"
                }
            }, 
            "title": "Docker Registry"
        }, 
        "image_list_intent_response": {
            "description": "Response object for intentful operation of images", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/image_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "mh_vm_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for mh_vm list"
        }, 
        "app_cost_response_download": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "type", 
                "interval", 
                "value", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Cost for Application"
        }, 
        "cloud_credentials_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "environment_resources": {
            "description": "Resources for Environment.", 
            "type": "object", 
            "properties": {
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Environment."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Environment."
                }
            }, 
            "title": "Resources for Environment."
        }, 
        "cluster_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "external_repository_intent_resource": {
            "description": "Response object for intentful operations on a external_repository", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/external_repository_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/external_repository"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/external_repository_metadata"
                }
            }, 
            "title": "external_repository Intent Response"
        }, 
        "prism_central_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for prism_central list"
        }, 
        "rack_list_intent_response": {
            "description": "Response object for intentful operation of racks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/rack_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cloud_credentials_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cloud_credentials list output"
        }, 
        "image_placement_policy_resources_def_status": {
            "description": "Describes the status of the image policy object", 
            "type": "object", 
            "properties": {
                "cluster_entity_filter": {
                    "description": "Category list for filtering clsuters", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "image_entity_filter": {
                    "description": "Category list for filtering images", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "placement_type": {
                    "x-ntnx-enum": [
                        "AT_LEAST", 
                        "EXACTLY"
                    ], 
                    "type": "string", 
                    "description": "Describes the image placement semantic"
                }
            }, 
            "title": "Image placement policy status resources"
        }, 
        "resource_domain_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for resource_domain list"
        }, 
        "project_intent_resource": {
            "description": "Response object for intentful operations on a project", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/project_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Response"
        }, 
        "category_key": {
            "description": "Category key definition.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category.", 
                    "maxLength": 1000
                }, 
                "capabilities": {
                    "$ref": "#/definitions/capabilities"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category.", 
                    "maxLength": 64
                }
            }, 
            "title": "Category Key definition."
        }, 
        "entity_reference": {
            "description": "Reference to an entity.", 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string", 
                    "description": "Kind of the reference."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of filter being used."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the entity.", 
                    "format": "UUID"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the entity."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the entity.", 
                    "maxLength": 64
                }
            }, 
            "title": "Entity Reference."
        }, 
        "cloud_credentials_intent_response": {
            "description": "Response object for intentful operations on a cloud_credentials", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_credentials_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Response"
        }, 
        "groups_bucket_summary_map": {
            "additionalProperties": {
                "type": "integer", 
                "format": "int64"
            }, 
            "type": "object", 
            "description": "Group Bucket Summary Map.", 
            "title": "Group Buckets Summary Map"
        }, 
        "remote_connection_intent_resource": {
            "description": "Response object for intentful operations on a remote_connection", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Response"
        }, 
        "tenant_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "x-ntnx-enum": [
                        "tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for tenant list output"
        }, 
        "external_configurations": {
            "description": "External configurations for the connectors.", 
            "type": "object", 
            "properties": {
                "citrix_connector_config": {
                    "$ref": "#/definitions/citrix_connector_config_details"
                }
            }, 
            "title": "External Connector Configurations."
        }, 
        "citrix_adapter_intent_input": {
            "description": "An intentful representation of a citrix_adapter", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/citrix_adapter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/citrix_adapter_metadata"
                }
            }, 
            "title": "citrix_adapter Intent Entity"
        }, 
        "vm_vnuma_config": {
            "description": "Indicates how VM vNUMA should be configured\n", 
            "type": "object", 
            "properties": {
                "num_vnuma_nodes": {
                    "type": "integer", 
                    "description": "Number of vNUMA nodes. 0 means vNUMA is disabled.", 
                    "format": "int64"
                }
            }, 
            "title": "VM vNUMA configuration"
        }, 
        "user_group_input_resource": {
            "properties": {
                "directory_service_user_group": {
                    "$ref": "#/definitions/directory_service_user_group_input"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "directory_service_user_group"
                    ]
                }
            ], 
            "type": "object", 
            "description": "User Group Resource Definition", 
            "title": "user group resource definition."
        }, 
        "rack_metadata": {
            "description": "The rack kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rack was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "rack uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rack was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rack. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rack. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "rack name", 
                    "maxLength": 80
                }
            }, 
            "title": "rack metadata"
        }, 
        "nic_update_ip_info": {
            "description": "Parameters when requesting IP address for a NIC.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "If specified, try to request this IP address. Otherwise request any IP address from the network pool.\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the NIC whose IP is being requested.", 
                    "format": "UUID"
                }
            }, 
            "title": "NIC update IP Info."
        }, 
        "host_reference": {
            "description": "The reference to a host", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a host"
        }, 
        "directory_service_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for directory_service list"
        }, 
        "cluster_nodes": {
            "description": "Node info for this cluster.", 
            "type": "object", 
            "properties": {
                "hypervisor_server_list": {
                    "items": {
                        "$ref": "#/definitions/hypervisor_server"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }
            }, 
            "title": "Cluster Nodes"
        }, 
        "ip_subnet_status": {
            "description": "IP subnet provided as an address and prefix length.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "prefix_length": {
                    "type": "integer", 
                    "format": "int32"
                }
            }, 
            "title": "IP subnet."
        }, 
        "groups_requested_attribute": {
            "description": "An attribute that has been requested to be returned in the response.\n", 
            "required": [
                "attribute"
            ], 
            "type": "object", 
            "properties": {
                "attribute": {
                    "type": "string"
                }, 
                "operation": {
                    "$ref": "#/definitions/groups_aggregation_function"
                }, 
                "ancestor_entity_type": {
                    "type": "string"
                }
            }, 
            "title": "Entities Request Attribute"
        }, 
        "cluster_reference": {
            "description": "The reference to a cluster", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cluster"
        }, 
        "citrix_adapter_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "citrix_adapter", 
                    "x-ntnx-enum": [
                        "citrix_adapter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for citrix_adapter list"
        }, 
        "cluster_syslog_server_list": {
            "description": "List of clusters registered to PC and their rsyslog servers.", 
            "type": "object", 
            "properties": {
                "pe_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_syslog_server"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "List of clusters registered to PC and their rsyslog servers."
        }, 
        "ssh_user_list_intent_response": {
            "description": "Response object for intentful operation of ssh_users", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ssh_user_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "remote_connection_token": {
            "description": "Token information for communicating with remote peer", 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "Access token"
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "Client Secret"
                }, 
                "refresh_token_endpoint": {
                    "type": "string", 
                    "description": "Refresh token endpoint"
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "Client Id"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "Refresh token"
                }
            }, 
            "title": "Token info"
        }, 
        "ncc_tag": {
            "description": "NCC Tag.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "NCC tag name."
                }, 
                "description": {
                    "type": "string", 
                    "description": "NCC tag description."
                }
            }, 
            "title": "NCC Tag"
        }, 
        "hypervisor": {
            "description": "Host Hypervisor information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "num_vms": {
                    "type": "integer", 
                    "description": "Num of VMs running on this Host.", 
                    "format": "int64"
                }, 
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Hypervisor IP."
                }, 
                "hypervisor_full_name": {
                    "type": "string", 
                    "description": "Full name of hypervisor running on Host."
                }
            }, 
            "title": "Hypervisor Info"
        }, 
        "oauth_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "x-ntnx-enum": [
                        "oauth"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for oauth list"
        }, 
        "prism_central_enable_cmsp_status": {
            "description": "Prism central CMSP enablement status definition.", 
            "required": [
                "task_uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of created task to enable MSP.", 
                    "format": "UUID"
                }
            }, 
            "title": "Prism central CMSP enablement status."
        }, 
        "role_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "x-ntnx-enum": [
                        "role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for role list"
        }, 
        "image_placement_policy_reference": {
            "description": "The reference to a image_placement_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image_placement_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a image_placement_policy"
        }, 
        "blueprint_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for blueprint list output"
        }, 
        "directory_service_intent_response": {
            "description": "Response object for intentful operations on a directory_service", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/directory_service_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Response"
        }, 
        "prism_central": {
            "description": "Prism central deployment definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "required": [
                        "version", 
                        "pc_vm_list"
                    ], 
                    "type": "object", 
                    "description": "Prism central deployment resources.", 
                    "properties": {
                        "should_auto_register": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "Indicates if the new prism central should be automatically register to the cluster.\n"
                        }, 
                        "initial_password": {
                            "minLength": 1, 
                            "maxLength": 50, 
                            "type": "string", 
                            "description": "Initial boot up password for new created Prism Central.", 
                            "format": "password"
                        }, 
                        "cmsp_config": {
                            "$ref": "#/definitions/cmsp_config"
                        }, 
                        "pc_vm_list": {
                            "items": {
                                "$ref": "#/definitions/pc_vm"
                            }, 
                            "type": "array"
                        }, 
                        "version": {
                            "type": "string", 
                            "description": "The desired version of Prism Central."
                        }, 
                        "virtual_ip": {
                            "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                            "type": "string", 
                            "description": "The desired virtual IP address of Prism Central cluster.\n"
                        }, 
                        "cluster_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "The Cluster UUID for the Prism Central Deployment.", 
                            "format": "UUID"
                        }
                    }
                }
            }, 
            "title": "Prism Central"
        }, 
        "vm_disk_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_disk list output"
        }, 
        "vm": {
            "description": "An intentful representation of a vm spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vm.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/vm_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "vm Intent Spec with placement specified"
        }, 
        "image_version_resources": {
            "description": "The image version, which is composed of a product name and product version.\n", 
            "required": [
                "product_name", 
                "product_version"
            ], 
            "type": "object", 
            "properties": {
                "product_version": {
                    "type": "string", 
                    "description": "Version string for the disk image.", 
                    "maxLength": 64
                }, 
                "product_name": {
                    "type": "string", 
                    "description": "Name of the producer/distribution of the image. For example windows or red hat.\n", 
                    "maxLength": 64
                }
            }, 
            "title": "Image version"
        }, 
        "cluster": {
            "description": "Cluster Definition.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Cluster Name."
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Cluster resources.", 
                    "properties": {
                        "config": {
                            "$ref": "#/definitions/cluster_config_spec"
                        }, 
                        "network": {
                            "$ref": "#/definitions/cluster_network"
                        }, 
                        "runtime_status_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "UPGRADE_QUEUED", 
                                    "UPGRADE_CANCELLED", 
                                    "UPGRADE_SCHEDULED", 
                                    "SSP_CONFIG_MIGRATED"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Cluster onging operations."
                        }
                    }
                }
            }, 
            "title": "Cluster Definition"
        }, 
        "customization_spec_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for customization_spec list"
        }, 
        "disk_list_intent_response": {
            "description": "Response object for intentful operation of disks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/disk_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "rackable_unit_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for rackable_unit list output"
        }, 
        "network_config": {
            "description": "Network Configuration for PC VM.", 
            "type": "object", 
            "properties": {
                "subnet_mask": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet mask IP address."
                }, 
                "network_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Network uuid.", 
                    "format": "UUID"
                }, 
                "default_gateway": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address."
                }
            }, 
            "title": "Network Configuration for PC VM."
        }, 
        "vm_def_status": {
            "description": "An intentful representation of a vm status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vm."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vm, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/vm_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vm."
                }
            }, 
            "title": "vm Intent Status with placement specified"
        }, 
        "app_published_service_element": {
            "description": "Published service element", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service element definition"
        }, 
        "cloud_type": {
            "x-ntnx-enum": [
                "ONPREM_CLOUD", 
                "NUTANIX_HOSTED_CLOUD", 
                "AWS", 
                "AZURE"
            ], 
            "type": "string", 
            "description": "Types of cloud.", 
            "title": "Cloud Type"
        }, 
        "custom_generic_key_value_pair": {
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "description": "Generic key value pair used for custom attributes", 
            "title": "Generic key value pair"
        }, 
        "batch_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "x-ntnx-enum": [
                        "batch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for batch list"
        }, 
        "vm_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "remote_connection": {
            "description": "Remote connection information.", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Remote connection name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/remote_connection_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Remote connection description", 
                    "maxLength": 1000
                }
            }, 
            "title": "Remote connection information"
        }, 
        "resource_domain_metadata": {
            "description": "The resource_domain kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_domain was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "resource_domain uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_domain was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_domain. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_domain. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "resource_domain name", 
                    "maxLength": 80
                }
            }, 
            "title": "resource_domain metadata"
        }, 
        "volume_group_snapshot_def_status": {
            "description": "The output object that defines a volume group snapshot.", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the volume group snapshot."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the volume group snapshot, if in an error state."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the snapshot."
                }, 
                "resources": {
                    "description": "Volume group snapshot resources.", 
                    "type": "object", 
                    "properties": {
                        "volume_group_config": {
                            "description": "Describes volume group config which is captured in the snapshot.\n", 
                            "$ref": "#/definitions/volume_group_def_status"
                        }, 
                        "snapshot_file_list": {
                            "items": {
                                "type": "object", 
                                "properties": {
                                    "volume_group_disk_uuid": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                        "type": "string", 
                                        "format": "UUID"
                                    }, 
                                    "snapshot_file_path": {
                                        "type": "string", 
                                        "description": "Path of the snapshot file of the disk.\n"
                                    }
                                }
                            }, 
                            "type": "array", 
                            "description": "Describes the files that are included in the snapshot.\n"
                        }, 
                        "expiration_time_msecs": {
                            "type": "integer", 
                            "description": "The time when this snapshot expires and will be garbage collected.\nIf not set, then the snapshot never expires.\n"
                        }, 
                        "volume_group_reference": {
                            "$ref": "#/definitions/volume_group_reference"
                        }
                    }, 
                    "title": "Volume group snapshot resources"
                }
            }, 
            "title": "Volume group snapshot output definitions"
        }, 
        "task_metadata": {
            "description": "The task kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "task uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the task. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the task. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "task name", 
                    "maxLength": 80
                }
            }, 
            "title": "task metadata"
        }, 
        "host_intent_input": {
            "description": "An intentful representation of a host", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Entity"
        }, 
        "status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "status": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"failure\"."
                }, 
                "kind": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The entitys kind. i.e. \"status\"."
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "reason": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "One snake case word."
                }, 
                "details": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Custom key-value details relevant to the status."
                }, 
                "message": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "A sentence explaining the reason for the status."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "project_intent_response": {
            "description": "Response object for intentful operations on a project", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/project_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Response"
        }, 
        "project_def_status": {
            "description": "A Project resource.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the project entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Project name."
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "resource_domain": {
                            "$ref": "#/definitions/resource_domain_resources_status"
                        }, 
                        "account_reference_list": {
                            "items": {
                                "$ref": "#/definitions/account_reference"
                            }, 
                            "type": "array", 
                            "description": "List of accounts associated with the project."
                        }, 
                        "environment_reference_list": {
                            "items": {
                                "$ref": "#/definitions/environment_reference"
                            }, 
                            "type": "array", 
                            "description": "List of environments associated with the project."
                        }, 
                        "default_subnet_reference": {
                            "description": "Optional default subnet if one is specified", 
                            "$ref": "#/definitions/subnet_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "List of users added directly to the project.\n"
                        }, 
                        "is_default": {
                            "type": "boolean", 
                            "description": "Indicates if it is the default project. A default project is\nmanaged by the system and cannot be renamed or removed.\n"
                        }, 
                        "tunnel_reference_list": {
                            "items": {
                                "$ref": "#/definitions/tunnel_reference"
                            }, 
                            "type": "array", 
                            "description": "List of tunnels associated with the project."
                        }, 
                        "external_user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory service groups reference. These\ngroups are not managed by Nutanix.\n"
                        }, 
                        "subnet_reference_list": {
                            "items": {
                                "$ref": "#/definitions/subnet_reference"
                            }, 
                            "type": "array", 
                            "description": "List of subnets for the project."
                        }, 
                        "external_network_list": {
                            "items": {
                                "$ref": "#/definitions/external_network"
                            }, 
                            "type": "array", 
                            "description": "List of external network associated with the project."
                        }, 
                        "default_environment_reference": {
                            "description": "Optional default environment if one is specified", 
                            "$ref": "#/definitions/environment_reference"
                        }
                    }, 
                    "title": "Project Resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Project description."
                }
            }, 
            "title": "Project Resource Status"
        }, 
        "user_intent_resource": {
            "description": "Response object for intentful operations on a user", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Response"
        }, 
        "remote_syslog_server_list_intent_response": {
            "description": "Response object for intentful operation of remote_syslog_servers", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_syslog_server_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "logout_response": {
            "description": "Response from logout object", 
            "type": "object", 
            "properties": {
                "external_logout_url_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of addition logout urls which should be called by UI"
                }
            }, 
            "title": "Logout response"
        }, 
        "app_task_reference": {
            "description": "The reference to a app_task", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_task"
        }, 
        "external_repository_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "external_repository", 
                    "x-ntnx-enum": [
                        "external_repository"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for external_repository list output"
        }, 
        "message_resource": {
            "description": "message.", 
            "required": [
                "message", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string", 
                    "description": "If state is ERROR, a message describing the error."
                }, 
                "reason": {
                    "x-ntnx-enum": [
                        "ACCESS_DENIED", 
                        "ACCESS_FORBIDDEN", 
                        "ACTION_NOT_SUPPORTED", 
                        "AUTHENTICATION_REQUIRED", 
                        "BEARER_TOKEN_EXPIRED", 
                        "BEARER_TOKEN_BAD_SIGNATURE", 
                        "CANNOT_MODIFY_PRE_CONFIGURED_REPORT", 
                        "CATEGORY_NAME_VALUE_MISMATCH", 
                        "CONFIGURATION_INCOMPLETE", 
                        "CONCURRENT_REQUESTS_NOT_ALLOWED", 
                        "DEFAULT_PROJECT_UNAVAILABLE", 
                        "DESERIALIZATION_FAILED", 
                        "DIRECTORY_SERVICE_CONNECTION_FAILED", 
                        "ENTITY_ALREADY_EXISTS", 
                        "ENTITY_DELETION_FAILED", 
                        "ENTITY_IS_READONLY", 
                        "ENTITY_NAME_UUID_MISMATCH", 
                        "ENTITY_NOT_CONFIGURED", 
                        "ENTITY_NOT_FOUND", 
                        "ENTITY_SAVE_ERROR", 
                        "ENTITY_UPDATE_FAILED", 
                        "IDEMPOTENCE_UUID_CREATION_FAILED", 
                        "IDP_NOT_REACHABLE", 
                        "INTERNAL_ERROR", 
                        "INVALID_ARGUMENT", 
                        "INVALID_AZ_NAME", 
                        "INVALID_CONTENT_TYPE", 
                        "INVALID_DATA_FORMAT", 
                        "INVALID_PORTAL_CONFIGURATION", 
                        "INVALID_REQUEST", 
                        "INVALID_UUID", 
                        "INVALID_OWNER_REFERENCE", 
                        "INTERNAL_AZ_PROXY_SETUP_ERROR", 
                        "INTERNAL_ERROR_REMOTE_REQUEST", 
                        "INTERNAL_ROLE_ACCESS_DENIED", 
                        "INCORRECT_EVENTS_FILTER", 
                        "MISSING_ATTRIBUTE", 
                        "MISSING_CURRENT_USER_METADATA", 
                        "NAME_NOT_IN_DOMAIN", 
                        "NO_RESPONSE_RECEIVED_FROM_PORTAL", 
                        "PE_NOT_PAIRED_WITH_PC", 
                        "PC_NOT_PAIRED_WITH_XI_PORTAL", 
                        "REFERENCE_ERROR", 
                        "RESERVED_ROLE_ACCESS_DENIED", 
                        "REQUEST_NOT_SUPPORTED", 
                        "REMOTE_CLUSTER_IP_FETCH_FAILED", 
                        "REMOTE_CLUSTER_NOT_CONNECTED", 
                        "REMOTE_CONNECTION_EXISTS", 
                        "REMOTE_CONNECTION_NOT_FOUND", 
                        "REPORT_CONFIG_NOT_FOUND", 
                        "REPORTING_RESOURCE_NOT_FOUND", 
                        "REPORTING_INTERNAL_ERROR", 
                        "SERVICE_UNAVAILABLE", 
                        "SEARCH_RESULT_PROCESSING_ERROR", 
                        "TOO_MANY_REQUESTS", 
                        "UNCONFIGURED_API_KEY", 
                        "UNCONFIGURED_PORTAL_CONNECTION", 
                        "UNSPECIFIED_EVENTS_FILTER", 
                        "UNSUPPORTED_AZ_PROXY_API", 
                        "UNSUPPORTED_MEDIA_TYPE_ERROR", 
                        "UPLOAD_TO_S3_FAILED", 
                        "VALIDATION_ERROR", 
                        "INVALID_SSL_CERTIFICATE", 
                        "ERROR_ATTACHING_FILE_TO_CASE", 
                        "SPEC_UPDATE_ERROR", 
                        "SPEC_INCOMPATIBLE_ERROR", 
                        "CLOUD_UNREACHABLE_ERROR", 
                        "INVALID_CLOUD_CREDENTIALS", 
                        "IDP_PORTAL_UNREACHABLE", 
                        "SELF_PAIRING_NOT_ALLOWED", 
                        "PAIRING_FAILED", 
                        "PAIRING_NOT_ALLOWED", 
                        "PAIRING_INITIATING_NOT_ALLOWED", 
                        "CLOUD_TRUST_EXISTS", 
                        "DUPLICATE_CLOUD_TRUST", 
                        "DUPLICATE_CLOUD_TRUST_ON_REMOTE"
                    ], 
                    "type": "string", 
                    "description": "If state is ERROR, a machine-readable snake-cased string."
                }, 
                "details": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Custom key-value details relevant to the status."
                }
            }, 
            "title": "Message."
        }, 
        "user": {
            "description": "User Input Definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/user_input_resource"
                }
            }, 
            "title": "User."
        }, 
        "vm_storage_config": {
            "description": "User inputs of storage configuration parameters for VMs.", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters to be applied on the VM.\nThe parameters are reset if the default values are passed.\n", 
                    "$ref": "#/definitions/storage_qos_policy_config_input"
                }, 
                "flash_mode": {
                    "description": "State of the storage policy to pin virtual disks of the VM to the\nhot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config input"
        }, 
        "task_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "x-ntnx-enum": [
                        "task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for task list"
        }, 
        "app_package_response": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "service_element_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "subnet_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "x-ntnx-enum": [
                        "subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for subnet list output"
        }, 
        "account_reference_upload": {
            "description": "The reference to a account", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a account"
        }, 
        "flash_mode": {
            "x-ntnx-enum": [
                "ENABLED", 
                "DISABLED"
            ], 
            "type": "string", 
            "description": "State of the storage policy to pin virtual disks to the hot tier.\nWhen specified as a VM attribute, the storage policy applies to all\nvirtual disks of the VM unless overridden by the same attribute\nspecified for a virtual disk.\n", 
            "title": "Flash Mode"
        }, 
        "task": {
            "description": "Task details.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "SUCCEEDED", 
                        "ABORTED", 
                        "SUSPENDED", 
                        "FAILED"
                    ], 
                    "type": "string", 
                    "description": "Current state of the task."
                }, 
                "last_update_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was last updated.\n", 
                    "format": "date-time"
                }, 
                "error_detail": {
                    "type": "string", 
                    "description": "In case of task failure this field will provide the error description.\n"
                }, 
                "logical_timestamp": {
                    "type": "integer", 
                    "description": "Number of times the task has been updated. The value increases sequentially with each update of the task and can be used to verify if there have been changes to the task.\n", 
                    "format": "int64"
                }, 
                "requested_status": {
                    "x-ntnx-enum": [
                        "RUNNING", 
                        "ABORTED", 
                        "SUSPENDED"
                    ], 
                    "type": "string", 
                    "description": "Final expected state of the task. It is set when the task is aborted.\n"
                }, 
                "entity_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when Task execution started.\n", 
                    "format": "date-time"
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was created.\n", 
                    "format": "date-time"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the task.", 
                    "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                    "format": "UUID"
                }, 
                "start_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when the task execution started.\n", 
                    "format": "int64"
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster the task is being executed on.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "subtask_reference_list": {
                    "items": {
                        "$ref": "#/definitions/task_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the sub-tasks."
                }, 
                "completion_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when Task execution completed.\n", 
                    "format": "date-time"
                }, 
                "creation_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when task was created.\n", 
                    "format": "int64"
                }, 
                "progress_message": {
                    "type": "string", 
                    "description": "Description of what currently the task is doing."
                }, 
                "operation_type": {
                    "type": "string", 
                    "description": "Type of the operation tracked by the task."
                }, 
                "completion_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when task execution completed.\n", 
                    "format": "int64"
                }, 
                "error_code": {
                    "type": "string", 
                    "description": "In case of task failure this field will provide the error code.\n"
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "The completion percentage for the task.", 
                    "format": "int32"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "parent_task_reference": {
                    "description": "Reference to the parent task.", 
                    "$ref": "#/definitions/task_reference"
                }
            }, 
            "title": "Task resources"
        }, 
        "build_info": {
            "description": "Cluster build details.", 
            "required": [
                "build_type", 
                "version", 
                "commit_id", 
                "short_commit_id"
            ], 
            "type": "object", 
            "properties": {
                "commit_id": {
                    "type": "string", 
                    "description": "Last Git commit id which the build is based on."
                }, 
                "full_version": {
                    "type": "string", 
                    "description": "Full version name."
                }, 
                "commit_date": {
                    "type": "string", 
                    "description": "Date/time of the last commit.", 
                    "format": "date-time"
                }, 
                "is_long_term_support": {
                    "type": "boolean", 
                    "description": "Flag to indicate if the AOS release is qualified as long term support.\n"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Numeric version. e.g. \"5.5\""
                }, 
                "short_commit_id": {
                    "type": "string", 
                    "description": "First 6 characters of the last Git commit id."
                }, 
                "build_type": {
                    "type": "string", 
                    "description": "Build type, one of {dbg, opt, release}."
                }
            }, 
            "title": "Cluster build details"
        }, 
        "webhook_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "webhook", 
                    "x-ntnx-enum": [
                        "webhook"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for webhook list"
        }, 
        "app_credential_reference_upload": {
            "description": "The reference to a app_credential", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_credential", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_credential"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_credential"
        }, 
        "directory_service_reference": {
            "description": "The reference to a directory_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a directory_service"
        }, 
        "ipfix_exporter_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "open_ldap_configuration_def_status": {
            "description": "Configuration for OpenLDAP directory service.", 
            "required": [
                "user_configuration", 
                "user_group_configuration"
            ], 
            "type": "object", 
            "properties": {
                "user_configuration": {
                    "required": [
                        "user_object_class", 
                        "user_search_base", 
                        "username_attribute"
                    ], 
                    "type": "object", 
                    "properties": {
                        "user_search_base": {
                            "type": "string", 
                            "description": "The base DN for user search."
                        }, 
                        "user_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to users.\n"
                        }, 
                        "username_attribute": {
                            "type": "string", 
                            "description": "Unique identifier for each user which can be used in authentication.\n"
                        }
                    }
                }, 
                "user_group_configuration": {
                    "required": [
                        "group_object_class", 
                        "group_search_base", 
                        "group_member_attribute", 
                        "group_member_attribute_value"
                    ], 
                    "type": "object", 
                    "properties": {
                        "group_search_base": {
                            "type": "string", 
                            "description": "The base DN for group search.\n"
                        }, 
                        "group_member_attribute": {
                            "type": "string", 
                            "description": "The attribute in a group that associates users to the group.\n"
                        }, 
                        "group_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to groups.\n"
                        }, 
                        "group_member_attribute_value": {
                            "type": "string", 
                            "description": "The user attribute value that will be used in group entity to associate user to the group.\n"
                        }
                    }
                }
            }, 
            "title": "OpenLDAP Configuration."
        }, 
        "mh_vm_storage_config": {
            "description": "User inputs of different storage parameters", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters to be applied on the VM.\nThe parameters are reset if the default values are passed.\n", 
                    "$ref": "#/definitions/storage_qos_policy_config_input"
                }, 
                "flash_mode": {
                    "description": "State of the storage policy to pin virtual disks of the VM to the\nhot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config input"
        }, 
        "changed_regions_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "user_group_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "x-ntnx-enum": [
                        "user_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for user_group list output"
        }, 
        "idempotence_identifiers_response": {
            "description": "Idempotence identifier status definition.", 
            "required": [
                "count", 
                "uuid_list"
            ], 
            "type": "object", 
            "properties": {
                "client_identifier": {
                    "type": "string", 
                    "description": "The client identifier string."
                }, 
                "count": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "The number of idempotence identifiers provided."
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format of the expiration time (with reference to system time). Value is creation time + valid_duration", 
                    "format": "date-time"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "description": "UUID to identify the relationship <to be updated>", 
                        "format": "UUID"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Idempotence identifier status definition."
        }, 
        "changed_regions": {
            "description": "Returns information about all the regions that have changed in the interval [start_offset, next_offset).\n", 
            "type": "object", 
            "properties": {
                "region_list": {
                    "items": {
                        "$ref": "#/definitions/region"
                    }, 
                    "type": "array", 
                    "description": "List of regions describing the change for the interval [start_offset, next_offset).\n"
                }, 
                "next_offset": {
                    "type": "integer", 
                    "description": "The offset from where the client must continue the request. This field will not be set when there are no more changed regions to be returned. Note that the next_offset can be outside the endOffset specified by the client in the request. This helps clients reach the next changed offset faster.\n", 
                    "format": "int64"
                }, 
                "file_size": {
                    "type": "integer", 
                    "description": "Size of the file specified by snapshot_file_path.", 
                    "format": "int64"
                }
            }, 
            "title": "Changed regions"
        }, 
        "task_poll_response": {
            "description": "Response from a task poll request", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/task"
                    }, 
                    "type": "array"
                }, 
                "has_poll_timed_out": {
                    "type": "boolean", 
                    "description": "Did the poll timeout before all polled tasks completed"
                }
            }, 
            "title": "Response from a task poll request"
        }, 
        "environment_intent_input": {
            "description": "An intentful representation of a environment", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Entity"
        }, 
        "disk_intent_response": {
            "description": "Response object for intentful operations on a disk", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/disk_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Response"
        }, 
        "root_certificate": {
            "description": "Payload for multicluster configuration request.", 
            "required": [
                "local_gateway_role"
            ], 
            "type": "object", 
            "properties": {
                "certificate_chain": {
                    "items": {
                        "$ref": "#/definitions/certificate"
                    }, 
                    "type": "array", 
                    "description": "A certificate chain for validating JWT. At the beginning of this chain is an end-entity certificate whose private key is used to sign the JWT. The end of the chain is the root certificate. If this is passed from one PC to another PC, the root certificate in this chain should be the same as the root certificate to be configured. The chain guarantee the sender owns the end-entity certificate signed by the root certificate to be configured. If this is passed from one PC to PE, the root certificate in the chain on PC should be trusted by PE. This is to verify that the PC sending the root certificate to be configured is trusted by the PE."
                }, 
                "local_gateway_role": {
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Local gateway role in handling root certificate configurations.\n"
                }, 
                "jwt": {
                    "maxLength": 10240, 
                    "type": "string", 
                    "description": "JWT for validating the attached root certificate.", 
                    "format": "byte"
                }, 
                "certificate": {
                    "description": "The root certificate to be configured.", 
                    "$ref": "#/definitions/certificate"
                }
            }, 
            "title": "Root certificates for multicluster configurations"
        }, 
        "environment_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "x-ntnx-enum": [
                        "environment"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for environment list output"
        }, 
        "alert_def_status": {
            "description": "Alert entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/alert_resources"
                }
            }, 
            "title": "Alert entity status"
        }, 
        "log_bundle_parameters": {
            "description": "NCC Log Bundle Parameters.", 
            "type": "object", 
            "properties": {
                "aggregate": {
                    "type": "boolean", 
                    "description": "NCC aggregate."
                }, 
                "destination_list": {
                    "items": {
                        "$ref": "#/definitions/destination"
                    }, 
                    "type": "array"
                }, 
                "upload_parameter_list": {
                    "items": {
                        "$ref": "#/definitions/upload_parameter"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Specify the name of the bundle."
                }
            }, 
            "title": "NCC Log Bundle Parameters"
        }, 
        "image_resources_def_status": {
            "description": "Describes the image status resources object.", 
            "type": "object", 
            "properties": {
                "retrieval_uri_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of URIs where the raw image data can be accessed.\n"
                }, 
                "current_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is currently present."
                }, 
                "image_type": {
                    "$ref": "#/definitions/image_type"
                }, 
                "checksum": {
                    "description": "Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.\n", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "The source URI points at the location of a the source image which is used to create/update image.\n"
                }, 
                "initial_placement_ref_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is requested to be placed at time of creation. This argument will not be honored at time of update.\n"
                }, 
                "version": {
                    "description": "The image version", 
                    "$ref": "#/definitions/image_version_status"
                }, 
                "architecture": {
                    "description": "Indicates the CPU architecture that the image is compatible with. If this is not specified for an image this will default to the CPU architecture type of the cluster.\n", 
                    "$ref": "#/definitions/image_architecture"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "The size of the image in bytes.", 
                    "format": "int64"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk. The expected kind for VMs Disk is vm_disk. The uuid should be the disk device uuid, where the disk device is from disk_list from VM status.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "image_placement_policy_state_list": {
                    "items": {
                        "$ref": "#/definitions/image_placement_policy_state"
                    }, 
                    "type": "array", 
                    "description": "A single image could get multiple policies applied to it. In such cases, each policy state is shown as an element of this list.\n"
                }, 
                "source_options": {
                    "$ref": "#/definitions/source_options"
                }
            }, 
            "title": "Image status resources"
        }, 
        "task_list_intent_response": {
            "description": "Task entity list.", 
            "required": [
                "api_version", 
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/task"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/task_list_metadata_output"
                }
            }, 
            "title": "Task entity list"
        }, 
        "account_reference": {
            "description": "The reference to a account", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a account"
        }, 
        "network_function_chain_resource": {
            "description": "network function chain resource definition.", 
            "type": "object", 
            "properties": {
                "network_function_list": {
                    "items": {
                        "$ref": "#/definitions/network_function_resource"
                    }, 
                    "type": "array", 
                    "description": "Referenced network functions in the chain."
                }
            }, 
            "title": "network function chain resource definition"
        }, 
        "alert_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "x-ntnx-enum": [
                        "alert"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for alert list"
        }, 
        "remote_syslog_module_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_substrate_response_download": {
            "description": "Substrate info for deployment", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference_upload"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Deployment Sustrate Definition for Application."
        }, 
        "credentials": {
            "description": "Credentials to login server", 
            "required": [
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string"
                }, 
                "password": {
                    "type": "string"
                }
            }, 
            "title": "Credentials to login server"
        }, 
        "vm_intent_resource": {
            "description": "Response object for intentful operations on a vm", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Response"
        }, 
        "software_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "webhook_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "webhook", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "webhook"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "batch_metadata": {
            "description": "The batch kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when batch was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "batch uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when batch was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the batch. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the batch. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "batch name", 
                    "maxLength": 80
                }
            }, 
            "title": "batch metadata"
        }, 
        "directory_service_metadata": {
            "description": "The directory_service kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when directory_service was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "directory_service uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when directory_service was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the directory_service. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the directory_service. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "directory_service name", 
                    "maxLength": 80
                }
            }, 
            "title": "directory_service metadata"
        }, 
        "vm_intent_input": {
            "description": "An intentful representation of a vm", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Entity"
        }, 
        "vm_nic": {
            "description": "Virtual Machine NIC.", 
            "type": "object", 
            "properties": {
                "nic_type": {
                    "x-ntnx-enum": [
                        "NORMAL_NIC", 
                        "DIRECT_NIC", 
                        "NETWORK_FUNCTION_NIC"
                    ], 
                    "type": "string", 
                    "description": "The type of this NIC. Defaults to NORMAL_NIC."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.\n", 
                    "format": "UUID"
                }, 
                "ip_endpoint_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "IP endpoints for the adapter. Currently, IPv4 addresses are\nsupported.\n"
                }, 
                "num_queues": {
                    "type": "integer", 
                    "description": "The number of tx/rx queue pairs for this NIC.\n"
                }, 
                "network_function_nic_type": {
                    "x-ntnx-enum": [
                        "INGRESS", 
                        "EGRESS", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of this Network function NIC. Defaults to INGRESS.\n"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "vlan_mode": {
                    "x-ntnx-enum": [
                        "ACCESS", 
                        "TRUNKED"
                    ], 
                    "type": "string", 
                    "description": "VLAN mode."
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "The MAC address for the adapter.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "model": {
                    "x-ntnx-enum": [
                        "VIRTIO", 
                        "E1000"
                    ], 
                    "type": "string", 
                    "description": "The model of this NIC."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Whether or not the NIC is connected. True by default."
                }, 
                "trunked_vlan_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of networks to trunk if vlan_mode is TRUNKED. If empty and VLAN mode is TRUNKED, all VLANs are trunked.\n"
                }
            }, 
            "title": "Virtual Machine NIC"
        }, 
        "task_reference": {
            "description": "The reference to a task", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a task"
        }, 
        "external_repository_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "external_repository", 
                    "x-ntnx-enum": [
                        "external_repository"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for external_repository list"
        }, 
        "vm_recovery_point": {
            "description": "The input object that defines a vm recovery point.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point.", 
                    "maxLength": 64
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster in the availability zone where this recovery\npoint is located.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "source_cluster_reference": {
                            "description": "Reference to the cluster in the source availability zone.\n", 
                            "$ref": "#/definitions/cluster_reference"
                        }, 
                        "source_availability_zone_reference": {
                            "description": "Reference to the availability zone where the source recovery\npoint exists. This need to be set to copy a recovery from some\nother location.\n", 
                            "$ref": "#/definitions/availability_zone_reference"
                        }, 
                        "parent_vm_reference": {
                            "description": "Reference to vm that this recovery point is a snapshot of.\n", 
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "recovery_point_type": {
                            "x-ntnx-enum": [
                                "CRASH_CONSISTENT", 
                                "APPLICATION_CONSISTENT", 
                                "LIVE"
                            ], 
                            "type": "string", 
                            "description": "Crash consistent or Application Consistent recovery point"
                        }, 
                        "creation_time": {
                            "type": "string", 
                            "description": "The time when the the recovery point is created. This is in internet\ndate/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,\nthis represents 20 minutes and 50.52 seconds after the 23rd hour of\nApril 12th, 1985 in UTC.\n", 
                            "format": "date-time"
                        }, 
                        "vm_recovery_point_location_agnostic_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Location agnostic UUID of the recovery point. If a recovery\npoint is replicated to a different clusters, then all the\ninstances of same recovery point will share this UUID.\n"
                        }, 
                        "expiration_time": {
                            "type": "string", 
                            "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T23:20:50.52Z, this represents 20 minutes and\n50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not\nset, then the recovery point never expires.\n", 
                            "format": "date-time"
                        }
                    }, 
                    "title": "Recovery point resources"
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where this recovery point is\nlocated\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "vm recovery point input definitions"
        }, 
        "vm_restore_override_spec": {
            "description": "Properties of the vm that can be overriden.\n", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name.", 
                    "maxLength": 80
                }, 
                "resources": {
                    "description": "vm Resources Definition.", 
                    "type": "object", 
                    "properties": {
                        "nic_list": {
                            "items": {
                                "$ref": "#/definitions/vm_nic"
                            }, 
                            "type": "array", 
                            "description": "NICs attached to the VM."
                        }
                    }, 
                    "title": "vm Resources"
                }
            }, 
            "title": "vm override spec"
        }, 
        "service_account": {
            "description": "Credentials to connect to the directory service.", 
            "required": [
                "username", 
                "password"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username to connect to the directory service."
                }, 
                "password": {
                    "type": "string", 
                    "description": "The password to authenticate the request."
                }
            }, 
            "title": "Directory service service-account"
        }, 
        "capabilities": {
            "description": "Category key capabilities defintion.", 
            "type": "object", 
            "properties": {
                "cardinality": {
                    "type": "integer", 
                    "description": "Cardinality of the category key.", 
                    "format": "int64"
                }
            }, 
            "title": "Category key capabilities definition."
        }, 
        "user_details_object": {
            "description": "Details of logged in user.", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "username of the logged in user."
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the logged in user.", 
                    "format": "UUID"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "Display name of the logged in user."
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "IDP", 
                        "DIRECTORY_SERVICE", 
                        "Xi"
                    ], 
                    "type": "string", 
                    "description": "Type of the logged in user."
                }
            }, 
            "title": "Dictionary of user details."
        }, 
        "ipfix_exporter_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ipfix_exporter list output"
        }, 
        "generic_key_value_pair": {
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "description": "Generic key value pair used for custom attributes.", 
            "title": "Generic key value pair."
        }, 
        "ssh_user_details": {
            "description": "SSH User details", 
            "required": [
                "username", 
                "user_uuid", 
                "entity_list", 
                "access_request_uuid"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "SSH User name"
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "SSH User UUID", 
                    "format": "UUID"
                }, 
                "access_request_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the access request requesting SSH access", 
                    "format": "UUID"
                }, 
                "entity_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "entity_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "Entity UUID"
                            }, 
                            "entity_ip": {
                                "type": "string", 
                                "description": "Entity IP Address"
                            }, 
                            "entity_type": {
                                "x-ntnx-enum": [
                                    "CVM", 
                                    "PRISM_CENTRAL", 
                                    "HYPERVISOR"
                                ], 
                                "type": "string", 
                                "description": "Entity IP Address"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses to the entity which the user requested access to"
                }
            }, 
            "title": "SSH User details"
        }, 
        "batch_response": {
            "description": "List of responses for the API requests in the batch.", 
            "type": "object", 
            "properties": {
                "api_response_list": {
                    "items": {
                        "$ref": "#/definitions/api_response"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Batch api success response"
        }, 
        "webhook_def_status": {
            "description": "Webhook status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Webhook name."
                }, 
                "resources": {
                    "$ref": "#/definitions/webhook_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the webhook."
                }
            }, 
            "title": "Webhook status definition"
        }, 
        "citrix_adapter_list_intent_response": {
            "description": "Response object for intentful operation of citrix_adapters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/citrix_adapter_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/citrix_adapter_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_cost_input_upload": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "type", 
                "interval", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Cost for Application"
        }, 
        "tunnel_reference": {
            "description": "The reference to a tunnel", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tunnel", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tunnel"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tunnel"
        }, 
        "support_case_upload_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_reference_with_customization": {
            "description": "Spec that describes a VM reference along with its customization config.\n", 
            "required": [
                "vm_reference", 
                "vm_customization"
            ], 
            "type": "object", 
            "properties": {
                "vm_customization": {
                    "$ref": "#/definitions/guest_customization"
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "Reference to a VM along with customization spec"
        }, 
        "vm_resources": {
            "description": "VM Resources Definition.", 
            "type": "object", 
            "properties": {
                "num_threads_per_core": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of logical threads per core.", 
                    "format": "int32"
                }, 
                "gpu_list": {
                    "items": {
                        "$ref": "#/definitions/vm_gpu"
                    }, 
                    "type": "array", 
                    "description": "GPUs attached to the VM."
                }, 
                "memory_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Memory size in MiB.", 
                    "format": "int32"
                }, 
                "boot_config": {
                    "description": "Indicates which device the VM should boot from.", 
                    "$ref": "#/definitions/vm_boot_config"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/vm_disk"
                    }, 
                    "type": "array", 
                    "description": "Disks attached to the VM."
                }, 
                "serial_port_list": {
                    "items": {
                        "$ref": "#/definitions/serial_port"
                    }, 
                    "type": "array", 
                    "description": "Serial ports configured on the VM."
                }, 
                "vga_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether VGA console should be enabled or not."
                }, 
                "power_state": {
                    "x-ntnx-enum": [
                        "ON", 
                        "OFF"
                    ], 
                    "type": "string", 
                    "description": "The current or desired power state of the VM."
                }, 
                "num_vcpus_per_socket": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPUs per socket.", 
                    "format": "int32"
                }, 
                "num_sockets": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPU sockets.", 
                    "format": "int32"
                }, 
                "hardware_virtualization_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether hardware assisted virtualization should be enabled for the Guest OS. Once enabled, the Guest OS has the ability to deploy a nested hypervisor.\n"
                }, 
                "storage_config": {
                    "description": "Storage configuration for AHV VMs.", 
                    "$ref": "#/definitions/vm_storage_config"
                }, 
                "machine_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "PSERIES", 
                        "Q35"
                    ], 
                    "type": "string", 
                    "description": "Machine type for the VM. Machine type Q35 is required for secure boot and does not support IDE disks.\n"
                }, 
                "hardware_clock_timezone": {
                    "type": "string", 
                    "description": "VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).\n", 
                    "maxLength": 64
                }, 
                "guest_customization": {
                    "$ref": "#/definitions/guest_customization"
                }, 
                "power_state_mechanism": {
                    "$ref": "#/definitions/vm_power_state_mechanism"
                }, 
                "is_vcpu_hard_pinned": {
                    "type": "boolean", 
                    "description": "Indicates whether the vCPUs should be hard pinned to specific pCPUs."
                }, 
                "vnuma_config": {
                    "description": "Information regarding vNUMA configuration.", 
                    "$ref": "#/definitions/vm_vnuma_config"
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/vm_nic"
                    }, 
                    "type": "array", 
                    "description": "NICs attached to the VM."
                }, 
                "guest_os_id": {
                    "type": "string", 
                    "description": "String that identifies the OS running inside of the guest. Reserved for use by the system. Do not set or modify.", 
                    "maxLength": 64
                }, 
                "is_agent_vm": {
                    "type": "boolean", 
                    "description": "Indicates whether the VM is an agent VM. When their host enters maintenance mode, after normal VMs are evacuated, agent VMs are powered off. When the host is restored, agent VMs are powered on before normal VMs are restored. In other words, agent VMs cannot be HA-protected or live migrated.\n"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_spec"
                }, 
                "enable_cpu_passthrough": {
                    "type": "boolean", 
                    "description": "Indicates whether to passthrough the host's CPU features to the guest. Enabling this will disable live migration of the VM.\n"
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VM should be cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "disable_branding": {
                    "type": "boolean", 
                    "description": "Indicates whether to remove AHV branding from VM firmware tables.\n"
                }
            }, 
            "title": "VM Resources"
        }, 
        "ipfix_exporter_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ipfix_exporter list"
        }, 
        "remote_syslog_module_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_syslog_module list"
        }, 
        "user_list_intent_response": {
            "description": "Response object for intentful operation of users", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/user_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "ip_subnet": {
            "description": "IP subnet provided as an address and prefix length.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 32, 
                    "format": "int32"
                }
            }, 
            "title": "IP subnet."
        }, 
        "ipmi": {
            "description": "Host IPMI info.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPMI IP address."
                }
            }, 
            "title": "Host IPMI info"
        }, 
        "category_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "support_case_upload_metadata": {
            "description": "The support_case_upload kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case_upload was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "support_case_upload uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case_upload was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case_upload. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case_upload. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "support_case_upload name", 
                    "maxLength": 80
                }
            }, 
            "title": "support_case_upload metadata"
        }, 
        "tenant_reference": {
            "description": "The reference to a tenant", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tenant"
        }, 
        "app_substrate_readiness_probe_upload": {
            "description": "Readiness probe for substrate", 
            "type": "object", 
            "properties": {
                "connection_type": {
                    "x-ntnx-enum": [
                        "SSH", 
                        "POWERSHELL"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "connection_port": {
                    "default": 22, 
                    "type": "integer", 
                    "description": ""
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": ""
                }, 
                "address": {
                    "type": "string", 
                    "description": ""
                }, 
                "delay_secs": {
                    "type": "string", 
                    "description": "Delay after substrate provision."
                }, 
                "disable_readiness_probe": {
                    "type": "boolean", 
                    "description": ""
                }, 
                "login_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }
            }, 
            "title": "Readiness probe for substrate"
        }, 
        "host_def_status": {
            "description": "Host Status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Host Name."
                }, 
                "resources": {
                    "description": "Host resources.", 
                    "type": "object", 
                    "properties": {
                        "gpu_driver_version": {
                            "type": "string", 
                            "description": "Host GPU driver version."
                        }, 
                        "failover_cluster": {
                            "$ref": "#/definitions/failover_cluster"
                        }, 
                        "controller_vm": {
                            "$ref": "#/definitions/controller_vm"
                        }, 
                        "ipmi": {
                            "$ref": "#/definitions/ipmi"
                        }, 
                        "rackable_unit_reference": {
                            "$ref": "#/definitions/rackable_unit_reference"
                        }, 
                        "host_type": {
                            "x-ntnx-enum": [
                                "HYPER_CONVERGED", 
                                "COMPUTE_ONLY"
                            ], 
                            "type": "string", 
                            "description": "Host type."
                        }, 
                        "cpu_model": {
                            "type": "string", 
                            "description": "Host CPU model."
                        }, 
                        "host_nics_id_list": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Host NICs."
                        }, 
                        "num_cpu_sockets": {
                            "type": "integer", 
                            "description": "Number of CPU sockets.", 
                            "format": "int64"
                        }, 
                        "windows_domain": {
                            "$ref": "#/definitions/windows_domain"
                        }, 
                        "gpu_list": {
                            "items": {
                                "$ref": "#/definitions/host_gpu"
                            }, 
                            "type": "array", 
                            "description": "List of GPUs on the host."
                        }, 
                        "num_cpu_cores": {
                            "type": "integer", 
                            "description": "Number of CPU cores on Host.", 
                            "format": "int64"
                        }, 
                        "monitoring_state": {
                            "x-ntnx-enum": [
                                "MONITORED", 
                                "NOT_MONITORED"
                            ], 
                            "type": "string", 
                            "description": "Host monitoring status."
                        }, 
                        "cpu_capacity_hz": {
                            "type": "integer", 
                            "description": "Host CPU capacity.", 
                            "format": "int64"
                        }, 
                        "serial_number": {
                            "type": "string", 
                            "description": "Node serial number."
                        }, 
                        "memory_capacity_mib": {
                            "type": "integer", 
                            "description": "Host memory capacity in MiB.", 
                            "format": "int64"
                        }, 
                        "hypervisor": {
                            "$ref": "#/definitions/hypervisor"
                        }, 
                        "block": {
                            "$ref": "#/definitions/block"
                        }, 
                        "host_disks_reference_list": {
                            "items": {
                                "$ref": "#/definitions/disk_reference"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "Host Resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Host Status"
        }, 
        "cluster_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "x-ntnx-enum": [
                        "cluster"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cluster list output"
        }, 
        "permission_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "x-ntnx-enum": [
                        "permission"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for permission list output"
        }, 
        "vm_revert_input": {
            "description": "Input object for the revert API. Pass the UUID of the vm_recovery_point to which the vm is to be reverted to.\n", 
            "required": [
                "vm_recovery_point_uuid"
            ], 
            "type": "object", 
            "properties": {
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Revert API input"
        }, 
        "remote_connection_resources": {
            "description": "Remote connection resources", 
            "type": "object", 
            "properties": {
                "remote_credential": {
                    "$ref": "#/definitions/remote_connection_credential"
                }, 
                "role": {
                    "default": "INITIATOR", 
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Role of the cluster in remote connection"
                }, 
                "remote_address": {
                    "$ref": "#/definitions/address"
                }, 
                "local_connection_info": {
                    "$ref": "#/definitions/remote_connection_info"
                }, 
                "remote_connection_info": {
                    "$ref": "#/definitions/remote_connection_info"
                }
            }, 
            "title": "Remote connection resources"
        }, 
        "docker_registry_resources": {
            "description": "Docker registry resources", 
            "required": [
                "username", 
                "url", 
                "password"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "User name of the docker registry", 
                    "maxLength": 64
                }, 
                "is_enabled": {
                    "type": "boolean", 
                    "description": "Flag to indicate whether the docker registry is enabled or not.\nIf unset, defaults to False.\n"
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate required for the private docker registry"
                }, 
                "url": {
                    "type": "string", 
                    "description": "URL of the docker registry"
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password of the user for the docker registry"
                }, 
                "is_system_default": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Flag to indicate whether the docker registry is a system default\n"
                }
            }, 
            "title": "Docker Registry Resources"
        }, 
        "category_reference": {
            "description": "The reference to a category", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a category"
        }, 
        "vm_snapshot_intent_input": {
            "description": "An intentful representation of a vm_snapshot", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vm_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_snapshot_metadata"
                }
            }, 
            "title": "vm_snapshot Intent Entity"
        }, 
        "external_repository_reference": {
            "description": "The reference to a external_repository", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "external_repository", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "external_repository"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a external_repository"
        }, 
        "open_ldap_configuration": {
            "description": "Configuration for OpenLDAP directory service.", 
            "required": [
                "user_configuration", 
                "user_group_configuration"
            ], 
            "type": "object", 
            "properties": {
                "user_configuration": {
                    "required": [
                        "user_object_class", 
                        "user_search_base", 
                        "username_attribute"
                    ], 
                    "type": "object", 
                    "properties": {
                        "user_search_base": {
                            "type": "string", 
                            "description": "The base DN for user search.", 
                            "maxLength": 200
                        }, 
                        "user_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to users.\n", 
                            "maxLength": 64
                        }, 
                        "username_attribute": {
                            "type": "string", 
                            "description": "Unique identifier for each user which can be used in authentication.\n", 
                            "maxLength": 64
                        }
                    }
                }, 
                "user_group_configuration": {
                    "required": [
                        "group_object_class", 
                        "group_search_base", 
                        "group_member_attribute", 
                        "group_member_attribute_value"
                    ], 
                    "type": "object", 
                    "properties": {
                        "group_search_base": {
                            "type": "string", 
                            "description": "The base DN for group search.\n", 
                            "maxLength": 200
                        }, 
                        "group_member_attribute": {
                            "type": "string", 
                            "description": "The attribute in a group that associates users to the group.\n", 
                            "maxLength": 64
                        }, 
                        "group_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to groups.\n", 
                            "maxLength": 64
                        }, 
                        "group_member_attribute_value": {
                            "type": "string", 
                            "description": "The user attribute value that will be used in group entity to associate user to the group.\n", 
                            "maxLength": 64
                        }
                    }
                }
            }, 
            "title": "OpenLDAP Configuration."
        }, 
        "public_key": {
            "description": "Public Key", 
            "required": [
                "name", 
                "key"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "key": {
                    "type": "string"
                }
            }, 
            "title": "Public Key"
        }, 
        "ipfix_exporter_metadata": {
            "description": "The ipfix_exporter kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ipfix_exporter was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ipfix_exporter uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ipfix_exporter was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ipfix_exporter. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ipfix_exporter. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ipfix_exporter name", 
                    "maxLength": 80
                }
            }, 
            "title": "ipfix_exporter metadata"
        }, 
        "groups_get_entities_response": {
            "description": "Get Entities Response.", 
            "type": "object", 
            "properties": {
                "entity_type": {
                    "type": "string"
                }, 
                "filtered_group_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "filtered_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "group_results": {
                    "items": {
                        "$ref": "#/definitions/groups_group_result"
                    }, 
                    "type": "array"
                }, 
                "total_group_count": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Get Entities Response"
        }, 
        "network_function_chain_metadata": {
            "description": "The network_function_chain kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function_chain was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_function_chain uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function_chain was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function_chain. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function_chain. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_function_chain name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_function_chain metadata"
        }, 
        "environment_intent_response": {
            "description": "Response object for intentful operations on a environment", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/environment_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Response"
        }, 
        "account_intent_resource": {
            "description": "Response object for intentful operations on a account", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/account_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Response"
        }, 
        "blueprint_list_intent_response": {
            "description": "Response object for intentful operation of blueprints", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/blueprint_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cell_reference": {
            "description": "The reference to a cell", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cell", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cell"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cell"
        }, 
        "user_def_status": {
            "description": "User status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the User."
                }, 
                "resources": {
                    "$ref": "#/definitions/user_status_resource"
                }
            }, 
            "title": "User status definition."
        }, 
        "volume_disk_resource_input": {
            "description": "Volume disk configuration.", 
            "type": "object", 
            "properties": {
                "index": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Index of the volume disk in the group.", 
                    "maximum": 16383
                }, 
                "data_source_reference": {
                    "description": "An existing disk or image to clone for the contents of this disk.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "disk_size_mib": {
                    "type": "integer", 
                    "description": "Size of the disk in MiB.", 
                    "format": "int64"
                }, 
                "disk_size_bytes": {
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Storage container UUID on which to create the disk.", 
                    "format": "UUID"
                }
            }, 
            "title": "Volume disk configuration"
        }, 
        "app_variable_input": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "file_item_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "network_function_chain": {
            "description": "network function chain Input Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Network function chain name.", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the network function chain.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/network_function_chain_resource"
                }, 
                "cluster_reference": {
                    "description": "UUID of cluster that hosts the network function chain.", 
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "network function chain Input Definition"
        }, 
        "groups_group_result": {
            "description": "Group Result.", 
            "type": "object", 
            "properties": {
                "entity_results": {
                    "items": {
                        "$ref": "#/definitions/groups_entity"
                    }, 
                    "type": "array"
                }, 
                "group_by_column_value": {
                    "type": "string"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "group_summaries": {
                    "$ref": "#/definitions/groups_group_summary_map"
                }
            }, 
            "title": "Group Result"
        }, 
        "rackable_unit_metadata": {
            "description": "The rackable_unit kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rackable_unit was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "rackable_unit uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rackable_unit was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rackable_unit. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rackable_unit. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "rackable_unit name", 
                    "maxLength": 80
                }
            }, 
            "title": "rackable_unit metadata"
        }, 
        "category_query_response": {
            "description": "Categories query response object.", 
            "type": "object", 
            "properties": {
                "results": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "filtered_entity_count": {
                                "type": "integer", 
                                "description": "Total number of filtered results.", 
                                "format": "int64"
                            }, 
                            "kind": {
                                "type": "string", 
                                "description": "The entity kind."
                            }, 
                            "kind_reference_list": {
                                "items": {
                                    "$ref": "#/definitions/entity_reference"
                                }, 
                                "type": "array", 
                                "description": "List of entity references."
                            }, 
                            "total_entity_count": {
                                "type": "integer", 
                                "description": "Total number of the matched results.", 
                                "format": "int64"
                            }
                        }
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "type": "object", 
                    "description": "Response metadata.", 
                    "properties": {
                        "total_matches": {
                            "type": "integer", 
                            "description": "Total number of matched results.", 
                            "format": "int64"
                        }, 
                        "usage_type": {
                            "$ref": "#/definitions/category_query_usage_type"
                        }, 
                        "group_member_offset": {
                            "type": "integer", 
                            "description": "The offset into the total records set to return per group.\n", 
                            "format": "int64"
                        }, 
                        "group_member_count": {
                            "type": "integer", 
                            "description": "The maximum number of records to return per group.", 
                            "format": "int64"
                        }
                    }
                }
            }, 
            "title": "Category Query Response"
        }, 
        "policy_metadata": {
            "description": "The policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "policy uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "policy metadata"
        }, 
        "network_function_resource": {
            "description": "network function resource definition.", 
            "required": [
                "network_function_type", 
                "category_filter"
            ], 
            "type": "object", 
            "properties": {
                "network_function_type": {
                    "x-ntnx-enum": [
                        "INLINE", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of the network function."
                }, 
                "category_filter": {
                    "description": "Category filter for this network function.", 
                    "$ref": "#/definitions/category_filter"
                }
            }, 
            "title": "Network function resource definition"
        }, 
        "blueprint_resources": {
            "description": "Resources for Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_input"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_input"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_input"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }
            }, 
            "title": "Resources for Blueprint."
        }, 
        "subnet_list_intent_response": {
            "description": "Response object for intentful operation of subnets", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/subnet_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_action_response": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for action"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_response"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Action for Application"
        }, 
        "account_intent_input": {
            "description": "An intentful representation of a account", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Entity"
        }, 
        "volume_group_snapshot_intent_response": {
            "description": "Response object for intentful operations on a volume_group_snapshot", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_snapshot_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_snapshot_metadata"
                }
            }, 
            "title": "volume_group_snapshot Intent Response"
        }, 
        "software_reference": {
            "description": "The reference to a software", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a software"
        }, 
        "permission_intent_input": {
            "description": "An intentful representation of a permission", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Entity"
        }, 
        "blueprint_upload": {
            "description": "App blueprint upload kind", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_upload_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "App blueprint upload kind"
        }, 
        "environment_reference": {
            "description": "The reference to a environment", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a environment"
        }, 
        "docker_registry_intent_input": {
            "description": "An intentful representation of a docker_registry", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Entity"
        }, 
        "attachment_reference_output": {
            "properties": {
                "iscsi_initiator_network_id": {
                    "type": "string", 
                    "description": "IPv4 address of the external client.", 
                    "format": "string"
                }, 
                "enabled_authentications": {
                    "x-ntnx-enum": [
                        "CHAP", 
                        "NONE"
                    ], 
                    "type": "string", 
                    "description": "Which authentication is enabled for client."
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }, 
                "iscsi_initiator_name": {
                    "type": "string", 
                    "description": "Name of the iSCSI initiator of the workload outside Nutanix cluster.\n"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vm_reference"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_name"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_network_id"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Attached iSCSI initiators.", 
            "title": "Attached iSCSI initiators"
        }, 
        "blueprint_download_resources_def_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_response_download"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response_download"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response_download"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_response_download"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_response_download"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_response_download"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }, 
                "is_cloned": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Cloned or original blueprint"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "file_item_intent_resource": {
            "description": "Response object for intentful operations on a file_item", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/file_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Response"
        }, 
        "directory_service_user_status": {
            "description": "A Directory Service user.", 
            "type": "object", 
            "properties": {
                "user_principal_name": {
                    "type": "string", 
                    "description": "The UserPrincipalName of the user from the directory service. It will be same as default user principal name if no upn suffix is enabled for user logon name in directory service.\n", 
                    "maxLength": 104
                }, 
                "directory_service_reference": {
                    "description": "Directory service reference if the user type is directory service.\n", 
                    "$ref": "#/definitions/directory_service_reference"
                }, 
                "default_user_principal_name": {
                    "type": "string", 
                    "description": "The Default UserPrincipalName of the user from the directory service. This is of format samAccountName@domain_name.\n", 
                    "maxLength": 104
                }
            }, 
            "title": "Directory Service user Response."
        }, 
        "host_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "network_function_chain_intent_resource": {
            "description": "Response object for intentful operations on a network_function_chain", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_function_chain_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Response"
        }, 
        "ssh_user_request_details": {
            "description": "SSH User Request details", 
            "required": [
                "username", 
                "user_uuid", 
                "user_key", 
                "user_key_name", 
                "entity_list", 
                "access_request_uuid"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "SSH User name"
                }, 
                "entity_list": {
                    "items": {
                        "required": [
                            "entity_ip", 
                            "entity_type"
                        ], 
                        "type": "object", 
                        "properties": {
                            "entity_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "Entity UUID"
                            }, 
                            "entity_ip": {
                                "type": "string", 
                                "description": "Entity IP Address"
                            }, 
                            "entity_type": {
                                "x-ntnx-enum": [
                                    "CVM", 
                                    "PRISM_CENTRAL", 
                                    "HYPERVISOR"
                                ], 
                                "type": "string", 
                                "description": "Entity type"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List containing entity IP and entity type for each entity"
                }, 
                "user_key_name": {
                    "type": "string", 
                    "description": "Name for the user key to add"
                }, 
                "user_key": {
                    "type": "string", 
                    "description": "key to add for the user"
                }, 
                "user_unix_id": {
                    "type": "integer", 
                    "description": "Linux UID for user"
                }, 
                "access_request_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the access request requesting SSH access", 
                    "format": "UUID"
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "SSH User UUID", 
                    "format": "UUID"
                }
            }, 
            "title": "SSH User Request details"
        }, 
        "groups_field_data": {
            "description": "Group Summary Data.", 
            "type": "object", 
            "properties": {
                "buckets": {
                    "$ref": "#/definitions/groups_bucket_summary_map"
                }, 
                "values": {
                    "items": {
                        "$ref": "#/definitions/groups_timevalue_pair"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "Group Summary Data"
        }, 
        "ipfix_exporter_reference": {
            "description": "The reference to a ipfix_exporter", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ipfix_exporter"
        }, 
        "subnet_resources_def_status": {
            "description": "Subnet creation/modification status.", 
            "type": "object", 
            "properties": {
                "subnet_type": {
                    "x-ntnx-enum": [
                        "VLAN", 
                        "OVERLAY"
                    ], 
                    "type": "string"
                }, 
                "vpc_reference": {
                    "description": "The VPC this subnet belongs to (Only supported on Xi).\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "virtual_switch_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Reference to virtual switch", 
                    "format": "UUID"
                }, 
                "is_external": {
                    "type": "boolean", 
                    "description": "Whether the subnet is external subnet or not."
                }, 
                "vswitch_name": {
                    "type": "string"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "reserved_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IPs that are not considered while allocating IP addresses to Atlas ports.\n"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones from which resources are derived (Only supported on Xi).\n"
                }, 
                "ip_config": {
                    "$ref": "#/definitions/ip_config"
                }, 
                "external_connectivity_state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "External connectivity state (Only supported on Xi)"
                }, 
                "vlan_id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this subnet belongs to (Only supported on Xi). This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "Subnet creation/modification status"
        }, 
        "image_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "x-ntnx-enum": [
                        "image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for image list"
        }, 
        "category_value": {
            "description": "Category value definition.", 
            "type": "object", 
            "properties": {
                "assignment_rule": {
                    "$ref": "#/definitions/assignment_rule"
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value for the category.", 
                    "maxLength": 64
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category value.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Category Value definition."
        }, 
        "app_profile_response": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list", 
                "dependency_list"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "App profile resources"
        }, 
        "controller_vm": {
            "description": "Host controller vm information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Controller VM IP address."
                }, 
                "nat_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Controller VM NAT IP address."
                }, 
                "oplog_usage": {
                    "$ref": "#/definitions/oplog_usage"
                }, 
                "nat_port": {
                    "type": "integer", 
                    "description": "Controller VM NAT port.", 
                    "format": "int32"
                }
            }, 
            "title": "Host Controller VM Info"
        }, 
        "ipfix_exporter_intent_resource": {
            "description": "Response object for intentful operations on a ipfix_exporter", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ipfix_exporter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Response"
        }, 
        "http_proxy_whitelist": {
            "description": "Exempt HTTP traffic to these targets, from going through the configured\nHTTP Proxy.\n", 
            "required": [
                "target", 
                "target_type"
            ], 
            "type": "object", 
            "properties": {
                "target": {
                    "type": "string", 
                    "description": "The target's identifier (as specified by the target_type). For eg:\n\"10.1.1.1\" \"www.google.com\"\n"
                }, 
                "target_type": {
                    "x-ntnx-enum": [
                        "IPV4_ADDRESS", 
                        "IPV4_NETWORK_MASK", 
                        "DOMAIN_NAME_SUFFIX", 
                        "HOST_NAME"
                    ], 
                    "type": "string", 
                    "description": "Supplementing information for the \"target\" field, that describes how\nto interpret it. For eg: If target is a IPv4 address such as\n\"10.1.1.1\", target_type shold be \"IPv4_ADDRESS\". If target is a host\nname such as \"www.google.com\", then target_type shoold be \"HOST_NAME\"\n"
                }
            }, 
            "title": "HTTP Proxy Whitelist"
        }, 
        "directory_service": {
            "description": "The configuration details of the directory service.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the directory service.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "The details of the directory service.", 
                    "required": [
                        "url", 
                        "domain_name", 
                        "directory_type", 
                        "service_account"
                    ], 
                    "type": "object", 
                    "properties": {
                        "open_ldap_configuration": {
                            "description": "Configuration for OpenLDAP.", 
                            "$ref": "#/definitions/open_ldap_configuration"
                        }, 
                        "url": {
                            "type": "string", 
                            "description": "URL of the directory.", 
                            "maxLength": 2000
                        }, 
                        "directory_type": {
                            "x-ntnx-enum": [
                                "ACTIVE_DIRECTORY", 
                                "OPEN_LDAP"
                            ], 
                            "type": "string", 
                            "description": "Type of the directory service."
                        }, 
                        "admin_user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The list of admin users available in the directory service.\n"
                        }, 
                        "domain_name": {
                            "type": "string", 
                            "description": "The domain name of the directory service."
                        }, 
                        "service_account": {
                            "$ref": "#/definitions/service_account"
                        }, 
                        "admin_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of admin user groups available in the directory service.\n"
                        }
                    }, 
                    "title": "Directory service resources"
                }
            }, 
            "title": "Directory service"
        }, 
        "vm_reference": {
            "description": "The reference to a vm", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm"
        }, 
        "rackable_unit_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for rackable_unit list"
        }, 
        "citrix_connector_config_details": {
            "description": "Citrix Connector details.", 
            "type": "object", 
            "properties": {
                "citrix_vm_reference_list": {
                    "items": {
                        "$ref": "#/definitions/vm_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of vm ids registered with citrix cloud."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud."
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud."
                }, 
                "resource_location": {
                    "$ref": "#/definitions/citrix_resource_location"
                }
            }, 
            "title": "Citrix Connector details."
        }, 
        "schedule": {
            "description": "Defines the schedule parameters.", 
            "required": [
                "interval_type", 
                "interval_multiple"
            ], 
            "type": "object", 
            "properties": {
                "interval_type": {
                    "x-ntnx-enum": [
                        "ONCE", 
                        "MINUTELY", 
                        "HOURLY", 
                        "DAILY", 
                        "WEEKLY", 
                        "MONTHLY", 
                        "YEARLY"
                    ], 
                    "type": "string", 
                    "description": "Type of schedule interval. For schedule once, the interval_type is set\nto Once. ONCE is for aperiodic schedules.\n"
                }, 
                "duration_secs": {
                    "type": "integer", 
                    "description": "Duration of the event. If set, an event of duration duration_usecs\nwill repeat as per the recurrence defined in interval_type.\n", 
                    "format": "int64"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "interval_multiple": {
                    "type": "integer", 
                    "description": "Multiple of interval_type.", 
                    "format": "int32"
                }, 
                "day_of_week": {
                    "items": {
                        "x-ntnx-enum": [
                            "MONDAY", 
                            "TUESDAY", 
                            "WEDNESDAY", 
                            "THURSDAY", 
                            "FRIDAY", 
                            "SATURDAY", 
                            "SUNDAY"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "For schedule on weekly basis,like every Monday and Friday 10:00. To use this field, it is\nrequired that start_time (datetime) is set, and the interval_type is set to weekly or\nNONE.  If interval_type is set to NONE, then, only schedule for Monday and Friday once, in\nthis example.\n"
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "is_suspended": {
                    "type": "boolean", 
                    "description": "Whether the schedule is suspended."
                }
            }, 
            "title": "Schedule definition."
        }, 
        "idempotence_identifiers_input": {
            "description": "Resources for the idempotence identifier kind.", 
            "required": [
                "count"
            ], 
            "type": "object", 
            "properties": {
                "client_identifier": {
                    "type": "string", 
                    "description": "The client identifier string."
                }, 
                "count": {
                    "default": 1, 
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of idempotence identifiers provided.", 
                    "maximum": 4096
                }, 
                "valid_duration_in_minutes": {
                    "default": 527040, 
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of minutes from creation time for which idempotence identifier uuid list is valid.", 
                    "maximum": 527040
                }
            }, 
            "title": "Idempotence object"
        }, 
        "mh_vm_def_status": {
            "description": "An intentful representation of a mh_vm status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "mh_vm Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the mh_vm."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the mh_vm, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/mh_vm_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for mh_vm."
                }
            }, 
            "title": "mh_vm Intent Status with placement specified"
        }, 
        "encryption_status": {
            "default": "NOT_SUPPORTED", 
            "x-ntnx-enum": [
                "NOT_SUPPORTED", 
                "DISABLED", 
                "ENABLED"
            ], 
            "type": "string", 
            "description": "Cluster encryption status.", 
            "title": "Cluster encryption status"
        }, 
        "ncc_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ncc", 
                    "x-ntnx-enum": [
                        "ncc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ncc list output"
        }, 
        "image_def_status": {
            "description": "An intentful representation of a image status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "image Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the image."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the image, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/image_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image."
                }
            }, 
            "title": "image Intent Status with placement specified"
        }, 
        "app_substrate_element": {
            "description": "Substrate element definition for Application", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Substrate element for Application"
        }, 
        "vm_gpu_reference": {
            "description": "The reference to a vm_gpu", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_gpu"
        }, 
        "ncc_tags_input": {
            "description": "NCC Tags Input.", 
            "type": "object", 
            "properties": {
                "filter": {
                    "type": "string", 
                    "description": "NCC tags filter."
                }
            }, 
            "title": "NCC Tags Input"
        }, 
        "app_package_reference_upload": {
            "description": "The reference to a app_package", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_package", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_package"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_package"
        }, 
        "directory_service_user_group_status": {
            "description": "A Directory Service user group.", 
            "type": "object", 
            "properties": {
                "distinguished_name": {
                    "type": "string", 
                    "description": "The Distinguished name for the user group."
                }, 
                "directory_service_reference": {
                    "description": "The directory service that this user group belongs to.", 
                    "$ref": "#/definitions/directory_service_reference"
                }
            }, 
            "title": "A Directory Service user group."
        }, 
        "vm_disk_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_disk list"
        }, 
        "environment_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "x-ntnx-enum": [
                        "environment"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for environment list"
        }, 
        "ssh_user_def_status": {
            "description": "SSH User Entity", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ssh_user_details"
                }
            }, 
            "title": "SSH User Entity"
        }, 
        "webhook_post_data": {
            "description": "Data sent in the webhook.", 
            "required": [
                "version", 
                "entity_reference", 
                "event_type", 
                "data"
            ], 
            "type": "object", 
            "properties": {
                "entity_reference": {
                    "description": "The entity reference.", 
                    "$ref": "#/definitions/reference"
                }, 
                "data": {
                    "additionalProperties": true, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "The entity object."
                }, 
                "version": {
                    "default": "1.0", 
                    "type": "string", 
                    "description": "The version of the webhook data."
                }, 
                "event_type": {
                    "description": "Event type", 
                    "$ref": "#/definitions/webhook_event_type"
                }
            }, 
            "title": "Data sent in the webhook"
        }, 
        "resource_utilization_status": {
            "description": "stores resource utilization and limits for a domain", 
            "required": [
                "resource_type", 
                "units", 
                "value"
            ], 
            "properties": {
                "units": {
                    "type": "string", 
                    "description": "The units of the resource type"
                }, 
                "limit": {
                    "type": "integer", 
                    "description": "The resource consumption limit (unspecified is unlimited)"
                }, 
                "value": {
                    "type": "integer", 
                    "description": "The amount of resource consumed"
                }, 
                "resource_type": {
                    "type": "string", 
                    "description": "The type of resource (for example storage, CPUs)"
                }
            }, 
            "title": "Resource Utilization Status"
        }, 
        "citrix_adapter_resource_location": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id.", 
                    "maxLength": 200
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name.", 
                    "maxLength": 200
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "policy", 
                    "x-ntnx-enum": [
                        "policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for policy list output"
        }, 
        "cluster_software": {
            "description": "Cluster software.", 
            "required": [
                "software_type", 
                "version"
            ], 
            "properties": {
                "status": {
                    "default": "INSTALLED", 
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UPGRADING", 
                        "DOWNLOADED"
                    ], 
                    "type": "string", 
                    "description": "Current software status."
                }, 
                "version": {
                    "type": "string"
                }, 
                "software_type": {
                    "$ref": "#/definitions/software_type"
                }
            }, 
            "title": "Cluster software"
        }, 
        "permission_reference": {
            "description": "The reference to a permission", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a permission"
        }, 
        "destination_credentials": {
            "description": "NCC Bundle Destination Credentials.", 
            "required": [
                "user_name"
            ], 
            "type": "object", 
            "properties": {
                "password": {
                    "type": "string", 
                    "description": "Password."
                }, 
                "user_name": {
                    "type": "string", 
                    "description": "User name."
                }
            }, 
            "title": "NCC Bundle Destination Credentials"
        }, 
        "remote_syslog_module_intent_resource": {
            "description": "Response object for intentful operations on a remote_syslog_module", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_module_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Response"
        }, 
        "cloud_credentials_reference": {
            "description": "The reference to a cloud_credentials", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cloud_credentials"
        }, 
        "idempotence_identifiers_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for idempotence_identifiers list"
        }, 
        "app_variable_response": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for variable"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "cluster_operation_mode": {
            "x-ntnx-enum": [
                "NORMAL", 
                "READ_ONLY", 
                "STAND_ALONE", 
                "SWITCH_TO_TWO_NODE", 
                "OVERRIDE"
            ], 
            "type": "string", 
            "description": "Cluster operation mode. - 'NORMAL': Cluster is operating normally. - 'READ_ONLY': Cluster is operating in read only mode. - 'STAND_ALONE': Only one node is operational in the cluster. This is\n                 valid only for single node or two node clusters.\n- 'SWITCH_TO_TWO_NODE': Cluster is moving from single node to two node\n                        cluster.\n- 'OVERRIDE': Valid only for single node cluster. If the user wants to\n              run vms on a single node cluster in read only mode, he\n              can set the cluster peration mode to override. Writes\n              will be allowed in override mode.\n", 
            "title": "Cluster operation mode"
        }, 
        "app_service_input": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }
            }, 
            "title": "Service for Application"
        }, 
        "block": {
            "description": "Host block config info.", 
            "type": "object", 
            "properties": {
                "block_serial_number": {
                    "type": "string", 
                    "description": "Rackable unit serial number."
                }, 
                "block_model": {
                    "type": "string", 
                    "description": "Rackable unit model name."
                }
            }, 
            "title": "Host block information"
        }, 
        "category_query_usage_type": {
            "x-ntnx-enum": [
                "USED_IN", 
                "APPLIED_TO"
            ], 
            "type": "string", 
            "description": "USED_IN - to get policies in which specified categories are used.\nAPPLIED_TO - to get entities attached to specified categories.\n", 
            "title": "Query Usage Type"
        }, 
        "client_auth": {
            "description": "Client authentication config.", 
            "required": [
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "default": "DISABLED", 
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Status of client authentication."
                }, 
                "ca_chain": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Content of CA chain certificate.", 
                    "format": "byte"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Name of CA chain file.", 
                    "maxLength": 64
                }
            }, 
            "title": "Client authentication config"
        }, 
        "remote_syslog_server_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_syslog_server list output"
        }, 
        "external_repository_intent_input": {
            "description": "An intentful representation of a external_repository", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/external_repository"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/external_repository_metadata"
                }
            }, 
            "title": "external_repository Intent Entity"
        }, 
        "volume_group_intent_response": {
            "description": "Response object for intentful operations on a volume_group", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Response"
        }, 
        "remote_syslog_module_metadata": {
            "description": "The remote_syslog_module kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_module was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_syslog_module uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_module was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_module. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_module. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_syslog_module name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_syslog_module metadata"
        }, 
        "project_reference": {
            "description": "The reference to a project", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a project"
        }, 
        "image": {
            "description": "An intentful representation of a image spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "image Name.", 
                    "maxLength": 256
                }, 
                "resources": {
                    "$ref": "#/definitions/image_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image.", 
                    "maxLength": 1000
                }
            }, 
            "title": "image Intent Spec with placement specified"
        }, 
        "user_group": {
            "description": "User Group Input Definition.", 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/user_group_input_resource"
                }
            }, 
            "title": "user group."
        }, 
        "oauth_client_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "access_control_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for access_control_policy list"
        }, 
        "account_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "x-ntnx-enum": [
                        "account"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for account list"
        }, 
        "user_status_resource": {
            "description": "User Resource Definition.", 
            "type": "object", 
            "properties": {
                "projects_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "A list of projects the user is part of."
                }, 
                "access_control_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of ACP references."
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The display name of the user (common name) provided by the directory service.\n"
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "DIRECTORY_SERVICE"
                    ], 
                    "type": "string"
                }, 
                "directory_service_user": {
                    "$ref": "#/definitions/directory_service_user_status"
                }
            }, 
            "title": "User Resource Definition."
        }, 
        "nutanix_guest_tools_spec": {
            "description": "Information regarding Nutanix Guest Tools.", 
            "type": "object", 
            "properties": {
                "ngt_state": {
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UNINSTALLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix guest tools is installed or not."
                }, 
                "iso_mount_state": {
                    "x-ntnx-enum": [
                        "MOUNTED", 
                        "UNMOUNTED"
                    ], 
                    "type": "string", 
                    "description": "Desired mount state of Nutanix Guest Tools ISO.\n"
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix Guest Tools is enabled or not."
                }, 
                "version": {
                    "type": "string", 
                    "description": "Desired Version of Nutanix Guest Tools installed on the VM."
                }, 
                "enabled_capability_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "SELF_SERVICE_RESTORE", 
                            "VSS_SNAPSHOT"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Application names that are enabled."
                }, 
                "credentials": {
                    "description": "Administrator Credentials of UVM. This is required for installing Nutanix Guest Tools on the UVM.\n", 
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Nutanix Guest Tools information"
        }, 
        "citrix_adapter_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "citrix_adapter", 
                    "x-ntnx-enum": [
                        "citrix_adapter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for citrix_adapter list output"
        }, 
        "remote_syslog_module_def_status": {
            "description": "Remote Syslog module list creation/modification status", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/remote_syslog_module_resources"
                }
            }, 
            "title": "Remote Syslog module list creation/modification status"
        }, 
        "volume_group_reference": {
            "description": "The reference to a volume_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a volume_group"
        }, 
        "network_function_chain_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "file_item_intent_response": {
            "description": "Response object for intentful operations on a file_item", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/file_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Response"
        }, 
        "role_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blueprint_download_def_status": {
            "description": "App blueprint download status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "state": {
                    "type": "string"
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_download_resources_def_status"
                }, 
                "description": {
                    "type": "string"
                }
            }, 
            "title": "App blueprint download status"
        }, 
        "external_configurations_spec": {
            "description": "External configurations for the connectors.", 
            "type": "object", 
            "properties": {
                "citrix_connector_config": {
                    "$ref": "#/definitions/citrix_connector_config_details_spec"
                }
            }, 
            "title": "External Connector Configurations."
        }, 
        "rack_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "x-ntnx-enum": [
                        "rack"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for rack list output"
        }, 
        "rackable_unit_resources": {
            "description": "Rackable Unit input definition", 
            "type": "object", 
            "properties": {
                "rack_reference": {
                    "description": "The reference of rack, which this rackable unit belongs to", 
                    "$ref": "#/definitions/rack_reference"
                }
            }, 
            "title": "Rackable Unit Entity"
        }, 
        "oauth_generate_token_request": {
            "description": "Oauth token generate request", 
            "required": [
                "client_name", 
                "client_description", 
                "scopes"
            ], 
            "type": "object", 
            "properties": {
                "scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }, 
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }
            }, 
            "title": "Oauth token generate request"
        }, 
        "app_profile_reference": {
            "description": "The reference to a app_profile", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_profile", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_profile"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_profile"
        }, 
        "ipfix_exporter_def_status": {
            "description": "IPFix exporter configured on PC.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ipfix_exporter_resources"
                }
            }, 
            "title": "IPFix exporter configured on PC."
        }, 
        "access_control_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "image_metadata": {
            "description": "The image kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "image uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "image name", 
                    "maxLength": 80
                }
            }, 
            "title": "image metadata"
        }, 
        "syslog_module": {
            "description": "Remote Syslog Module definition", 
            "type": "object", 
            "properties": {
                "module_name": {
                    "x-ntnx-enum": [
                        "API_AUDIT", 
                        "AUDIT", 
                        "FLOW", 
                        "FLOW_SERVICE_LOGS", 
                        "LCM"
                    ], 
                    "type": "string", 
                    "description": "Name of the Remote Syslog module"
                }, 
                "log_severity_level": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Severity level of the logs", 
                    "maximum": 7, 
                    "format": "int32"
                }
            }, 
            "title": "Remote Syslog Module"
        }, 
        "deployment_status": {
            "description": "Prism central deployment status definition.", 
            "required": [
                "task_uuid", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Task UUID.", 
                    "format": "UUID"
                }, 
                "resources": {
                    "$ref": "#/definitions/prism_central"
                }
            }, 
            "title": "Prism central deployment status"
        }, 
        "blueprint": {
            "description": "An intentful representation of a blueprint spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "blueprint Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for blueprint.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "blueprint Intent Spec with placement specified"
        }, 
        "remote_connection_list_intent_response": {
            "description": "Response object for intentful operation of remote_connections", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_connection_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_disk_reference": {
            "description": "The reference to a vm_disk", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_disk"
        }, 
        "policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_recovery_point_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_recovery_point list output"
        }, 
        "environment_resources_def_status": {
            "description": "Status of the environment", 
            "type": "object", 
            "properties": {
                "project_reference": {
                    "description": "The project the environment is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Environment."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Environment."
                }
            }, 
            "title": "Status of the environment"
        }, 
        "category_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "x-ntnx-enum": [
                        "category"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for category list"
        }, 
        "scope_right_hand_side": {
            "properties": {
                "categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "The category values represented as a dictionary of key -> list of values. e.g.{\"env\":[\"env1\", \"env2\"]}\n"
                }, 
                "collection": {
                    "x-ntnx-enum": [
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "A representative term for supported groupings of entities. ALL = All the entities of a given kind.\n"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The explicit list of UUIDs for the given kind."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "collection"
                    ]
                }, 
                {
                    "required": [
                        "categories"
                    ]
                }, 
                {
                    "required": [
                        "uuid_list"
                    ]
                }
            ], 
            "type": "object", 
            "description": "The right hand side of an scope expression.", 
            "title": "The right hand side (RHS) of an scope expression."
        }, 
        "file_item_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "x-ntnx-enum": [
                        "file_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for file_item list output"
        }, 
        "app_published_service_response": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Published service definition"
        }, 
        "oauth_client_response": {
            "description": "Oauth client information", 
            "required": [
                "client_id", 
                "client_secret", 
                "client_name", 
                "client_description", 
                "redirect_uris", 
                "default_scopes"
            ], 
            "type": "object", 
            "properties": {
                "redirect_uris": {
                    "items": {
                        "type": "string", 
                        "description": "entry for redirect URIs"
                    }, 
                    "type": "array"
                }, 
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "client id of the Oauth Client"
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "client secret of the Oauth Client"
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "default_scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth Client response"
        }, 
        "cluster_service_list": {
            "items": {
                "default": "AOS", 
                "x-ntnx-enum": [
                    "AOS", 
                    "PRISM_CENTRAL", 
                    "CLOUD_DATA_GATEWAY", 
                    "AFS", 
                    "WITNESS", 
                    "XI_PORTAL", 
                    "ONE_NODE", 
                    "TWO_NODE"
                ], 
                "type": "string"
            }, 
            "type": "array", 
            "description": "Array of enabled cluster services. For example, a cluster can function\nas both AOS and cloud data gateway.\n- 'AOS': Regular Prism Element\n- 'PRISM_CENTRAL': Prism Central\n- 'CLOUD_DATA_GATEWAY': Cloud backup and DR gateway\n- 'AFS': Cluster for file server\n- 'WITNESS' : Witness cluster\n- 'XI_PORTAL': Xi cluster\n- 'ONE_NODE_CLUSTER': Single node backup cluster\n- 'TWO_NODE_CLUSTER': Two node cluster\n", 
            "title": "List of Cluster Services"
        }, 
        "nfs_configuration": {
            "description": "Configuration for accessing the external repository using the NFS protocol.\n", 
            "required": [
                "server_address_list", 
                "exported_directory", 
                "access_mode"
            ], 
            "type": "object", 
            "properties": {
                "access_mode": {
                    "default": "READ_ONLY", 
                    "x-ntnx-enum": [
                        "READ_ONLY", 
                        "READ_WRITE"
                    ], 
                    "type": "string", 
                    "description": "Access mode determines whether the NFS repository will be mounted in read-only or read-write mode.\n"
                }, 
                "server_address_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array", 
                    "description": "IPv4 address of the NFS service. (1) Port other than 2049 for NFS is not supported. (2) The TCP port on which mount requests are accepted will be discovered. (3) DNS name and IPv6 addresses are not supported.\n", 
                    "maxItems": 1
                }, 
                "exported_directory": {
                    "type": "string", 
                    "description": "The pathname of the directory exported by the NFS service.", 
                    "maxLength": 512
                }
            }, 
            "title": "NFS configuration"
        }, 
        "ip_pool": {
            "description": "IP pool.", 
            "type": "object", 
            "properties": {
                "range": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Range of IPs (example: 10.0.0.9 10.0.0.19).\n"
                }
            }, 
            "title": "IP pool"
        }, 
        "subnet_intent_response": {
            "description": "Response object for intentful operations on a subnet", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Response"
        }, 
        "vpc_reference": {
            "description": "The reference to a vpc", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vpc"
        }, 
        "ssh_user_intent_resource": {
            "description": "Response object for intentful operations on a ssh_user", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ssh_user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Response"
        }, 
        "network_function_chain_intent_input": {
            "description": "An intentful representation of a network_function_chain", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Entity"
        }, 
        "blueprint_clone_response": {
            "description": "Response containing the uuid of the cloned blueprint", 
            "required": [
                "blueprint_uuid"
            ], 
            "type": "object", 
            "properties": {
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Response containing the uuid of the cloned blueprint"
        }, 
        "csrs_spec": {
            "description": "Spec for CSRs download. If node uuid list is empty, all cluster nodes will\nbe assumed.\n", 
            "type": "object", 
            "properties": {
                "node_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Spec for CSRs download"
        }, 
        "vm_snapshot_reference": {
            "description": "The reference to a vm_snapshot", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_snapshot", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_snapshot"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_snapshot"
        }, 
        "blueprint_deployment_input": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action"
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment definition for Application."
        }, 
        "vm_disk_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "entity_compliance_status": {
            "description": "An entity's compliance status details.", 
            "type": "object", 
            "properties": {
                "reason": {
                    "type": "string", 
                    "description": "If the entity in not in compliance, this field shows the reason as to why not.\n"
                }, 
                "compliance_state": {
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "entity_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The entity UUID."
                }, 
                "policy_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The policy UUID."
                }
            }, 
            "title": "Entity Compliance with a Policy"
        }, 
        "citrix_adapter_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "citrix_adapter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "citrix_adapter"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_variable_input_upload": {
            "description": "Variable definition for application.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "role_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "x-ntnx-enum": [
                        "role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for role list output"
        }, 
        "network_function_chain_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_function_chain list"
        }, 
        "project_intent_input": {
            "description": "An intentful representation of a project", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Entity"
        }, 
        "prism_central_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "api_response": {
            "description": "API Response", 
            "required": [
                "path_and_params", 
                "api_response", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string"
                }, 
                "api_response": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object"
                }, 
                "path_and_params": {
                    "type": "string", 
                    "description": "The part of API response that contains information such as the path\nand query.\n"
                }
            }, 
            "title": "API response"
        }, 
        "software_metadata": {
            "description": "The software kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when software was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "software uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when software was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the software. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the software. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "software name", 
                    "maxLength": 80
                }
            }, 
            "title": "software metadata"
        }, 
        "ssh_user_list": {
            "description": "SSH User list", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ssh_user_details"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_list_metadata"
                }
            }, 
            "title": "SSH User list"
        }, 
        "disk_state_list": {
            "items": {
                "x-ntnx-enum": [
                    "DATA_MIGRATION_INITIATED", 
                    "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE", 
                    "READY_TO_DETACH", 
                    "DATA_MIGRATED", 
                    "MARKED_FOR_REMOVAL", 
                    "ONLINE", 
                    "BAD", 
                    "MOUNTED", 
                    "UNDER_DIAGNOSIS"
                ], 
                "type": "string"
            }, 
            "type": "array", 
            "description": "Array of disk states\n- 'DataMigrationInitiated': Data Migration Initiated.\n- 'MarkedForRemovalButNotDetachable': Marked for removal, data\n   migration is in progress.\n- 'ReadyToDetach': Flag to indicate the disk is detachable.\n- 'DataMigrated': Flag to indicate if data migration is completed for\n   this disk.\n- 'MarkedForRemoval': Flag to indicate if the disk is marked for\n   removal.\n- 'Online': Flag to indicate if the disk is online.\n- 'Bad': Flag to indicate if the disk is bad.\n- 'Mounted': Flag to indicate if the disk is mounted.\n- 'UnderDiagnosis': Flag to indicate if the disk is under diagnosis.\n", 
            "title": "Disk State List"
        }, 
        "ssh_user_intent_input": {
            "description": "An intentful representation of a ssh_user", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Entity"
        }, 
        "certificate_spec_upload_input": {
            "description": "Input spec for certificate upload.", 
            "required": [
                "spec_list"
            ], 
            "type": "object", 
            "properties": {
                "spec_list": {
                    "items": {
                        "$ref": "#/definitions/certificate_spec"
                    }, 
                    "type": "array", 
                    "description": "List of certificate specs"
                }
            }, 
            "title": "Input spec for certificate upload"
        }, 
        "permission_intent_response": {
            "description": "Response object for intentful operations on a permission", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/permission_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Response"
        }, 
        "image_intent_resource": {
            "description": "Response object for intentful operations on a image", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Response"
        }, 
        "vm_recovery_point_def_status": {
            "description": "The output object that defines a vm recovery point", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vm recovery point."
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where this recovery point is\nlocated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vm, if in an error state."
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster in the availability zone where this recovery\npoint is located.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "consistency_group_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "This field is same for all the entities (irrespective of kind) that\nwere snapshotted together.\n"
                        }, 
                        "source_availability_zone_reference": {
                            "description": "Reference to the availability zone where the source recovery\npoint exists. This need to be set to copy a recovery from some\nother location.\n", 
                            "$ref": "#/definitions/availability_zone_reference"
                        }, 
                        "source_cluster_reference": {
                            "description": "Reference to the cluster in the source availability zone. This\nneed to be set to copy a recovery from some other location.\n", 
                            "$ref": "#/definitions/cluster_reference"
                        }, 
                        "recoverability": {
                            "type": "object", 
                            "description": "Recoverability of the recovery point. Will be populated only for LIVE snapshots.\n", 
                            "properties": {
                                "status": {
                                    "x-ntnx-enum": [
                                        "RECOVERABLE", 
                                        "PARTIAL_RECOVERABLE", 
                                        "UNRECOVERABLE"
                                    ], 
                                    "type": "string", 
                                    "description": "Recoverability status of the recovery point."
                                }, 
                                "reason": {
                                    "type": "string", 
                                    "description": "Reason for the recoverability status of the recovery point.\n", 
                                    "maxLength": 256
                                }
                            }
                        }, 
                        "parent_vm_reference": {
                            "description": "Reference to vm that this recovery point is a snapshot of.\n", 
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "recovery_point_type": {
                            "x-ntnx-enum": [
                                "CRASH_CONSISTENT", 
                                "APPLICATION_CONSISTENT", 
                                "LIVE"
                            ], 
                            "type": "string", 
                            "description": "Crash consistent or Application Consistent recovery point"
                        }, 
                        "vm_spec": {
                            "description": "Spec of the vm at the time of snapshot.\n", 
                            "$ref": "#/definitions/vm"
                        }, 
                        "vm_recovery_point_location_agnostic_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Location agnostic UUID of the recovery point. If a recovery\npoint is replicated to a different clusters, then all the\ninstances of same recovery point will share this UUID.\n", 
                            "format": "UUID"
                        }, 
                        "creation_time": {
                            "type": "string", 
                            "description": "The time when the the recovery point is created. This is in internet\ndate/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,\nthis represents 20 minutes and 50.52 seconds after the 23rd hour of\nApril 12th, 1985 in UTC.\n"
                        }, 
                        "vm_metadata": {
                            "description": "Metadata of the vm at the time of snapshot.\n", 
                            "$ref": "#/definitions/vm_metadata"
                        }, 
                        "expiration_time": {
                            "type": "string", 
                            "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T23:20:50.52Z, this represents 20 minutes and\n50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not\nset, then the recovery point never expires.\n", 
                            "format": "date-time"
                        }
                    }, 
                    "title": "Recovery point resources"
                }
            }, 
            "title": "vm recovery point output definitions"
        }, 
        "vm_recovery_point_intent_input": {
            "description": "An intentful representation of a vm_recovery_point", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Entity"
        }, 
        "volume_group_snapshot": {
            "description": "The input object that defines a volume group snapshot.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the snapshot.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Volume group snapshot resources.", 
                    "type": "object", 
                    "properties": {
                        "expiration_time_msecs": {
                            "type": "integer", 
                            "description": "The time when this snapshot expires and will be garbage collected.\nIf not set, then the snapshot never expires.\n"
                        }, 
                        "volume_group_reference": {
                            "$ref": "#/definitions/volume_group_reference"
                        }
                    }, 
                    "title": "Volume group snapshot resources"
                }
            }, 
            "title": "Volume group snapshot input definitions"
        }, 
        "file_item_resources_def_status": {
            "description": "File item object", 
            "type": "object", 
            "properties": {
                "retrieval_uri_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of URIs where the raw file_item data can be accessed."
                }, 
                "checksum": {
                    "description": "Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "URI that points at the file to create the file_item from."
                }, 
                "source_auth": {
                    "description": "Authentication object needed to fetch the source.", 
                    "$ref": "#/definitions/source_auth"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk or image. The expected kind for VMs is vm_disk and for Images is image. In case of VM Disk the uuid should be the disk device uuid, where the disk device is from disk_list from VM status. In case of Images the uuid should be the uuid of the image.", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "File item object"
        }, 
        "vm_guest_power_state_transition_config": {
            "description": "Extra configs related to power state transition.", 
            "type": "object", 
            "properties": {
                "should_fail_on_script_failure": {
                    "type": "boolean", 
                    "description": "Indicates whether to abort ngt shutdown/reboot if script fails."
                }, 
                "enable_script_exec": {
                    "type": "boolean", 
                    "description": "Indicates whether to execute set script before ngt shutdown/reboot."
                }
            }, 
            "title": "Power State Transition Config"
        }, 
        "vm_gpu_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "directory_service_search_metadata": {
            "description": "The parameters to search for directory service.", 
            "required": [
                "query"
            ], 
            "type": "object", 
            "properties": {
                "query": {
                    "type": "string", 
                    "description": "The search string."
                }, 
                "searched_attribute_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The attributes for search operation. If not specified, search is\nperformed with the common name.\n"
                }, 
                "returned_attribute_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The attributes the search operation returns. If not available, a list\nof default attributes is returned.\n"
                }, 
                "is_wildcard_search": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "The attribute that tells if the query is a wildcard match or exact match query.\n"
                }
            }, 
            "title": "Directory service search metadata"
        }, 
        "resource_domain_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blueprint_clone_input": {
            "description": "Clone Blueprint request.", 
            "required": [
                "metadata", 
                "blueprint_name"
            ], 
            "type": "object", 
            "properties": {
                "blueprint_name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Clone Blueprint request."
        }, 
        "nutanix_guest_tools_status": {
            "description": "Information regarding Nutanix Guest Tools.", 
            "type": "object", 
            "properties": {
                "available_version": {
                    "type": "string", 
                    "description": "Version of Nutanix Guest Tools available on the cluster."
                }, 
                "ngt_state": {
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UNINSTALLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix guest tools is installed or not."
                }, 
                "iso_mount_state": {
                    "x-ntnx-enum": [
                        "MOUNTED", 
                        "UNMOUNTED"
                    ], 
                    "type": "string", 
                    "description": "Desired mount state of Nutanix Guest Tools ISO.\n"
                }, 
                "guest_os_version": {
                    "type": "string", 
                    "description": "Version of the operating system on the VM."
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix Guest Tools is enabled or not."
                }, 
                "version": {
                    "type": "string", 
                    "description": "Version of Nutanix Guest Tools installed on the VM."
                }, 
                "enabled_capability_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "SELF_SERVICE_RESTORE", 
                            "VSS_SNAPSHOT"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Application names that are enabled."
                }, 
                "credentials": {
                    "description": "Administrator Credentials of UVM. This is required for installing Nutanix Guest Tools on the UVM.\n", 
                    "$ref": "#/definitions/credentials"
                }, 
                "vss_snapshot_capable": {
                    "type": "boolean", 
                    "description": "Whether the VM is configured to take VSS snapshots through NGT.\n"
                }, 
                "is_reachable": {
                    "type": "boolean", 
                    "description": "Communication from VM to CVM is active or not."
                }, 
                "vm_mobility_drivers_installed": {
                    "type": "boolean", 
                    "description": "Whether VM mobility drivers are installed in the VM."
                }
            }, 
            "title": "Nutanix Guest Tools status"
        }, 
        "role": {
            "description": "Role Input Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Role name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "permission_reference_list": {
                            "items": {
                                "$ref": "#/definitions/permission_reference"
                            }, 
                            "type": "array", 
                            "description": "List of permission references."
                        }
                    }, 
                    "title": "Role Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the role.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Role."
        }, 
        "vm_snapshot_def_status": {
            "description": "The output object that defines a VM snapshot", 
            "required": [
                "snapshot_file_list"
            ], 
            "type": "object", 
            "properties": {
                "consistency_group_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "This field is same for all the entities (irrespective of kind) that\nwere snapshotted together.\n"
                }, 
                "location_agnostic_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "If a snapshot is replicated to a different clusters, then all the\ninstances of same snapshot will share this UUID.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the snapshot"
                }, 
                "snapshot_file_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "file_path": {
                                "type": "string", 
                                "description": "Pathname of the file that participated in the snapshot.\n"
                            }, 
                            "snapshot_file_path": {
                                "type": "string", 
                                "description": "Pathname of the snapshot of the file."
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "Describes the files that are included in the snapshot.\n"
                }, 
                "snapshot_type": {
                    "x-ntnx-enum": [
                        "CRASH_CONSISTENT", 
                        "APPLICATION_CONSISTENT"
                    ], 
                    "type": "string", 
                    "description": "Crash consistent or Application Consistent snapshot"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the VM snapshot."
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "entity_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "UUID of the base entity for which snapshot need to be taken\n", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Snapshot Resources"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the {kind}}, if in an error state."
                }, 
                "expiration_time_msecs": {
                    "type": "integer", 
                    "description": "The time when this snapshot expires and will be garbage collected.\nIf not set, then the snapshot never expires.\n"
                }
            }, 
            "title": "VM snapshot output definitions"
        }, 
        "idempotence_identifiers_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "user_group_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "mh_vm_resources": {
            "description": "VM Resources Definition.", 
            "type": "object", 
            "properties": {
                "storage_config": {
                    "description": "Storage configuration of the VM.", 
                    "$ref": "#/definitions/mh_vm_storage_config"
                }, 
                "parent_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_spec"
                }
            }, 
            "title": "VM Resources"
        }, 
        "upgrade_notification": {
            "description": "Pre upgrade notification", 
            "type": "object", 
            "properties": {
                "proceed_message": {
                    "type": "string"
                }, 
                "cancel_message": {
                    "type": "string"
                }, 
                "description_item_list": {
                    "items": {
                        "$ref": "#/definitions/description_item"
                    }, 
                    "type": "array", 
                    "description": "Description items of the notification"
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title of the notification"
                }
            }, 
            "title": "Pre upgrade notification"
        }, 
        "groups_entity": {
            "description": "An Individual Entity.", 
            "type": "object", 
            "properties": {
                "entity_id": {
                    "type": "string"
                }, 
                "data": {
                    "items": {
                        "$ref": "#/definitions/groups_field_data"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Entity"
        }, 
        "prism_central_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for prism_central list output"
        }, 
        "image_version_status": {
            "description": "The image version, which is composed of a product name and product version.\n", 
            "required": [
                "product_name", 
                "product_version"
            ], 
            "type": "object", 
            "properties": {
                "product_version": {
                    "type": "string", 
                    "description": "Version string for the disk image."
                }, 
                "product_name": {
                    "type": "string", 
                    "description": "Name of the producer/distribution of the image. For example windows or red hat.\n"
                }
            }, 
            "title": "Image version"
        }, 
        "alert_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "x-ntnx-enum": [
                        "alert"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for alert list output"
        }, 
        "permission_list_intent_response": {
            "description": "Response object for intentful operation of permissions", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/permission_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "groups_sort_downsampling_function": {
            "x-ntnx-enum": [
                "MAX", 
                "MIN", 
                "FIRST", 
                "LAST", 
                "LATEST"
            ], 
            "type": "string", 
            "description": "Downsampling function to take time series data and resolve to one value for sorting purposes.\n", 
            "title": "Entities Request Downsampling Function"
        }, 
        "host_list_intent_response": {
            "description": "Response object for intentful operation of hosts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/host_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "mh_vm_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "resource_charge_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for resource_charge list"
        }, 
        "support_case_upload_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for support_case_upload list"
        }, 
        "cloud_credentials_intent_resource": {
            "description": "Response object for intentful operations on a cloud_credentials", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_credentials_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Response"
        }, 
        "vm_disk_metadata": {
            "description": "The vm_disk kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_disk was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_disk uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_disk was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_disk. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_disk. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_disk name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_disk metadata"
        }, 
        "disk_def_status": {
            "description": "Disk object.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the disk."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the disk, if in an error state."
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Disk resources.", 
                    "properties": {
                        "host_reference": {
                            "$ref": "#/definitions/reference"
                        }, 
                        "enabled_features_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "CAN_ADD_AS_NEW_DISK", 
                                    "CAN_ADD_AS_OLD_DISK", 
                                    "BOOT_DISK", 
                                    "ONLY_BOOT_DISK", 
                                    "SELF_ENCRYPTING_ENABLED", 
                                    "PASSWORD_PROTECTED", 
                                    "SELF_MANAGED_NVME"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Disk feature flags\n- 'CanAddAsNewDisk': Flag to indicate if this disk can be added as\n   new disk.\n- 'CanAddAsOldDisk': Flag to indicate if the disk can be added as\n   old disk.\n- 'BootDisk': Flag to indicate if its a boot disk.\n- 'OnlyBootDisk': Flag to indicate if the disk is boot only and\n   no disk operation to be run on it.\n- 'SelfEncryptingEnabled': Flag to indicate if the disk has self\n   encryption enabled.\n- 'PasswordProtected': Flag to indicate if the disk is password\n   protected.\n- 'SelfManagedNvme': Flag to indicate if the NVMe disk is self\n  managed and no host/CVM reboot required.\n"
                        }, 
                        "vendor": {
                            "type": "string", 
                            "description": "Disk vendor."
                        }, 
                        "mount_path": {
                            "type": "string", 
                            "description": "Mount path."
                        }, 
                        "storage_pool_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Storage pool uuid.", 
                            "format": "UUID"
                        }, 
                        "state_list": {
                            "$ref": "#/definitions/disk_state_list"
                        }, 
                        "storage_tier_type": {
                            "x-ntnx-enum": [
                                "PCIE_SSD", 
                                "SATA_SSD", 
                                "HDD"
                            ], 
                            "type": "string", 
                            "description": "Storage tier type."
                        }, 
                        "size_bytes": {
                            "type": "integer", 
                            "description": "Disk size in bytes.", 
                            "format": "int64"
                        }, 
                        "slot_number": {
                            "type": "integer", 
                            "description": "Disk location in a node.", 
                            "format": "int32"
                        }, 
                        "serial_number": {
                            "type": "string", 
                            "description": "Disk serial number."
                        }, 
                        "model": {
                            "type": "string", 
                            "description": "Disk model."
                        }, 
                        "firmware_version": {
                            "type": "string", 
                            "description": "Firmware version."
                        }
                    }
                }
            }, 
            "title": "Disk object"
        }, 
        "cluster_network_entity": {
            "description": "This defines a generic network entity on the cluster, which includes it's\naddress, authentication details, and related metadata.\n", 
            "required": [
                "address"
            ], 
            "type": "object", 
            "properties": {
                "credentials": {
                    "description": "Username and password for authentication, if applicable.\n", 
                    "$ref": "#/definitions/credentials"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name for the network entity (optional)"
                }, 
                "proxy_type_list": {
                    "items": {
                        "default": "HTTP", 
                        "x-ntnx-enum": [
                            "HTTP", 
                            "HTTPS", 
                            "SOCKS"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Network address details for this entity. This tells us how to\nlogically reach this entity.\n", 
                    "$ref": "#/definitions/address"
                }
            }, 
            "title": "Cluster Network Entity"
        }, 
        "app_service_input_upload": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference_upload"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }
            }, 
            "title": "Service for Application"
        }, 
        "cloud_credentials_resources": {
            "description": "Cloud credentials resources", 
            "required": [
                "cloud_type"
            ], 
            "type": "object", 
            "properties": {
                "is_default": {
                    "type": "boolean", 
                    "description": "Indicates if it is the default credentials"
                }, 
                "key_id": {
                    "type": "string", 
                    "description": "Access key for AWS, or subscription id for Azure\n"
                }, 
                "cloud_type": {
                    "$ref": "#/definitions/cloud_type"
                }, 
                "secure_id": {
                    "type": "string", 
                    "description": "Secret key for AWS, or full file path of the Azure client certificate\nfile(<file_name>.pem)\n"
                }
            }, 
            "title": "Cloud Credentials resources"
        }, 
        "image_placement_policy": {
            "description": "Image placement policy", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Image placement policy name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/image_placement_policy_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for Image placement policy.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Image placement policy"
        }, 
        "volume_group_intent_input": {
            "description": "An intentful representation of a volume_group", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Entity"
        }, 
        "webhook_reference": {
            "description": "The reference to a webhook", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "webhook", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "webhook"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a webhook"
        }, 
        "directory_service_intent_input": {
            "description": "An intentful representation of a directory_service", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Entity"
        }, 
        "disk_address": {
            "description": "Disk Address.", 
            "required": [
                "adapter_type", 
                "device_index"
            ], 
            "type": "object", 
            "properties": {
                "device_index": {
                    "type": "integer"
                }, 
                "adapter_type": {
                    "x-ntnx-enum": [
                        "SCSI", 
                        "IDE", 
                        "PCI", 
                        "SATA", 
                        "SPAPR"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Disk Address"
        }, 
        "tunnel_reference_upload": {
            "description": "The reference to a tunnel", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tunnel", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tunnel"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tunnel"
        }, 
        "docker_registry_image_search_list_intent_response": {
            "description": "Docker registry image search results response", 
            "required": [
                "metadata", 
                "api_version"
            ], 
            "type": "object", 
            "properties": {
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_image_status"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_list_metadata"
                }
            }, 
            "title": "Docker registry image search results response"
        }, 
        "volume_group_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blueprint_deployment_response_download": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response_download"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment Definition for Application."
        }, 
        "remote_connection_credential": {
            "description": "Credentials to connect with remote endpoint", 
            "type": "object", 
            "properties": {
                "auth_type": {
                    "x-ntnx-enum": [
                        "BASIC", 
                        "BEARER"
                    ], 
                    "type": "string", 
                    "description": "Type of credentials to use"
                }, 
                "bearer_token": {
                    "type": "string", 
                    "description": "token to use with bearer authorization, must for BEARER auth_type\n"
                }, 
                "basic_credential": {
                    "$ref": "#/definitions/basic_credential"
                }
            }, 
            "title": "Credential to connect with remote endpoint"
        }, 
        "source_options": {
            "description": "Options while accessing image source.\n", 
            "type": "object", 
            "properties": {
                "allow_insecure_connection": {
                    "type": "boolean", 
                    "description": "allow_insecure_connection is an option for the user to ignore the server certificate verification while accessing source_uri (image location). If it has value = true, it ignores server certificate verification. If it has value = false, it does regular server certificate verification.\n"
                }
            }, 
            "title": "Source options"
        }, 
        "vm_snapshot_intent_resource": {
            "description": "Response object for intentful operations on a vm_snapshot", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_snapshot_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_snapshot"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_snapshot_metadata"
                }
            }, 
            "title": "vm_snapshot Intent Response"
        }, 
        "external_repository_metadata": {
            "description": "The external_repository kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when external_repository was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "external_repository", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "external_repository"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "external_repository uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when external_repository was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the external_repository. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the external_repository. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "external_repository name", 
                    "maxLength": 80
                }
            }, 
            "title": "external_repository metadata"
        }, 
        "idempotence_identifiers_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for idempotence_identifiers list output"
        }, 
        "access_control_policy_intent_response": {
            "description": "Response object for intentful operations on a access_control_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/access_control_policy_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_metadata"
                }
            }, 
            "title": "access_control_policy Intent Response"
        }, 
        "idempotence_identifiers_reference": {
            "description": "The reference to a idempotence_identifiers", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a idempotence_identifiers"
        }
    }, 
    "security": [
        {
            "basicAuth": []
        }
    ], 
    "swagger": "2.0"
}